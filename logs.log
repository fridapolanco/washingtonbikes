2024-11-11 19:17:49,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 19:17:49,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 19:17:49,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 19:17:49,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 19:17:51,223:INFO:Initializing load_model()
2024-11-11 19:17:51,223:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:17:51,303:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:18:03,791:INFO:Initializing load_model()
2024-11-11 19:18:03,791:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:18:03,817:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:28:37,121:INFO:Initializing load_model()
2024-11-11 19:28:37,121:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:28:37,132:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:28:40,193:INFO:Initializing load_model()
2024-11-11 19:28:40,193:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:28:40,219:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:31:55,605:INFO:Initializing load_model()
2024-11-11 19:31:55,605:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:31:55,620:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:31:57,764:INFO:Initializing load_model()
2024-11-11 19:31:57,764:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:31:57,800:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:32:23,931:INFO:Initializing load_model()
2024-11-11 19:32:23,931:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:32:23,946:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:32:25,930:INFO:Initializing load_model()
2024-11-11 19:32:25,930:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:32:25,972:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:33:31,261:INFO:Initializing load_model()
2024-11-11 19:33:31,261:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:33:31,299:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:33:33,538:INFO:Initializing load_model()
2024-11-11 19:33:33,538:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:33:33,585:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:34:31,682:INFO:Initializing load_model()
2024-11-11 19:34:31,682:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:34:31,731:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:34:33,643:INFO:Initializing load_model()
2024-11-11 19:34:33,643:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 19:34:33,692:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:48:12,266:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:48:15,586:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:53:51,788:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:53:53,955:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:55:10,684:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 19:55:12,217:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:06:24,581:INFO:Initializing load_model()
2024-11-11 20:06:24,583:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:06:24,608:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:06:26,106:INFO:Initializing load_model()
2024-11-11 20:06:26,106:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:06:26,135:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:06:26,209:INFO:Initializing predict_model()
2024-11-11 20:06:26,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026470FA5A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002641920B6A0>)
2024-11-11 20:06:26,217:INFO:Checking exceptions
2024-11-11 20:06:26,217:INFO:Preloading libraries
2024-11-11 20:06:26,217:INFO:Set up data.
2024-11-11 20:06:26,217:INFO:Set up index.
2024-11-11 20:07:47,151:INFO:Initializing load_model()
2024-11-11 20:07:47,151:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:07:47,178:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:07:48,311:INFO:Initializing load_model()
2024-11-11 20:07:48,311:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:07:48,349:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:07:48,419:INFO:Initializing predict_model()
2024-11-11 20:07:48,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A797750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002646F3B5F80>)
2024-11-11 20:07:48,419:INFO:Checking exceptions
2024-11-11 20:07:48,422:INFO:Preloading libraries
2024-11-11 20:07:48,422:INFO:Set up data.
2024-11-11 20:07:48,422:INFO:Set up index.
2024-11-11 20:08:18,552:INFO:Initializing load_model()
2024-11-11 20:08:18,552:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:08:18,600:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:08:20,076:INFO:Initializing load_model()
2024-11-11 20:08:20,076:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:08:20,115:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:08:20,184:INFO:Initializing predict_model()
2024-11-11 20:08:20,184:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026418FC3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419525EE0>)
2024-11-11 20:08:20,184:INFO:Checking exceptions
2024-11-11 20:08:20,184:INFO:Preloading libraries
2024-11-11 20:08:20,189:INFO:Set up data.
2024-11-11 20:08:20,192:INFO:Set up index.
2024-11-11 20:08:22,270:INFO:Initializing load_model()
2024-11-11 20:08:22,270:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:08:22,319:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:08:22,519:INFO:Initializing predict_model()
2024-11-11 20:08:22,519:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A798950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419527560>)
2024-11-11 20:08:22,519:INFO:Checking exceptions
2024-11-11 20:08:22,519:INFO:Preloading libraries
2024-11-11 20:08:22,519:INFO:Set up data.
2024-11-11 20:08:22,525:INFO:Set up index.
2024-11-11 20:08:25,558:INFO:Initializing load_model()
2024-11-11 20:08:25,558:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:08:25,608:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:08:26,671:INFO:Initializing load_model()
2024-11-11 20:08:26,671:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:08:26,709:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:08:26,875:INFO:Initializing predict_model()
2024-11-11 20:08:26,875:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A796710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419526CA0>)
2024-11-11 20:08:26,875:INFO:Checking exceptions
2024-11-11 20:08:26,875:INFO:Preloading libraries
2024-11-11 20:08:26,883:INFO:Set up data.
2024-11-11 20:08:26,885:INFO:Set up index.
2024-11-11 20:08:48,027:INFO:Initializing load_model()
2024-11-11 20:08:48,027:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:08:48,053:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:08:49,853:INFO:Initializing load_model()
2024-11-11 20:08:49,853:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:08:49,877:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:08:49,941:INFO:Initializing predict_model()
2024-11-11 20:08:49,941:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641954BF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419526DE0>)
2024-11-11 20:08:49,941:INFO:Checking exceptions
2024-11-11 20:08:49,941:INFO:Preloading libraries
2024-11-11 20:08:49,941:INFO:Set up data.
2024-11-11 20:08:49,950:INFO:Set up index.
2024-11-11 20:09:40,339:INFO:Initializing load_model()
2024-11-11 20:09:40,339:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:09:40,366:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:09:41,646:INFO:Initializing load_model()
2024-11-11 20:09:41,646:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:09:41,692:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:09:41,749:INFO:Initializing predict_model()
2024-11-11 20:09:41,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A6CBA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419527740>)
2024-11-11 20:09:41,749:INFO:Checking exceptions
2024-11-11 20:09:41,749:INFO:Preloading libraries
2024-11-11 20:09:41,749:INFO:Set up data.
2024-11-11 20:09:41,757:INFO:Set up index.
2024-11-11 20:09:53,300:INFO:Initializing load_model()
2024-11-11 20:09:53,300:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:09:53,339:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:09:54,900:INFO:Initializing load_model()
2024-11-11 20:09:54,900:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:09:54,939:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:09:55,618:INFO:Initializing load_model()
2024-11-11 20:09:55,618:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:09:55,642:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:09:55,711:INFO:Initializing predict_model()
2024-11-11 20:09:55,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000264193A8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264195276A0>)
2024-11-11 20:09:55,711:INFO:Checking exceptions
2024-11-11 20:09:55,711:INFO:Preloading libraries
2024-11-11 20:09:55,712:INFO:Set up data.
2024-11-11 20:09:55,715:INFO:Set up index.
2024-11-11 20:11:43,158:INFO:Initializing load_model()
2024-11-11 20:11:43,158:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:11:43,203:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:11:44,454:INFO:Initializing load_model()
2024-11-11 20:11:44,454:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:11:44,499:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:11:44,687:INFO:Initializing predict_model()
2024-11-11 20:11:44,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026419541F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026470D3CB80>)
2024-11-11 20:11:44,687:INFO:Checking exceptions
2024-11-11 20:11:44,687:INFO:Preloading libraries
2024-11-11 20:11:44,687:INFO:Set up data.
2024-11-11 20:11:44,698:INFO:Set up index.
2024-11-11 20:12:35,554:INFO:Initializing load_model()
2024-11-11 20:12:35,554:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:12:35,602:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:12:37,002:INFO:Initializing load_model()
2024-11-11 20:12:37,002:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:12:37,016:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:12:37,087:INFO:Initializing predict_model()
2024-11-11 20:12:37,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026419146A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264195263E0>)
2024-11-11 20:12:37,087:INFO:Checking exceptions
2024-11-11 20:12:37,087:INFO:Preloading libraries
2024-11-11 20:12:37,087:INFO:Set up data.
2024-11-11 20:12:37,097:INFO:Set up index.
2024-11-11 20:13:36,600:INFO:Initializing load_model()
2024-11-11 20:13:36,600:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:13:36,613:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:13:38,597:INFO:Initializing load_model()
2024-11-11 20:13:38,597:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:13:38,649:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:13:38,814:INFO:Initializing predict_model()
2024-11-11 20:13:38,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026419532C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264195274C0>)
2024-11-11 20:13:38,814:INFO:Checking exceptions
2024-11-11 20:13:38,814:INFO:Preloading libraries
2024-11-11 20:13:38,816:INFO:Set up data.
2024-11-11 20:13:38,822:INFO:Set up index.
2024-11-11 20:14:20,862:INFO:Initializing load_model()
2024-11-11 20:14:20,869:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:14:20,886:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:14:22,178:INFO:Initializing load_model()
2024-11-11 20:14:22,178:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:14:22,220:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:14:22,296:INFO:Initializing predict_model()
2024-11-11 20:14:22,296:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A796F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419527740>)
2024-11-11 20:14:22,296:INFO:Checking exceptions
2024-11-11 20:14:22,296:INFO:Preloading libraries
2024-11-11 20:14:22,296:INFO:Set up data.
2024-11-11 20:14:22,296:INFO:Set up index.
2024-11-11 20:15:08,232:INFO:Initializing load_model()
2024-11-11 20:15:08,232:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:15:08,251:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:15:10,045:INFO:Initializing load_model()
2024-11-11 20:15:10,045:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:15:10,062:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:15:10,126:INFO:Initializing predict_model()
2024-11-11 20:15:10,126:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A794890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419527920>)
2024-11-11 20:15:10,126:INFO:Checking exceptions
2024-11-11 20:15:10,126:INFO:Preloading libraries
2024-11-11 20:15:10,129:INFO:Set up data.
2024-11-11 20:15:10,130:INFO:Set up index.
2024-11-11 20:15:11,914:INFO:Initializing load_model()
2024-11-11 20:15:11,916:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:15:11,946:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:15:12,128:INFO:Initializing predict_model()
2024-11-11 20:15:12,128:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000264193A5F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264195262A0>)
2024-11-11 20:15:12,128:INFO:Checking exceptions
2024-11-11 20:15:12,128:INFO:Preloading libraries
2024-11-11 20:15:12,132:INFO:Set up data.
2024-11-11 20:15:12,135:INFO:Set up index.
2024-11-11 20:15:30,986:INFO:Initializing load_model()
2024-11-11 20:15:30,989:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:15:31,017:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:15:31,082:INFO:Initializing predict_model()
2024-11-11 20:15:31,082:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A782E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419526160>)
2024-11-11 20:15:31,082:INFO:Checking exceptions
2024-11-11 20:15:31,082:INFO:Preloading libraries
2024-11-11 20:15:31,082:INFO:Set up data.
2024-11-11 20:15:31,090:INFO:Set up index.
2024-11-11 20:15:48,190:INFO:Initializing load_model()
2024-11-11 20:15:48,190:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:15:48,211:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:15:49,417:INFO:Initializing load_model()
2024-11-11 20:15:49,417:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:15:49,467:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:15:49,540:INFO:Initializing predict_model()
2024-11-11 20:15:49,540:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641932F110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026470F33D80>)
2024-11-11 20:15:49,540:INFO:Checking exceptions
2024-11-11 20:15:49,540:INFO:Preloading libraries
2024-11-11 20:15:49,548:INFO:Set up data.
2024-11-11 20:15:49,548:INFO:Set up index.
2024-11-11 20:15:59,218:INFO:Initializing load_model()
2024-11-11 20:15:59,218:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:15:59,227:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:16:00,443:INFO:Initializing load_model()
2024-11-11 20:16:00,443:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:16:00,476:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:16:00,537:INFO:Initializing predict_model()
2024-11-11 20:16:00,543:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000264195D7CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419527D80>)
2024-11-11 20:16:00,543:INFO:Checking exceptions
2024-11-11 20:16:00,543:INFO:Preloading libraries
2024-11-11 20:16:00,543:INFO:Set up data.
2024-11-11 20:16:00,545:INFO:Set up index.
2024-11-11 20:16:08,493:INFO:Initializing load_model()
2024-11-11 20:16:08,493:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:16:08,527:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:16:09,676:INFO:Initializing load_model()
2024-11-11 20:16:09,676:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:16:09,720:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:16:09,784:INFO:Initializing predict_model()
2024-11-11 20:16:09,784:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641959C890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264195271A0>)
2024-11-11 20:16:09,784:INFO:Checking exceptions
2024-11-11 20:16:09,784:INFO:Preloading libraries
2024-11-11 20:16:09,784:INFO:Set up data.
2024-11-11 20:16:09,784:INFO:Set up index.
2024-11-11 20:20:06,178:INFO:Initializing load_model()
2024-11-11 20:20:06,178:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:20:06,197:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:20:07,256:INFO:Initializing load_model()
2024-11-11 20:20:07,256:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:20:07,291:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:20:07,371:INFO:Initializing predict_model()
2024-11-11 20:20:07,371:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026419334650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264193477E0>)
2024-11-11 20:20:07,371:INFO:Checking exceptions
2024-11-11 20:20:07,371:INFO:Preloading libraries
2024-11-11 20:20:07,372:INFO:Set up data.
2024-11-11 20:20:07,373:INFO:Set up index.
2024-11-11 20:21:06,519:INFO:Initializing load_model()
2024-11-11 20:21:06,519:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:21:06,563:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:21:08,011:INFO:Initializing load_model()
2024-11-11 20:21:08,011:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:21:08,023:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:21:08,088:INFO:Initializing predict_model()
2024-11-11 20:21:08,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A799750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264195263E0>)
2024-11-11 20:21:08,088:INFO:Checking exceptions
2024-11-11 20:21:08,088:INFO:Preloading libraries
2024-11-11 20:21:08,088:INFO:Set up data.
2024-11-11 20:21:08,091:INFO:Set up index.
2024-11-11 20:26:39,403:INFO:Initializing load_model()
2024-11-11 20:26:39,403:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:26:39,419:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:26:40,672:INFO:Initializing load_model()
2024-11-11 20:26:40,672:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:26:40,702:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:26:40,766:INFO:Initializing predict_model()
2024-11-11 20:26:40,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A799DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026415D99DA0>)
2024-11-11 20:26:40,766:INFO:Checking exceptions
2024-11-11 20:26:40,766:INFO:Preloading libraries
2024-11-11 20:26:40,766:INFO:Set up data.
2024-11-11 20:26:40,766:INFO:Set up index.
2024-11-11 20:27:30,568:INFO:Initializing load_model()
2024-11-11 20:27:30,568:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:27:30,600:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:27:31,776:INFO:Initializing load_model()
2024-11-11 20:27:31,776:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:27:31,819:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:27:32,001:INFO:Initializing predict_model()
2024-11-11 20:27:32,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026419512210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026470F33D80>)
2024-11-11 20:27:32,001:INFO:Checking exceptions
2024-11-11 20:27:32,001:INFO:Preloading libraries
2024-11-11 20:27:32,001:INFO:Set up data.
2024-11-11 20:27:32,009:INFO:Set up index.
2024-11-11 20:29:47,498:INFO:Initializing load_model()
2024-11-11 20:29:47,498:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:29:47,515:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:29:49,492:INFO:Initializing load_model()
2024-11-11 20:29:49,492:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:29:49,537:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:29:49,720:INFO:Initializing predict_model()
2024-11-11 20:29:49,720:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A6FB990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419527A60>)
2024-11-11 20:29:49,720:INFO:Checking exceptions
2024-11-11 20:29:49,720:INFO:Preloading libraries
2024-11-11 20:29:49,722:INFO:Set up data.
2024-11-11 20:29:49,722:INFO:Set up index.
2024-11-11 20:29:58,754:INFO:Initializing load_model()
2024-11-11 20:29:58,756:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:29:58,788:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:04,892:INFO:Initializing load_model()
2024-11-11 20:30:04,892:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:04,935:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:21,899:INFO:Initializing load_model()
2024-11-11 20:30:21,899:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:21,952:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:25,868:INFO:Initializing load_model()
2024-11-11 20:30:25,868:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:25,916:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:27,720:INFO:Initializing load_model()
2024-11-11 20:30:27,720:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:27,766:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:29,851:INFO:Initializing load_model()
2024-11-11 20:30:29,853:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:29,899:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:31,241:INFO:Initializing load_model()
2024-11-11 20:30:31,241:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:31,306:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:34,731:INFO:Initializing load_model()
2024-11-11 20:30:34,731:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:34,782:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:37,454:INFO:Initializing load_model()
2024-11-11 20:30:37,454:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:37,513:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:44,814:INFO:Initializing load_model()
2024-11-11 20:30:44,814:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:44,867:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:45,838:INFO:Initializing load_model()
2024-11-11 20:30:45,838:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:45,874:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:47,655:INFO:Initializing load_model()
2024-11-11 20:30:47,655:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:47,685:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:52,071:INFO:Initializing load_model()
2024-11-11 20:30:52,076:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:52,158:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:52,577:INFO:Initializing load_model()
2024-11-11 20:30:52,577:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:30:52,630:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:30:52,800:INFO:Initializing predict_model()
2024-11-11 20:30:52,800:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A798D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026419527880>)
2024-11-11 20:30:52,800:INFO:Checking exceptions
2024-11-11 20:30:52,800:INFO:Preloading libraries
2024-11-11 20:30:52,800:INFO:Set up data.
2024-11-11 20:30:52,808:INFO:Set up index.
2024-11-11 20:31:14,191:INFO:Initializing load_model()
2024-11-11 20:31:14,191:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:31:14,210:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:31:15,489:INFO:Initializing load_model()
2024-11-11 20:31:15,489:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:31:15,530:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:31:15,594:INFO:Initializing predict_model()
2024-11-11 20:31:15,595:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002641A70A950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264195276A0>)
2024-11-11 20:31:15,595:INFO:Checking exceptions
2024-11-11 20:31:15,595:INFO:Preloading libraries
2024-11-11 20:31:15,596:INFO:Set up data.
2024-11-11 20:31:15,600:INFO:Set up index.
2024-11-11 20:39:52,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 20:39:52,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 20:39:52,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 20:39:52,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 20:39:53,598:INFO:Initializing load_model()
2024-11-11 20:39:53,598:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:39:53,691:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:40:39,922:INFO:Initializing load_model()
2024-11-11 20:40:39,924:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:40:39,960:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:40:49,171:INFO:Initializing predict_model()
2024-11-11 20:40:49,173:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604DFE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3B351B20>)
2024-11-11 20:40:49,173:INFO:Checking exceptions
2024-11-11 20:40:49,173:INFO:Preloading libraries
2024-11-11 20:40:49,173:INFO:Set up data.
2024-11-11 20:40:49,182:INFO:Set up index.
2024-11-11 20:42:59,484:INFO:Initializing predict_model()
2024-11-11 20:42:59,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A604CE5C0>)
2024-11-11 20:42:59,484:INFO:Checking exceptions
2024-11-11 20:42:59,484:INFO:Preloading libraries
2024-11-11 20:42:59,484:INFO:Set up data.
2024-11-11 20:42:59,490:INFO:Set up index.
2024-11-11 20:43:47,618:INFO:Initializing load_model()
2024-11-11 20:43:47,618:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 20:43:47,662:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 20:48:56,394:INFO:Initializing predict_model()
2024-11-11 20:48:56,394:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A3706B8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A60497740>)
2024-11-11 20:48:56,394:INFO:Checking exceptions
2024-11-11 20:48:56,394:INFO:Preloading libraries
2024-11-11 20:48:56,394:INFO:Set up data.
2024-11-11 20:48:56,407:INFO:Set up index.
2024-11-11 21:01:59,852:INFO:Initializing load_model()
2024-11-11 21:01:59,852:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 21:01:59,893:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 21:02:21,773:INFO:Initializing load_model()
2024-11-11 21:02:21,773:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-11 21:02:21,793:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-11 21:05:23,957:INFO:Initializing predict_model()
2024-11-11 21:05:23,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BE690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F1AB880>)
2024-11-11 21:05:23,957:INFO:Checking exceptions
2024-11-11 21:05:23,957:INFO:Preloading libraries
2024-11-11 21:05:23,957:INFO:Set up data.
2024-11-11 21:05:23,965:INFO:Set up index.
2024-11-12 10:59:35,800:INFO:Initializing load_model()
2024-11-12 10:59:35,800:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 10:59:35,816:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 10:59:44,342:INFO:Initializing load_model()
2024-11-12 10:59:44,342:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 10:59:44,397:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 12:39:29,856:INFO:Initializing predict_model()
2024-11-12 12:39:29,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CB8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A60497100>)
2024-11-12 12:39:29,858:INFO:Checking exceptions
2024-11-12 12:39:29,858:INFO:Preloading libraries
2024-11-12 12:39:29,859:INFO:Set up data.
2024-11-12 12:39:29,873:INFO:Set up index.
2024-11-12 12:58:49,196:INFO:Initializing load_model()
2024-11-12 12:58:49,197:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 12:58:49,232:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 12:59:39,342:INFO:Initializing load_model()
2024-11-12 12:59:39,342:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 12:59:39,360:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 12:59:41,867:INFO:Initializing predict_model()
2024-11-12 12:59:41,867:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A60496F20>)
2024-11-12 12:59:41,869:INFO:Checking exceptions
2024-11-12 12:59:41,869:INFO:Preloading libraries
2024-11-12 12:59:41,869:INFO:Set up data.
2024-11-12 12:59:41,874:INFO:Set up index.
2024-11-12 13:00:12,455:INFO:Initializing load_model()
2024-11-12 13:00:12,455:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:00:12,474:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 13:00:16,453:INFO:Initializing predict_model()
2024-11-12 13:00:16,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370D51D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 13:00:16,453:INFO:Checking exceptions
2024-11-12 13:00:16,453:INFO:Preloading libraries
2024-11-12 13:00:16,454:INFO:Set up data.
2024-11-12 13:00:16,468:INFO:Set up index.
2024-11-12 13:00:27,613:INFO:Initializing predict_model()
2024-11-12 13:00:27,613:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CB0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 13:00:27,613:INFO:Checking exceptions
2024-11-12 13:00:27,613:INFO:Preloading libraries
2024-11-12 13:00:27,613:INFO:Set up data.
2024-11-12 13:00:27,618:INFO:Set up index.
2024-11-12 13:00:57,203:INFO:Initializing load_model()
2024-11-12 13:00:57,204:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:00:57,221:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 13:01:00,677:INFO:Initializing predict_model()
2024-11-12 13:01:00,677:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604F8290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F1AB880>)
2024-11-12 13:01:00,677:INFO:Checking exceptions
2024-11-12 13:01:00,677:INFO:Preloading libraries
2024-11-12 13:01:00,678:INFO:Set up data.
2024-11-12 13:01:00,681:INFO:Set up index.
2024-11-12 13:01:06,403:INFO:Initializing predict_model()
2024-11-12 13:01:06,403:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37079350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A604953A0>)
2024-11-12 13:01:06,403:INFO:Checking exceptions
2024-11-12 13:01:06,403:INFO:Preloading libraries
2024-11-12 13:01:06,404:INFO:Set up data.
2024-11-12 13:01:06,411:INFO:Set up index.
2024-11-12 13:01:13,607:INFO:Initializing predict_model()
2024-11-12 13:01:13,607:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C97D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F1AB380>)
2024-11-12 13:01:13,607:INFO:Checking exceptions
2024-11-12 13:01:13,607:INFO:Preloading libraries
2024-11-12 13:01:13,608:INFO:Set up data.
2024-11-12 13:01:13,611:INFO:Set up index.
2024-11-12 13:01:18,703:INFO:Initializing predict_model()
2024-11-12 13:01:18,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BEED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A37063560>)
2024-11-12 13:01:18,703:INFO:Checking exceptions
2024-11-12 13:01:18,703:INFO:Preloading libraries
2024-11-12 13:01:18,703:INFO:Set up data.
2024-11-12 13:01:18,710:INFO:Set up index.
2024-11-12 13:01:23,925:INFO:Initializing predict_model()
2024-11-12 13:01:23,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A37062340>)
2024-11-12 13:01:23,925:INFO:Checking exceptions
2024-11-12 13:01:23,925:INFO:Preloading libraries
2024-11-12 13:01:23,926:INFO:Set up data.
2024-11-12 13:01:23,931:INFO:Set up index.
2024-11-12 13:01:38,319:INFO:Initializing predict_model()
2024-11-12 13:01:38,319:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BEED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370CF560>)
2024-11-12 13:01:38,320:INFO:Checking exceptions
2024-11-12 13:01:38,320:INFO:Preloading libraries
2024-11-12 13:01:38,320:INFO:Set up data.
2024-11-12 13:01:38,324:INFO:Set up index.
2024-11-12 13:05:17,586:INFO:Initializing load_model()
2024-11-12 13:05:17,586:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:05:17,606:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 13:05:23,395:INFO:Initializing predict_model()
2024-11-12 13:05:23,395:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A3706B410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A37063EC0>)
2024-11-12 13:05:23,395:INFO:Checking exceptions
2024-11-12 13:05:23,395:INFO:Preloading libraries
2024-11-12 13:05:23,397:INFO:Set up data.
2024-11-12 13:05:23,402:INFO:Set up index.
2024-11-12 13:12:21,215:INFO:Initializing load_model()
2024-11-12 13:12:21,215:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:12:21,232:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 13:30:03,268:INFO:Initializing load_model()
2024-11-12 13:30:03,268:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:30:03,287:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 13:39:56,585:INFO:Initializing load_model()
2024-11-12 13:39:56,586:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:39:56,632:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 13:48:33,196:INFO:Initializing load_model()
2024-11-12 13:48:33,196:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:48:33,216:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 13:50:24,919:INFO:Initializing load_model()
2024-11-12 13:50:24,919:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 13:50:24,940:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 14:07:39,019:INFO:Initializing load_model()
2024-11-12 14:07:39,020:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 14:07:39,053:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 14:09:43,029:INFO:Initializing load_model()
2024-11-12 14:09:43,029:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 14:09:43,049:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:09:41,819:INFO:Initializing load_model()
2024-11-12 15:09:41,819:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:09:41,839:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:12:07,485:INFO:Initializing load_model()
2024-11-12 15:12:07,485:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:12:07,513:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:13:36,918:INFO:Initializing load_model()
2024-11-12 15:13:36,918:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:13:36,931:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:14:59,899:INFO:Initializing load_model()
2024-11-12 15:14:59,899:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:14:59,914:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:15:39,714:INFO:Initializing load_model()
2024-11-12 15:15:39,714:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:15:39,735:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:15:53,832:INFO:Initializing predict_model()
2024-11-12 15:15:53,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A60496FC0>)
2024-11-12 15:15:53,832:INFO:Checking exceptions
2024-11-12 15:15:53,832:INFO:Preloading libraries
2024-11-12 15:15:53,833:INFO:Set up data.
2024-11-12 15:15:53,843:INFO:Set up index.
2024-11-12 15:16:38,829:INFO:Initializing load_model()
2024-11-12 15:16:38,829:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:16:38,862:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:17:09,560:INFO:Initializing load_model()
2024-11-12 15:17:09,560:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:17:09,575:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:18:58,036:INFO:Initializing load_model()
2024-11-12 15:18:58,036:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:18:58,063:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:19:20,760:INFO:Initializing load_model()
2024-11-12 15:19:20,760:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:19:20,795:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:19:57,946:INFO:Initializing load_model()
2024-11-12 15:19:57,946:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:19:57,961:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:21:02,984:INFO:Initializing load_model()
2024-11-12 15:21:02,984:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:21:03,010:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:37:48,335:INFO:Initializing load_model()
2024-11-12 15:37:48,335:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:37:48,356:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:38:47,140:INFO:Initializing load_model()
2024-11-12 15:38:47,140:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:38:47,157:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:40:41,127:INFO:Initializing load_model()
2024-11-12 15:40:41,127:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:40:41,167:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:41:06,140:INFO:Initializing load_model()
2024-11-12 15:41:06,140:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:41:06,164:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:44:31,617:INFO:Initializing load_model()
2024-11-12 15:44:31,617:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:44:31,637:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:44:31,824:INFO:Initializing predict_model()
2024-11-12 15:44:31,824:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6041E0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F1AB380>)
2024-11-12 15:44:31,824:INFO:Checking exceptions
2024-11-12 15:44:31,824:INFO:Preloading libraries
2024-11-12 15:44:31,824:INFO:Set up data.
2024-11-12 15:44:31,829:INFO:Set up index.
2024-11-12 15:45:51,807:INFO:Initializing load_model()
2024-11-12 15:45:51,808:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:45:51,843:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:45:51,991:INFO:Initializing predict_model()
2024-11-12 15:45:51,991:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2D5CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370CEFC0>)
2024-11-12 15:45:51,991:INFO:Checking exceptions
2024-11-12 15:45:51,991:INFO:Preloading libraries
2024-11-12 15:45:51,992:INFO:Set up data.
2024-11-12 15:45:51,995:INFO:Set up index.
2024-11-12 15:45:53,741:INFO:Initializing predict_model()
2024-11-12 15:45:53,742:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6052DB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A37063EC0>)
2024-11-12 15:45:53,742:INFO:Checking exceptions
2024-11-12 15:45:53,742:INFO:Preloading libraries
2024-11-12 15:45:53,742:INFO:Set up data.
2024-11-12 15:45:53,748:INFO:Set up index.
2024-11-12 15:47:22,804:INFO:Initializing load_model()
2024-11-12 15:47:22,804:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:47:22,828:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:52:03,220:INFO:Initializing load_model()
2024-11-12 15:52:03,220:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:52:03,266:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:52:03,430:INFO:Initializing predict_model()
2024-11-12 15:52:03,430:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A384D9D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 15:52:03,430:INFO:Checking exceptions
2024-11-12 15:52:03,430:INFO:Preloading libraries
2024-11-12 15:52:03,431:INFO:Set up data.
2024-11-12 15:52:03,435:INFO:Set up index.
2024-11-12 15:55:42,461:INFO:Initializing load_model()
2024-11-12 15:55:42,461:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:55:42,497:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:56:21,623:INFO:Initializing load_model()
2024-11-12 15:56:21,623:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:56:21,660:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:56:50,698:INFO:Initializing load_model()
2024-11-12 15:56:50,698:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:56:50,721:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:56:50,875:INFO:Initializing predict_model()
2024-11-12 15:56:50,875:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A60455ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370CED40>)
2024-11-12 15:56:50,875:INFO:Checking exceptions
2024-11-12 15:56:50,875:INFO:Preloading libraries
2024-11-12 15:56:50,875:INFO:Set up data.
2024-11-12 15:56:50,878:INFO:Set up index.
2024-11-12 15:56:51,054:INFO:Initializing predict_model()
2024-11-12 15:56:51,054:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1E7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 15:56:51,054:INFO:Checking exceptions
2024-11-12 15:56:51,054:INFO:Preloading libraries
2024-11-12 15:56:51,054:INFO:Set up data.
2024-11-12 15:56:51,057:INFO:Set up index.
2024-11-12 15:57:18,854:INFO:Initializing load_model()
2024-11-12 15:57:18,854:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 15:57:18,898:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 15:57:19,061:INFO:Initializing predict_model()
2024-11-12 15:57:19,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604F34D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370CED40>)
2024-11-12 15:57:19,061:INFO:Checking exceptions
2024-11-12 15:57:19,061:INFO:Preloading libraries
2024-11-12 15:57:19,062:INFO:Set up data.
2024-11-12 15:57:19,064:INFO:Set up index.
2024-11-12 15:57:19,241:INFO:Initializing predict_model()
2024-11-12 15:57:19,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A60599810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A604974C0>)
2024-11-12 15:57:19,249:INFO:Checking exceptions
2024-11-12 15:57:19,249:INFO:Preloading libraries
2024-11-12 15:57:19,249:INFO:Set up data.
2024-11-12 15:57:19,252:INFO:Set up index.
2024-11-12 15:59:56,140:INFO:Initializing predict_model()
2024-11-12 15:59:56,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604F8DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370CF100>)
2024-11-12 15:59:56,140:INFO:Checking exceptions
2024-11-12 15:59:56,140:INFO:Preloading libraries
2024-11-12 15:59:56,140:INFO:Set up data.
2024-11-12 15:59:56,144:INFO:Set up index.
2024-11-12 16:00:32,984:INFO:Initializing predict_model()
2024-11-12 16:00:32,984:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604B3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370CF100>)
2024-11-12 16:00:32,984:INFO:Checking exceptions
2024-11-12 16:00:32,984:INFO:Preloading libraries
2024-11-12 16:00:32,984:INFO:Set up data.
2024-11-12 16:00:32,987:INFO:Set up index.
2024-11-12 16:00:33,170:INFO:Initializing predict_model()
2024-11-12 16:00:33,170:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370B6E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F1ABA60>)
2024-11-12 16:00:33,170:INFO:Checking exceptions
2024-11-12 16:00:33,170:INFO:Preloading libraries
2024-11-12 16:00:33,170:INFO:Set up data.
2024-11-12 16:00:33,173:INFO:Set up index.
2024-11-12 16:26:51,046:INFO:Initializing predict_model()
2024-11-12 16:26:51,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604DC510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A604972E0>)
2024-11-12 16:26:51,046:INFO:Checking exceptions
2024-11-12 16:26:51,046:INFO:Preloading libraries
2024-11-12 16:26:51,046:INFO:Set up data.
2024-11-12 16:26:51,049:INFO:Set up index.
2024-11-12 16:27:50,380:INFO:Initializing load_model()
2024-11-12 16:27:50,380:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 16:27:50,418:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 16:28:50,831:INFO:Initializing load_model()
2024-11-12 16:28:50,831:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 16:28:50,878:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 16:28:51,036:INFO:Initializing predict_model()
2024-11-12 16:28:51,036:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604F2A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A604972E0>)
2024-11-12 16:28:51,036:INFO:Checking exceptions
2024-11-12 16:28:51,036:INFO:Preloading libraries
2024-11-12 16:28:51,036:INFO:Set up data.
2024-11-12 16:28:51,040:INFO:Set up index.
2024-11-12 16:28:51,219:INFO:Initializing predict_model()
2024-11-12 16:28:51,219:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604B02D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:51,219:INFO:Checking exceptions
2024-11-12 16:28:51,219:INFO:Preloading libraries
2024-11-12 16:28:51,220:INFO:Set up data.
2024-11-12 16:28:51,222:INFO:Set up index.
2024-11-12 16:28:51,387:INFO:Initializing predict_model()
2024-11-12 16:28:51,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1E7890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:51,388:INFO:Checking exceptions
2024-11-12 16:28:51,388:INFO:Preloading libraries
2024-11-12 16:28:51,388:INFO:Set up data.
2024-11-12 16:28:51,390:INFO:Set up index.
2024-11-12 16:28:51,561:INFO:Initializing predict_model()
2024-11-12 16:28:51,561:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370512D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:51,561:INFO:Checking exceptions
2024-11-12 16:28:51,561:INFO:Preloading libraries
2024-11-12 16:28:51,562:INFO:Set up data.
2024-11-12 16:28:51,564:INFO:Set up index.
2024-11-12 16:28:51,736:INFO:Initializing predict_model()
2024-11-12 16:28:51,736:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5B06D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:51,737:INFO:Checking exceptions
2024-11-12 16:28:51,737:INFO:Preloading libraries
2024-11-12 16:28:51,737:INFO:Set up data.
2024-11-12 16:28:51,740:INFO:Set up index.
2024-11-12 16:28:51,909:INFO:Initializing predict_model()
2024-11-12 16:28:51,909:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E73990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:51,910:INFO:Checking exceptions
2024-11-12 16:28:51,910:INFO:Preloading libraries
2024-11-12 16:28:51,910:INFO:Set up data.
2024-11-12 16:28:51,912:INFO:Set up index.
2024-11-12 16:28:52,077:INFO:Initializing predict_model()
2024-11-12 16:28:52,077:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A60417A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:52,077:INFO:Checking exceptions
2024-11-12 16:28:52,077:INFO:Preloading libraries
2024-11-12 16:28:52,077:INFO:Set up data.
2024-11-12 16:28:52,079:INFO:Set up index.
2024-11-12 16:28:52,242:INFO:Initializing predict_model()
2024-11-12 16:28:52,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:52,243:INFO:Checking exceptions
2024-11-12 16:28:52,243:INFO:Preloading libraries
2024-11-12 16:28:52,243:INFO:Set up data.
2024-11-12 16:28:52,245:INFO:Set up index.
2024-11-12 16:28:52,407:INFO:Initializing predict_model()
2024-11-12 16:28:52,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:52,407:INFO:Checking exceptions
2024-11-12 16:28:52,407:INFO:Preloading libraries
2024-11-12 16:28:52,408:INFO:Set up data.
2024-11-12 16:28:52,410:INFO:Set up index.
2024-11-12 16:28:52,574:INFO:Initializing predict_model()
2024-11-12 16:28:52,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:52,575:INFO:Checking exceptions
2024-11-12 16:28:52,575:INFO:Preloading libraries
2024-11-12 16:28:52,575:INFO:Set up data.
2024-11-12 16:28:52,578:INFO:Set up index.
2024-11-12 16:28:52,741:INFO:Initializing predict_model()
2024-11-12 16:28:52,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:52,741:INFO:Checking exceptions
2024-11-12 16:28:52,741:INFO:Preloading libraries
2024-11-12 16:28:52,741:INFO:Set up data.
2024-11-12 16:28:52,744:INFO:Set up index.
2024-11-12 16:28:52,905:INFO:Initializing predict_model()
2024-11-12 16:28:52,905:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:52,905:INFO:Checking exceptions
2024-11-12 16:28:52,905:INFO:Preloading libraries
2024-11-12 16:28:52,905:INFO:Set up data.
2024-11-12 16:28:52,908:INFO:Set up index.
2024-11-12 16:28:53,066:INFO:Initializing predict_model()
2024-11-12 16:28:53,066:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E3E210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:53,066:INFO:Checking exceptions
2024-11-12 16:28:53,066:INFO:Preloading libraries
2024-11-12 16:28:53,066:INFO:Set up data.
2024-11-12 16:28:53,069:INFO:Set up index.
2024-11-12 16:28:53,235:INFO:Initializing predict_model()
2024-11-12 16:28:53,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:53,235:INFO:Checking exceptions
2024-11-12 16:28:53,235:INFO:Preloading libraries
2024-11-12 16:28:53,235:INFO:Set up data.
2024-11-12 16:28:53,239:INFO:Set up index.
2024-11-12 16:28:53,403:INFO:Initializing predict_model()
2024-11-12 16:28:53,403:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:53,403:INFO:Checking exceptions
2024-11-12 16:28:53,403:INFO:Preloading libraries
2024-11-12 16:28:53,405:INFO:Set up data.
2024-11-12 16:28:53,407:INFO:Set up index.
2024-11-12 16:28:53,570:INFO:Initializing predict_model()
2024-11-12 16:28:53,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BFED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:53,570:INFO:Checking exceptions
2024-11-12 16:28:53,570:INFO:Preloading libraries
2024-11-12 16:28:53,571:INFO:Set up data.
2024-11-12 16:28:53,573:INFO:Set up index.
2024-11-12 16:28:53,728:INFO:Initializing predict_model()
2024-11-12 16:28:53,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2DD1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:53,728:INFO:Checking exceptions
2024-11-12 16:28:53,728:INFO:Preloading libraries
2024-11-12 16:28:53,729:INFO:Set up data.
2024-11-12 16:28:53,731:INFO:Set up index.
2024-11-12 16:28:53,881:INFO:Initializing predict_model()
2024-11-12 16:28:53,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA05FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:28:53,881:INFO:Checking exceptions
2024-11-12 16:28:53,881:INFO:Preloading libraries
2024-11-12 16:28:53,881:INFO:Set up data.
2024-11-12 16:28:53,884:INFO:Set up index.
2024-11-12 16:28:54,070:INFO:Initializing predict_model()
2024-11-12 16:28:54,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37052E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:54,070:INFO:Checking exceptions
2024-11-12 16:28:54,070:INFO:Preloading libraries
2024-11-12 16:28:54,071:INFO:Set up data.
2024-11-12 16:28:54,073:INFO:Set up index.
2024-11-12 16:28:54,217:INFO:Initializing predict_model()
2024-11-12 16:28:54,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:54,217:INFO:Checking exceptions
2024-11-12 16:28:54,217:INFO:Preloading libraries
2024-11-12 16:28:54,217:INFO:Set up data.
2024-11-12 16:28:54,220:INFO:Set up index.
2024-11-12 16:28:54,368:INFO:Initializing predict_model()
2024-11-12 16:28:54,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C9190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:54,368:INFO:Checking exceptions
2024-11-12 16:28:54,368:INFO:Preloading libraries
2024-11-12 16:28:54,369:INFO:Set up data.
2024-11-12 16:28:54,371:INFO:Set up index.
2024-11-12 16:28:54,540:INFO:Initializing predict_model()
2024-11-12 16:28:54,540:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37078810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:54,540:INFO:Checking exceptions
2024-11-12 16:28:54,541:INFO:Preloading libraries
2024-11-12 16:28:54,541:INFO:Set up data.
2024-11-12 16:28:54,543:INFO:Set up index.
2024-11-12 16:28:54,724:INFO:Initializing predict_model()
2024-11-12 16:28:54,725:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:54,725:INFO:Checking exceptions
2024-11-12 16:28:54,725:INFO:Preloading libraries
2024-11-12 16:28:54,725:INFO:Set up data.
2024-11-12 16:28:54,727:INFO:Set up index.
2024-11-12 16:28:54,880:INFO:Initializing predict_model()
2024-11-12 16:28:54,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:54,881:INFO:Checking exceptions
2024-11-12 16:28:54,881:INFO:Preloading libraries
2024-11-12 16:28:54,881:INFO:Set up data.
2024-11-12 16:28:54,883:INFO:Set up index.
2024-11-12 16:28:55,042:INFO:Initializing predict_model()
2024-11-12 16:28:55,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A32910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:28:55,043:INFO:Checking exceptions
2024-11-12 16:28:55,043:INFO:Preloading libraries
2024-11-12 16:28:55,043:INFO:Set up data.
2024-11-12 16:28:55,045:INFO:Set up index.
2024-11-12 16:28:55,222:INFO:Initializing predict_model()
2024-11-12 16:28:55,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F112B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:28:55,222:INFO:Checking exceptions
2024-11-12 16:28:55,222:INFO:Preloading libraries
2024-11-12 16:28:55,222:INFO:Set up data.
2024-11-12 16:28:55,224:INFO:Set up index.
2024-11-12 16:28:55,388:INFO:Initializing predict_model()
2024-11-12 16:28:55,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F32BC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:28:55,388:INFO:Checking exceptions
2024-11-12 16:28:55,388:INFO:Preloading libraries
2024-11-12 16:28:55,388:INFO:Set up data.
2024-11-12 16:28:55,391:INFO:Set up index.
2024-11-12 16:28:55,535:INFO:Initializing predict_model()
2024-11-12 16:28:55,535:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:28:55,535:INFO:Checking exceptions
2024-11-12 16:28:55,535:INFO:Preloading libraries
2024-11-12 16:28:55,536:INFO:Set up data.
2024-11-12 16:28:55,538:INFO:Set up index.
2024-11-12 16:28:55,692:INFO:Initializing predict_model()
2024-11-12 16:28:55,692:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:28:55,692:INFO:Checking exceptions
2024-11-12 16:28:55,693:INFO:Preloading libraries
2024-11-12 16:28:55,693:INFO:Set up data.
2024-11-12 16:28:55,695:INFO:Set up index.
2024-11-12 16:28:55,856:INFO:Initializing predict_model()
2024-11-12 16:28:55,856:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:28:55,856:INFO:Checking exceptions
2024-11-12 16:28:55,856:INFO:Preloading libraries
2024-11-12 16:28:55,857:INFO:Set up data.
2024-11-12 16:28:55,860:INFO:Set up index.
2024-11-12 16:28:56,027:INFO:Initializing predict_model()
2024-11-12 16:28:56,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:28:56,027:INFO:Checking exceptions
2024-11-12 16:28:56,027:INFO:Preloading libraries
2024-11-12 16:28:56,027:INFO:Set up data.
2024-11-12 16:28:56,030:INFO:Set up index.
2024-11-12 16:28:56,197:INFO:Initializing predict_model()
2024-11-12 16:28:56,197:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C80D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:28:56,197:INFO:Checking exceptions
2024-11-12 16:28:56,197:INFO:Preloading libraries
2024-11-12 16:28:56,197:INFO:Set up data.
2024-11-12 16:28:56,200:INFO:Set up index.
2024-11-12 16:28:56,353:INFO:Initializing predict_model()
2024-11-12 16:28:56,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:28:56,353:INFO:Checking exceptions
2024-11-12 16:28:56,353:INFO:Preloading libraries
2024-11-12 16:28:56,353:INFO:Set up data.
2024-11-12 16:28:56,356:INFO:Set up index.
2024-11-12 16:28:56,527:INFO:Initializing predict_model()
2024-11-12 16:28:56,527:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:28:56,527:INFO:Checking exceptions
2024-11-12 16:28:56,527:INFO:Preloading libraries
2024-11-12 16:28:56,528:INFO:Set up data.
2024-11-12 16:28:56,531:INFO:Set up index.
2024-11-12 16:28:56,708:INFO:Initializing predict_model()
2024-11-12 16:28:56,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E3E210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:28:56,708:INFO:Checking exceptions
2024-11-12 16:28:56,710:INFO:Preloading libraries
2024-11-12 16:28:56,710:INFO:Set up data.
2024-11-12 16:28:56,712:INFO:Set up index.
2024-11-12 16:28:56,869:INFO:Initializing predict_model()
2024-11-12 16:28:56,869:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:28:56,870:INFO:Checking exceptions
2024-11-12 16:28:56,870:INFO:Preloading libraries
2024-11-12 16:28:56,870:INFO:Set up data.
2024-11-12 16:28:56,872:INFO:Set up index.
2024-11-12 16:28:57,105:INFO:Initializing predict_model()
2024-11-12 16:28:57,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AAF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:57,105:INFO:Checking exceptions
2024-11-12 16:28:57,105:INFO:Preloading libraries
2024-11-12 16:28:57,105:INFO:Set up data.
2024-11-12 16:28:57,108:INFO:Set up index.
2024-11-12 16:28:57,310:INFO:Initializing predict_model()
2024-11-12 16:28:57,310:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F32AD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:57,310:INFO:Checking exceptions
2024-11-12 16:28:57,310:INFO:Preloading libraries
2024-11-12 16:28:57,310:INFO:Set up data.
2024-11-12 16:28:57,314:INFO:Set up index.
2024-11-12 16:28:57,494:INFO:Initializing predict_model()
2024-11-12 16:28:57,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C9D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:57,494:INFO:Checking exceptions
2024-11-12 16:28:57,494:INFO:Preloading libraries
2024-11-12 16:28:57,494:INFO:Set up data.
2024-11-12 16:28:57,497:INFO:Set up index.
2024-11-12 16:28:57,657:INFO:Initializing predict_model()
2024-11-12 16:28:57,657:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:57,657:INFO:Checking exceptions
2024-11-12 16:28:57,657:INFO:Preloading libraries
2024-11-12 16:28:57,657:INFO:Set up data.
2024-11-12 16:28:57,660:INFO:Set up index.
2024-11-12 16:28:57,836:INFO:Initializing predict_model()
2024-11-12 16:28:57,836:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A386EB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:57,836:INFO:Checking exceptions
2024-11-12 16:28:57,837:INFO:Preloading libraries
2024-11-12 16:28:57,837:INFO:Set up data.
2024-11-12 16:28:57,839:INFO:Set up index.
2024-11-12 16:28:58,013:INFO:Initializing predict_model()
2024-11-12 16:28:58,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:58,013:INFO:Checking exceptions
2024-11-12 16:28:58,013:INFO:Preloading libraries
2024-11-12 16:28:58,013:INFO:Set up data.
2024-11-12 16:28:58,015:INFO:Set up index.
2024-11-12 16:28:58,192:INFO:Initializing predict_model()
2024-11-12 16:28:58,192:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:58,192:INFO:Checking exceptions
2024-11-12 16:28:58,192:INFO:Preloading libraries
2024-11-12 16:28:58,193:INFO:Set up data.
2024-11-12 16:28:58,194:INFO:Set up index.
2024-11-12 16:28:58,367:INFO:Initializing predict_model()
2024-11-12 16:28:58,367:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:58,367:INFO:Checking exceptions
2024-11-12 16:28:58,367:INFO:Preloading libraries
2024-11-12 16:28:58,367:INFO:Set up data.
2024-11-12 16:28:58,370:INFO:Set up index.
2024-11-12 16:28:58,544:INFO:Initializing predict_model()
2024-11-12 16:28:58,544:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:58,544:INFO:Checking exceptions
2024-11-12 16:28:58,544:INFO:Preloading libraries
2024-11-12 16:28:58,544:INFO:Set up data.
2024-11-12 16:28:58,546:INFO:Set up index.
2024-11-12 16:28:58,718:INFO:Initializing predict_model()
2024-11-12 16:28:58,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:58,718:INFO:Checking exceptions
2024-11-12 16:28:58,718:INFO:Preloading libraries
2024-11-12 16:28:58,718:INFO:Set up data.
2024-11-12 16:28:58,721:INFO:Set up index.
2024-11-12 16:28:58,897:INFO:Initializing predict_model()
2024-11-12 16:28:58,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F320310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:58,897:INFO:Checking exceptions
2024-11-12 16:28:58,898:INFO:Preloading libraries
2024-11-12 16:28:58,898:INFO:Set up data.
2024-11-12 16:28:58,901:INFO:Set up index.
2024-11-12 16:28:59,059:INFO:Initializing predict_model()
2024-11-12 16:28:59,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:59,060:INFO:Checking exceptions
2024-11-12 16:28:59,060:INFO:Preloading libraries
2024-11-12 16:28:59,060:INFO:Set up data.
2024-11-12 16:28:59,062:INFO:Set up index.
2024-11-12 16:28:59,228:INFO:Initializing predict_model()
2024-11-12 16:28:59,228:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BE790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:59,228:INFO:Checking exceptions
2024-11-12 16:28:59,228:INFO:Preloading libraries
2024-11-12 16:28:59,228:INFO:Set up data.
2024-11-12 16:28:59,230:INFO:Set up index.
2024-11-12 16:28:59,397:INFO:Initializing predict_model()
2024-11-12 16:28:59,397:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2D6890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:59,397:INFO:Checking exceptions
2024-11-12 16:28:59,397:INFO:Preloading libraries
2024-11-12 16:28:59,398:INFO:Set up data.
2024-11-12 16:28:59,400:INFO:Set up index.
2024-11-12 16:28:59,594:INFO:Initializing predict_model()
2024-11-12 16:28:59,594:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F320290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:59,594:INFO:Checking exceptions
2024-11-12 16:28:59,594:INFO:Preloading libraries
2024-11-12 16:28:59,594:INFO:Set up data.
2024-11-12 16:28:59,597:INFO:Set up index.
2024-11-12 16:28:59,778:INFO:Initializing predict_model()
2024-11-12 16:28:59,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C80D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:59,779:INFO:Checking exceptions
2024-11-12 16:28:59,779:INFO:Preloading libraries
2024-11-12 16:28:59,779:INFO:Set up data.
2024-11-12 16:28:59,781:INFO:Set up index.
2024-11-12 16:28:59,948:INFO:Initializing predict_model()
2024-11-12 16:28:59,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:28:59,949:INFO:Checking exceptions
2024-11-12 16:28:59,949:INFO:Preloading libraries
2024-11-12 16:28:59,949:INFO:Set up data.
2024-11-12 16:28:59,952:INFO:Set up index.
2024-11-12 16:29:00,129:INFO:Initializing predict_model()
2024-11-12 16:29:00,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604FAC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:00,129:INFO:Checking exceptions
2024-11-12 16:29:00,129:INFO:Preloading libraries
2024-11-12 16:29:00,130:INFO:Set up data.
2024-11-12 16:29:00,133:INFO:Set up index.
2024-11-12 16:29:00,288:INFO:Initializing predict_model()
2024-11-12 16:29:00,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C52D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:00,288:INFO:Checking exceptions
2024-11-12 16:29:00,288:INFO:Preloading libraries
2024-11-12 16:29:00,288:INFO:Set up data.
2024-11-12 16:29:00,291:INFO:Set up index.
2024-11-12 16:29:00,449:INFO:Initializing predict_model()
2024-11-12 16:29:00,449:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:00,449:INFO:Checking exceptions
2024-11-12 16:29:00,449:INFO:Preloading libraries
2024-11-12 16:29:00,449:INFO:Set up data.
2024-11-12 16:29:00,453:INFO:Set up index.
2024-11-12 16:29:00,619:INFO:Initializing predict_model()
2024-11-12 16:29:00,619:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F112850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:00,619:INFO:Checking exceptions
2024-11-12 16:29:00,619:INFO:Preloading libraries
2024-11-12 16:29:00,619:INFO:Set up data.
2024-11-12 16:29:00,621:INFO:Set up index.
2024-11-12 16:29:00,793:INFO:Initializing predict_model()
2024-11-12 16:29:00,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604DE0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:00,794:INFO:Checking exceptions
2024-11-12 16:29:00,794:INFO:Preloading libraries
2024-11-12 16:29:00,794:INFO:Set up data.
2024-11-12 16:29:00,796:INFO:Set up index.
2024-11-12 16:29:00,942:INFO:Initializing predict_model()
2024-11-12 16:29:00,942:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A49D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:00,942:INFO:Checking exceptions
2024-11-12 16:29:00,942:INFO:Preloading libraries
2024-11-12 16:29:00,942:INFO:Set up data.
2024-11-12 16:29:00,945:INFO:Set up index.
2024-11-12 16:29:01,096:INFO:Initializing predict_model()
2024-11-12 16:29:01,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37052E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:01,096:INFO:Checking exceptions
2024-11-12 16:29:01,096:INFO:Preloading libraries
2024-11-12 16:29:01,097:INFO:Set up data.
2024-11-12 16:29:01,100:INFO:Set up index.
2024-11-12 16:29:01,263:INFO:Initializing predict_model()
2024-11-12 16:29:01,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BFED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:01,263:INFO:Checking exceptions
2024-11-12 16:29:01,263:INFO:Preloading libraries
2024-11-12 16:29:01,264:INFO:Set up data.
2024-11-12 16:29:01,266:INFO:Set up index.
2024-11-12 16:29:01,427:INFO:Initializing predict_model()
2024-11-12 16:29:01,427:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:01,427:INFO:Checking exceptions
2024-11-12 16:29:01,427:INFO:Preloading libraries
2024-11-12 16:29:01,427:INFO:Set up data.
2024-11-12 16:29:01,430:INFO:Set up index.
2024-11-12 16:29:01,576:INFO:Initializing predict_model()
2024-11-12 16:29:01,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AC690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:01,576:INFO:Checking exceptions
2024-11-12 16:29:01,576:INFO:Preloading libraries
2024-11-12 16:29:01,577:INFO:Set up data.
2024-11-12 16:29:01,579:INFO:Set up index.
2024-11-12 16:29:01,733:INFO:Initializing predict_model()
2024-11-12 16:29:01,733:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CB8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:01,733:INFO:Checking exceptions
2024-11-12 16:29:01,733:INFO:Preloading libraries
2024-11-12 16:29:01,733:INFO:Set up data.
2024-11-12 16:29:01,736:INFO:Set up index.
2024-11-12 16:29:01,906:INFO:Initializing predict_model()
2024-11-12 16:29:01,906:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A60416110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:01,907:INFO:Checking exceptions
2024-11-12 16:29:01,907:INFO:Preloading libraries
2024-11-12 16:29:01,907:INFO:Set up data.
2024-11-12 16:29:01,910:INFO:Set up index.
2024-11-12 16:29:02,076:INFO:Initializing predict_model()
2024-11-12 16:29:02,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A334CEB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:29:02,076:INFO:Checking exceptions
2024-11-12 16:29:02,076:INFO:Preloading libraries
2024-11-12 16:29:02,076:INFO:Set up data.
2024-11-12 16:29:02,079:INFO:Set up index.
2024-11-12 16:29:02,239:INFO:Initializing predict_model()
2024-11-12 16:29:02,239:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:29:02,239:INFO:Checking exceptions
2024-11-12 16:29:02,239:INFO:Preloading libraries
2024-11-12 16:29:02,240:INFO:Set up data.
2024-11-12 16:29:02,242:INFO:Set up index.
2024-11-12 16:29:02,402:INFO:Initializing predict_model()
2024-11-12 16:29:02,402:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:29:02,402:INFO:Checking exceptions
2024-11-12 16:29:02,402:INFO:Preloading libraries
2024-11-12 16:29:02,402:INFO:Set up data.
2024-11-12 16:29:02,405:INFO:Set up index.
2024-11-12 16:29:02,571:INFO:Initializing predict_model()
2024-11-12 16:29:02,571:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E44690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:29:02,571:INFO:Checking exceptions
2024-11-12 16:29:02,571:INFO:Preloading libraries
2024-11-12 16:29:02,571:INFO:Set up data.
2024-11-12 16:29:02,575:INFO:Set up index.
2024-11-12 16:29:02,737:INFO:Initializing predict_model()
2024-11-12 16:29:02,737:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:29:02,737:INFO:Checking exceptions
2024-11-12 16:29:02,738:INFO:Preloading libraries
2024-11-12 16:29:02,738:INFO:Set up data.
2024-11-12 16:29:02,741:INFO:Set up index.
2024-11-12 16:29:02,904:INFO:Initializing predict_model()
2024-11-12 16:29:02,905:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F112850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A370800E0>)
2024-11-12 16:29:02,905:INFO:Checking exceptions
2024-11-12 16:29:02,905:INFO:Preloading libraries
2024-11-12 16:29:02,905:INFO:Set up data.
2024-11-12 16:29:02,908:INFO:Set up index.
2024-11-12 16:29:03,055:INFO:Initializing predict_model()
2024-11-12 16:29:03,055:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:03,055:INFO:Checking exceptions
2024-11-12 16:29:03,055:INFO:Preloading libraries
2024-11-12 16:29:03,055:INFO:Set up data.
2024-11-12 16:29:03,058:INFO:Set up index.
2024-11-12 16:29:03,219:INFO:Initializing predict_model()
2024-11-12 16:29:03,219:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:03,219:INFO:Checking exceptions
2024-11-12 16:29:03,219:INFO:Preloading libraries
2024-11-12 16:29:03,220:INFO:Set up data.
2024-11-12 16:29:03,222:INFO:Set up index.
2024-11-12 16:29:03,380:INFO:Initializing predict_model()
2024-11-12 16:29:03,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:03,380:INFO:Checking exceptions
2024-11-12 16:29:03,380:INFO:Preloading libraries
2024-11-12 16:29:03,380:INFO:Set up data.
2024-11-12 16:29:03,383:INFO:Set up index.
2024-11-12 16:29:03,549:INFO:Initializing predict_model()
2024-11-12 16:29:03,549:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AB2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:03,549:INFO:Checking exceptions
2024-11-12 16:29:03,549:INFO:Preloading libraries
2024-11-12 16:29:03,549:INFO:Set up data.
2024-11-12 16:29:03,552:INFO:Set up index.
2024-11-12 16:29:03,718:INFO:Initializing predict_model()
2024-11-12 16:29:03,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:03,718:INFO:Checking exceptions
2024-11-12 16:29:03,718:INFO:Preloading libraries
2024-11-12 16:29:03,718:INFO:Set up data.
2024-11-12 16:29:03,720:INFO:Set up index.
2024-11-12 16:29:03,877:INFO:Initializing predict_model()
2024-11-12 16:29:03,877:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F29DAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:03,877:INFO:Checking exceptions
2024-11-12 16:29:03,877:INFO:Preloading libraries
2024-11-12 16:29:03,877:INFO:Set up data.
2024-11-12 16:29:03,880:INFO:Set up index.
2024-11-12 16:29:04,028:INFO:Initializing predict_model()
2024-11-12 16:29:04,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:04,028:INFO:Checking exceptions
2024-11-12 16:29:04,028:INFO:Preloading libraries
2024-11-12 16:29:04,028:INFO:Set up data.
2024-11-12 16:29:04,031:INFO:Set up index.
2024-11-12 16:29:04,188:INFO:Initializing predict_model()
2024-11-12 16:29:04,189:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F29C690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:04,189:INFO:Checking exceptions
2024-11-12 16:29:04,189:INFO:Preloading libraries
2024-11-12 16:29:04,189:INFO:Set up data.
2024-11-12 16:29:04,191:INFO:Set up index.
2024-11-12 16:29:04,354:INFO:Initializing predict_model()
2024-11-12 16:29:04,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:04,354:INFO:Checking exceptions
2024-11-12 16:29:04,354:INFO:Preloading libraries
2024-11-12 16:29:04,355:INFO:Set up data.
2024-11-12 16:29:04,357:INFO:Set up index.
2024-11-12 16:29:04,523:INFO:Initializing predict_model()
2024-11-12 16:29:04,523:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5B06D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:04,523:INFO:Checking exceptions
2024-11-12 16:29:04,523:INFO:Preloading libraries
2024-11-12 16:29:04,523:INFO:Set up data.
2024-11-12 16:29:04,526:INFO:Set up index.
2024-11-12 16:29:04,678:INFO:Initializing predict_model()
2024-11-12 16:29:04,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604ADDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:04,679:INFO:Checking exceptions
2024-11-12 16:29:04,679:INFO:Preloading libraries
2024-11-12 16:29:04,679:INFO:Set up data.
2024-11-12 16:29:04,682:INFO:Set up index.
2024-11-12 16:29:04,826:INFO:Initializing predict_model()
2024-11-12 16:29:04,826:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:04,826:INFO:Checking exceptions
2024-11-12 16:29:04,826:INFO:Preloading libraries
2024-11-12 16:29:04,827:INFO:Set up data.
2024-11-12 16:29:04,829:INFO:Set up index.
2024-11-12 16:29:05,010:INFO:Initializing predict_model()
2024-11-12 16:29:05,010:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:05,010:INFO:Checking exceptions
2024-11-12 16:29:05,010:INFO:Preloading libraries
2024-11-12 16:29:05,010:INFO:Set up data.
2024-11-12 16:29:05,012:INFO:Set up index.
2024-11-12 16:29:05,169:INFO:Initializing predict_model()
2024-11-12 16:29:05,169:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:05,169:INFO:Checking exceptions
2024-11-12 16:29:05,169:INFO:Preloading libraries
2024-11-12 16:29:05,169:INFO:Set up data.
2024-11-12 16:29:05,172:INFO:Set up index.
2024-11-12 16:29:05,339:INFO:Initializing predict_model()
2024-11-12 16:29:05,339:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604B10D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:05,340:INFO:Checking exceptions
2024-11-12 16:29:05,340:INFO:Preloading libraries
2024-11-12 16:29:05,340:INFO:Set up data.
2024-11-12 16:29:05,342:INFO:Set up index.
2024-11-12 16:29:05,493:INFO:Initializing predict_model()
2024-11-12 16:29:05,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:05,494:INFO:Checking exceptions
2024-11-12 16:29:05,494:INFO:Preloading libraries
2024-11-12 16:29:05,494:INFO:Set up data.
2024-11-12 16:29:05,496:INFO:Set up index.
2024-11-12 16:29:05,658:INFO:Initializing predict_model()
2024-11-12 16:29:05,658:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E738D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:05,658:INFO:Checking exceptions
2024-11-12 16:29:05,658:INFO:Preloading libraries
2024-11-12 16:29:05,658:INFO:Set up data.
2024-11-12 16:29:05,661:INFO:Set up index.
2024-11-12 16:29:05,818:INFO:Initializing predict_model()
2024-11-12 16:29:05,818:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:05,818:INFO:Checking exceptions
2024-11-12 16:29:05,818:INFO:Preloading libraries
2024-11-12 16:29:05,818:INFO:Set up data.
2024-11-12 16:29:05,821:INFO:Set up index.
2024-11-12 16:29:05,979:INFO:Initializing predict_model()
2024-11-12 16:29:05,980:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:05,980:INFO:Checking exceptions
2024-11-12 16:29:05,981:INFO:Preloading libraries
2024-11-12 16:29:05,981:INFO:Set up data.
2024-11-12 16:29:05,983:INFO:Set up index.
2024-11-12 16:29:06,149:INFO:Initializing predict_model()
2024-11-12 16:29:06,150:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C9410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:06,156:INFO:Checking exceptions
2024-11-12 16:29:06,156:INFO:Preloading libraries
2024-11-12 16:29:06,156:INFO:Set up data.
2024-11-12 16:29:06,160:INFO:Set up index.
2024-11-12 16:29:06,310:INFO:Initializing predict_model()
2024-11-12 16:29:06,310:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:06,311:INFO:Checking exceptions
2024-11-12 16:29:06,311:INFO:Preloading libraries
2024-11-12 16:29:06,311:INFO:Set up data.
2024-11-12 16:29:06,313:INFO:Set up index.
2024-11-12 16:29:06,471:INFO:Initializing predict_model()
2024-11-12 16:29:06,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F325850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:06,471:INFO:Checking exceptions
2024-11-12 16:29:06,471:INFO:Preloading libraries
2024-11-12 16:29:06,471:INFO:Set up data.
2024-11-12 16:29:06,474:INFO:Set up index.
2024-11-12 16:29:06,638:INFO:Initializing predict_model()
2024-11-12 16:29:06,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:06,638:INFO:Checking exceptions
2024-11-12 16:29:06,638:INFO:Preloading libraries
2024-11-12 16:29:06,638:INFO:Set up data.
2024-11-12 16:29:06,640:INFO:Set up index.
2024-11-12 16:29:06,810:INFO:Initializing predict_model()
2024-11-12 16:29:06,810:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:06,810:INFO:Checking exceptions
2024-11-12 16:29:06,810:INFO:Preloading libraries
2024-11-12 16:29:06,810:INFO:Set up data.
2024-11-12 16:29:06,812:INFO:Set up index.
2024-11-12 16:29:06,992:INFO:Initializing predict_model()
2024-11-12 16:29:06,992:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:06,992:INFO:Checking exceptions
2024-11-12 16:29:06,992:INFO:Preloading libraries
2024-11-12 16:29:06,992:INFO:Set up data.
2024-11-12 16:29:06,995:INFO:Set up index.
2024-11-12 16:29:07,196:INFO:Initializing predict_model()
2024-11-12 16:29:07,196:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:07,196:INFO:Checking exceptions
2024-11-12 16:29:07,196:INFO:Preloading libraries
2024-11-12 16:29:07,196:INFO:Set up data.
2024-11-12 16:29:07,198:INFO:Set up index.
2024-11-12 16:29:07,360:INFO:Initializing predict_model()
2024-11-12 16:29:07,360:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:07,360:INFO:Checking exceptions
2024-11-12 16:29:07,360:INFO:Preloading libraries
2024-11-12 16:29:07,360:INFO:Set up data.
2024-11-12 16:29:07,363:INFO:Set up index.
2024-11-12 16:29:07,536:INFO:Initializing predict_model()
2024-11-12 16:29:07,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:07,536:INFO:Checking exceptions
2024-11-12 16:29:07,536:INFO:Preloading libraries
2024-11-12 16:29:07,536:INFO:Set up data.
2024-11-12 16:29:07,539:INFO:Set up index.
2024-11-12 16:29:07,703:INFO:Initializing predict_model()
2024-11-12 16:29:07,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:07,704:INFO:Checking exceptions
2024-11-12 16:29:07,704:INFO:Preloading libraries
2024-11-12 16:29:07,704:INFO:Set up data.
2024-11-12 16:29:07,706:INFO:Set up index.
2024-11-12 16:29:07,852:INFO:Initializing predict_model()
2024-11-12 16:29:07,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A386EB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A36E1E2A0>)
2024-11-12 16:29:07,853:INFO:Checking exceptions
2024-11-12 16:29:07,853:INFO:Preloading libraries
2024-11-12 16:29:07,853:INFO:Set up data.
2024-11-12 16:29:07,855:INFO:Set up index.
2024-11-12 16:29:08,013:INFO:Initializing predict_model()
2024-11-12 16:29:08,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370798D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:08,013:INFO:Checking exceptions
2024-11-12 16:29:08,013:INFO:Preloading libraries
2024-11-12 16:29:08,013:INFO:Set up data.
2024-11-12 16:29:08,017:INFO:Set up index.
2024-11-12 16:29:08,190:INFO:Initializing predict_model()
2024-11-12 16:29:08,190:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:08,190:INFO:Checking exceptions
2024-11-12 16:29:08,190:INFO:Preloading libraries
2024-11-12 16:29:08,191:INFO:Set up data.
2024-11-12 16:29:08,193:INFO:Set up index.
2024-11-12 16:29:08,359:INFO:Initializing predict_model()
2024-11-12 16:29:08,359:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E44690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:08,359:INFO:Checking exceptions
2024-11-12 16:29:08,359:INFO:Preloading libraries
2024-11-12 16:29:08,359:INFO:Set up data.
2024-11-12 16:29:08,362:INFO:Set up index.
2024-11-12 16:29:08,525:INFO:Initializing predict_model()
2024-11-12 16:29:08,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604ACE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:08,525:INFO:Checking exceptions
2024-11-12 16:29:08,525:INFO:Preloading libraries
2024-11-12 16:29:08,525:INFO:Set up data.
2024-11-12 16:29:08,528:INFO:Set up index.
2024-11-12 16:29:08,685:INFO:Initializing predict_model()
2024-11-12 16:29:08,685:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:08,685:INFO:Checking exceptions
2024-11-12 16:29:08,685:INFO:Preloading libraries
2024-11-12 16:29:08,685:INFO:Set up data.
2024-11-12 16:29:08,688:INFO:Set up index.
2024-11-12 16:29:08,845:INFO:Initializing predict_model()
2024-11-12 16:29:08,846:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:08,846:INFO:Checking exceptions
2024-11-12 16:29:08,846:INFO:Preloading libraries
2024-11-12 16:29:08,846:INFO:Set up data.
2024-11-12 16:29:08,848:INFO:Set up index.
2024-11-12 16:29:09,009:INFO:Initializing predict_model()
2024-11-12 16:29:09,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4BF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:09,009:INFO:Checking exceptions
2024-11-12 16:29:09,009:INFO:Preloading libraries
2024-11-12 16:29:09,009:INFO:Set up data.
2024-11-12 16:29:09,012:INFO:Set up index.
2024-11-12 16:29:09,182:INFO:Initializing predict_model()
2024-11-12 16:29:09,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:09,182:INFO:Checking exceptions
2024-11-12 16:29:09,182:INFO:Preloading libraries
2024-11-12 16:29:09,182:INFO:Set up data.
2024-11-12 16:29:09,185:INFO:Set up index.
2024-11-12 16:29:09,352:INFO:Initializing predict_model()
2024-11-12 16:29:09,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F111090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:09,353:INFO:Checking exceptions
2024-11-12 16:29:09,353:INFO:Preloading libraries
2024-11-12 16:29:09,353:INFO:Set up data.
2024-11-12 16:29:09,355:INFO:Set up index.
2024-11-12 16:29:09,510:INFO:Initializing predict_model()
2024-11-12 16:29:09,510:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F321550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:09,510:INFO:Checking exceptions
2024-11-12 16:29:09,510:INFO:Preloading libraries
2024-11-12 16:29:09,510:INFO:Set up data.
2024-11-12 16:29:09,513:INFO:Set up index.
2024-11-12 16:29:09,664:INFO:Initializing predict_model()
2024-11-12 16:29:09,664:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:09,664:INFO:Checking exceptions
2024-11-12 16:29:09,664:INFO:Preloading libraries
2024-11-12 16:29:09,665:INFO:Set up data.
2024-11-12 16:29:09,667:INFO:Set up index.
2024-11-12 16:29:09,853:INFO:Initializing predict_model()
2024-11-12 16:29:09,853:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A334CEB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:09,853:INFO:Checking exceptions
2024-11-12 16:29:09,854:INFO:Preloading libraries
2024-11-12 16:29:09,854:INFO:Set up data.
2024-11-12 16:29:09,857:INFO:Set up index.
2024-11-12 16:29:10,047:INFO:Initializing predict_model()
2024-11-12 16:29:10,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056C850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:10,047:INFO:Checking exceptions
2024-11-12 16:29:10,047:INFO:Preloading libraries
2024-11-12 16:29:10,048:INFO:Set up data.
2024-11-12 16:29:10,051:INFO:Set up index.
2024-11-12 16:29:10,222:INFO:Initializing predict_model()
2024-11-12 16:29:10,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A49D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:10,222:INFO:Checking exceptions
2024-11-12 16:29:10,222:INFO:Preloading libraries
2024-11-12 16:29:10,222:INFO:Set up data.
2024-11-12 16:29:10,224:INFO:Set up index.
2024-11-12 16:29:10,404:INFO:Initializing predict_model()
2024-11-12 16:29:10,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:10,404:INFO:Checking exceptions
2024-11-12 16:29:10,404:INFO:Preloading libraries
2024-11-12 16:29:10,404:INFO:Set up data.
2024-11-12 16:29:10,407:INFO:Set up index.
2024-11-12 16:29:10,572:INFO:Initializing predict_model()
2024-11-12 16:29:10,572:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:10,572:INFO:Checking exceptions
2024-11-12 16:29:10,572:INFO:Preloading libraries
2024-11-12 16:29:10,572:INFO:Set up data.
2024-11-12 16:29:10,574:INFO:Set up index.
2024-11-12 16:29:10,731:INFO:Initializing predict_model()
2024-11-12 16:29:10,731:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:10,731:INFO:Checking exceptions
2024-11-12 16:29:10,731:INFO:Preloading libraries
2024-11-12 16:29:10,732:INFO:Set up data.
2024-11-12 16:29:10,734:INFO:Set up index.
2024-11-12 16:29:10,935:INFO:Initializing predict_model()
2024-11-12 16:29:10,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:10,935:INFO:Checking exceptions
2024-11-12 16:29:10,935:INFO:Preloading libraries
2024-11-12 16:29:10,935:INFO:Set up data.
2024-11-12 16:29:10,938:INFO:Set up index.
2024-11-12 16:29:11,109:INFO:Initializing predict_model()
2024-11-12 16:29:11,110:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2D7C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:11,110:INFO:Checking exceptions
2024-11-12 16:29:11,110:INFO:Preloading libraries
2024-11-12 16:29:11,110:INFO:Set up data.
2024-11-12 16:29:11,113:INFO:Set up index.
2024-11-12 16:29:11,262:INFO:Initializing predict_model()
2024-11-12 16:29:11,262:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E738D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:11,262:INFO:Checking exceptions
2024-11-12 16:29:11,262:INFO:Preloading libraries
2024-11-12 16:29:11,262:INFO:Set up data.
2024-11-12 16:29:11,265:INFO:Set up index.
2024-11-12 16:29:11,432:INFO:Initializing predict_model()
2024-11-12 16:29:11,432:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:11,432:INFO:Checking exceptions
2024-11-12 16:29:11,432:INFO:Preloading libraries
2024-11-12 16:29:11,433:INFO:Set up data.
2024-11-12 16:29:11,438:INFO:Set up index.
2024-11-12 16:29:11,614:INFO:Initializing predict_model()
2024-11-12 16:29:11,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:11,614:INFO:Checking exceptions
2024-11-12 16:29:11,614:INFO:Preloading libraries
2024-11-12 16:29:11,614:INFO:Set up data.
2024-11-12 16:29:11,617:INFO:Set up index.
2024-11-12 16:29:11,793:INFO:Initializing predict_model()
2024-11-12 16:29:11,793:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F320290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:11,793:INFO:Checking exceptions
2024-11-12 16:29:11,793:INFO:Preloading libraries
2024-11-12 16:29:11,793:INFO:Set up data.
2024-11-12 16:29:11,795:INFO:Set up index.
2024-11-12 16:29:11,959:INFO:Initializing predict_model()
2024-11-12 16:29:11,959:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BFED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:11,959:INFO:Checking exceptions
2024-11-12 16:29:11,959:INFO:Preloading libraries
2024-11-12 16:29:11,960:INFO:Set up data.
2024-11-12 16:29:11,963:INFO:Set up index.
2024-11-12 16:29:12,127:INFO:Initializing predict_model()
2024-11-12 16:29:12,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604AC790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:12,127:INFO:Checking exceptions
2024-11-12 16:29:12,127:INFO:Preloading libraries
2024-11-12 16:29:12,127:INFO:Set up data.
2024-11-12 16:29:12,129:INFO:Set up index.
2024-11-12 16:29:12,306:INFO:Initializing predict_model()
2024-11-12 16:29:12,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AA0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:12,306:INFO:Checking exceptions
2024-11-12 16:29:12,306:INFO:Preloading libraries
2024-11-12 16:29:12,306:INFO:Set up data.
2024-11-12 16:29:12,309:INFO:Set up index.
2024-11-12 16:29:12,477:INFO:Initializing predict_model()
2024-11-12 16:29:12,479:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:12,479:INFO:Checking exceptions
2024-11-12 16:29:12,479:INFO:Preloading libraries
2024-11-12 16:29:12,479:INFO:Set up data.
2024-11-12 16:29:12,481:INFO:Set up index.
2024-11-12 16:29:12,661:INFO:Initializing predict_model()
2024-11-12 16:29:12,661:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A334CEB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:12,661:INFO:Checking exceptions
2024-11-12 16:29:12,661:INFO:Preloading libraries
2024-11-12 16:29:12,662:INFO:Set up data.
2024-11-12 16:29:12,664:INFO:Set up index.
2024-11-12 16:29:12,826:INFO:Initializing predict_model()
2024-11-12 16:29:12,826:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:12,826:INFO:Checking exceptions
2024-11-12 16:29:12,826:INFO:Preloading libraries
2024-11-12 16:29:12,826:INFO:Set up data.
2024-11-12 16:29:12,829:INFO:Set up index.
2024-11-12 16:29:12,987:INFO:Initializing predict_model()
2024-11-12 16:29:12,987:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604ACE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:12,987:INFO:Checking exceptions
2024-11-12 16:29:12,987:INFO:Preloading libraries
2024-11-12 16:29:12,987:INFO:Set up data.
2024-11-12 16:29:12,990:INFO:Set up index.
2024-11-12 16:29:13,164:INFO:Initializing predict_model()
2024-11-12 16:29:13,164:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A365C7910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:13,164:INFO:Checking exceptions
2024-11-12 16:29:13,164:INFO:Preloading libraries
2024-11-12 16:29:13,164:INFO:Set up data.
2024-11-12 16:29:13,167:INFO:Set up index.
2024-11-12 16:29:13,329:INFO:Initializing predict_model()
2024-11-12 16:29:13,329:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:13,329:INFO:Checking exceptions
2024-11-12 16:29:13,329:INFO:Preloading libraries
2024-11-12 16:29:13,329:INFO:Set up data.
2024-11-12 16:29:13,332:INFO:Set up index.
2024-11-12 16:29:13,529:INFO:Initializing predict_model()
2024-11-12 16:29:13,529:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AC690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:13,529:INFO:Checking exceptions
2024-11-12 16:29:13,529:INFO:Preloading libraries
2024-11-12 16:29:13,529:INFO:Set up data.
2024-11-12 16:29:13,532:INFO:Set up index.
2024-11-12 16:29:13,706:INFO:Initializing predict_model()
2024-11-12 16:29:13,706:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:13,706:INFO:Checking exceptions
2024-11-12 16:29:13,706:INFO:Preloading libraries
2024-11-12 16:29:13,706:INFO:Set up data.
2024-11-12 16:29:13,709:INFO:Set up index.
2024-11-12 16:29:13,874:INFO:Initializing predict_model()
2024-11-12 16:29:13,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A365C7910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F104D60>)
2024-11-12 16:29:13,875:INFO:Checking exceptions
2024-11-12 16:29:13,875:INFO:Preloading libraries
2024-11-12 16:29:13,875:INFO:Set up data.
2024-11-12 16:29:13,878:INFO:Set up index.
2024-11-12 16:29:14,042:INFO:Initializing predict_model()
2024-11-12 16:29:14,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6047BC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F26B9C0>)
2024-11-12 16:29:14,042:INFO:Checking exceptions
2024-11-12 16:29:14,042:INFO:Preloading libraries
2024-11-12 16:29:14,042:INFO:Set up data.
2024-11-12 16:29:14,044:INFO:Set up index.
2024-11-12 16:29:14,215:INFO:Initializing predict_model()
2024-11-12 16:29:14,215:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F26B9C0>)
2024-11-12 16:29:14,215:INFO:Checking exceptions
2024-11-12 16:29:14,215:INFO:Preloading libraries
2024-11-12 16:29:14,215:INFO:Set up data.
2024-11-12 16:29:14,220:INFO:Set up index.
2024-11-12 16:29:14,396:INFO:Initializing predict_model()
2024-11-12 16:29:14,396:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BFED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F26B9C0>)
2024-11-12 16:29:14,396:INFO:Checking exceptions
2024-11-12 16:29:14,396:INFO:Preloading libraries
2024-11-12 16:29:14,396:INFO:Set up data.
2024-11-12 16:29:14,399:INFO:Set up index.
2024-11-12 16:29:14,574:INFO:Initializing predict_model()
2024-11-12 16:29:14,574:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AB2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F26B9C0>)
2024-11-12 16:29:14,574:INFO:Checking exceptions
2024-11-12 16:29:14,574:INFO:Preloading libraries
2024-11-12 16:29:14,574:INFO:Set up data.
2024-11-12 16:29:14,578:INFO:Set up index.
2024-11-12 16:29:14,733:INFO:Initializing predict_model()
2024-11-12 16:29:14,736:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F26B9C0>)
2024-11-12 16:29:14,736:INFO:Checking exceptions
2024-11-12 16:29:14,736:INFO:Preloading libraries
2024-11-12 16:29:14,736:INFO:Set up data.
2024-11-12 16:29:14,740:INFO:Set up index.
2024-11-12 16:29:14,903:INFO:Initializing predict_model()
2024-11-12 16:29:14,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A5F26B9C0>)
2024-11-12 16:29:14,904:INFO:Checking exceptions
2024-11-12 16:29:14,904:INFO:Preloading libraries
2024-11-12 16:29:14,904:INFO:Set up data.
2024-11-12 16:29:14,907:INFO:Set up index.
2024-11-12 16:29:15,068:INFO:Initializing predict_model()
2024-11-12 16:29:15,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AB290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:15,068:INFO:Checking exceptions
2024-11-12 16:29:15,068:INFO:Preloading libraries
2024-11-12 16:29:15,069:INFO:Set up data.
2024-11-12 16:29:15,071:INFO:Set up index.
2024-11-12 16:29:15,236:INFO:Initializing predict_model()
2024-11-12 16:29:15,237:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:15,237:INFO:Checking exceptions
2024-11-12 16:29:15,237:INFO:Preloading libraries
2024-11-12 16:29:15,237:INFO:Set up data.
2024-11-12 16:29:15,239:INFO:Set up index.
2024-11-12 16:29:15,399:INFO:Initializing predict_model()
2024-11-12 16:29:15,399:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:15,399:INFO:Checking exceptions
2024-11-12 16:29:15,399:INFO:Preloading libraries
2024-11-12 16:29:15,399:INFO:Set up data.
2024-11-12 16:29:15,403:INFO:Set up index.
2024-11-12 16:29:15,566:INFO:Initializing predict_model()
2024-11-12 16:29:15,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:15,566:INFO:Checking exceptions
2024-11-12 16:29:15,566:INFO:Preloading libraries
2024-11-12 16:29:15,567:INFO:Set up data.
2024-11-12 16:29:15,569:INFO:Set up index.
2024-11-12 16:29:15,739:INFO:Initializing predict_model()
2024-11-12 16:29:15,740:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F327B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:15,740:INFO:Checking exceptions
2024-11-12 16:29:15,740:INFO:Preloading libraries
2024-11-12 16:29:15,740:INFO:Set up data.
2024-11-12 16:29:15,742:INFO:Set up index.
2024-11-12 16:29:15,915:INFO:Initializing predict_model()
2024-11-12 16:29:15,915:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:15,915:INFO:Checking exceptions
2024-11-12 16:29:15,915:INFO:Preloading libraries
2024-11-12 16:29:15,915:INFO:Set up data.
2024-11-12 16:29:15,918:INFO:Set up index.
2024-11-12 16:29:16,076:INFO:Initializing predict_model()
2024-11-12 16:29:16,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:16,077:INFO:Checking exceptions
2024-11-12 16:29:16,077:INFO:Preloading libraries
2024-11-12 16:29:16,077:INFO:Set up data.
2024-11-12 16:29:16,078:INFO:Set up index.
2024-11-12 16:29:16,246:INFO:Initializing predict_model()
2024-11-12 16:29:16,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BEC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:16,246:INFO:Checking exceptions
2024-11-12 16:29:16,246:INFO:Preloading libraries
2024-11-12 16:29:16,247:INFO:Set up data.
2024-11-12 16:29:16,249:INFO:Set up index.
2024-11-12 16:29:16,432:INFO:Initializing predict_model()
2024-11-12 16:29:16,432:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37051310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:16,432:INFO:Checking exceptions
2024-11-12 16:29:16,432:INFO:Preloading libraries
2024-11-12 16:29:16,432:INFO:Set up data.
2024-11-12 16:29:16,435:INFO:Set up index.
2024-11-12 16:29:16,601:INFO:Initializing predict_model()
2024-11-12 16:29:16,601:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:16,601:INFO:Checking exceptions
2024-11-12 16:29:16,601:INFO:Preloading libraries
2024-11-12 16:29:16,601:INFO:Set up data.
2024-11-12 16:29:16,604:INFO:Set up index.
2024-11-12 16:29:16,797:INFO:Initializing predict_model()
2024-11-12 16:29:16,797:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:16,797:INFO:Checking exceptions
2024-11-12 16:29:16,797:INFO:Preloading libraries
2024-11-12 16:29:16,797:INFO:Set up data.
2024-11-12 16:29:16,799:INFO:Set up index.
2024-11-12 16:29:17,067:INFO:Initializing predict_model()
2024-11-12 16:29:17,067:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:17,067:INFO:Checking exceptions
2024-11-12 16:29:17,067:INFO:Preloading libraries
2024-11-12 16:29:17,067:INFO:Set up data.
2024-11-12 16:29:17,071:INFO:Set up index.
2024-11-12 16:29:17,247:INFO:Initializing predict_model()
2024-11-12 16:29:17,248:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370913D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:17,248:INFO:Checking exceptions
2024-11-12 16:29:17,249:INFO:Preloading libraries
2024-11-12 16:29:17,249:INFO:Set up data.
2024-11-12 16:29:17,251:INFO:Set up index.
2024-11-12 16:29:17,431:INFO:Initializing predict_model()
2024-11-12 16:29:17,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:17,431:INFO:Checking exceptions
2024-11-12 16:29:17,431:INFO:Preloading libraries
2024-11-12 16:29:17,431:INFO:Set up data.
2024-11-12 16:29:17,433:INFO:Set up index.
2024-11-12 16:29:17,609:INFO:Initializing predict_model()
2024-11-12 16:29:17,609:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:17,609:INFO:Checking exceptions
2024-11-12 16:29:17,609:INFO:Preloading libraries
2024-11-12 16:29:17,610:INFO:Set up data.
2024-11-12 16:29:17,612:INFO:Set up index.
2024-11-12 16:29:17,773:INFO:Initializing predict_model()
2024-11-12 16:29:17,773:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:17,773:INFO:Checking exceptions
2024-11-12 16:29:17,773:INFO:Preloading libraries
2024-11-12 16:29:17,773:INFO:Set up data.
2024-11-12 16:29:17,777:INFO:Set up index.
2024-11-12 16:29:17,950:INFO:Initializing predict_model()
2024-11-12 16:29:17,951:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:17,951:INFO:Checking exceptions
2024-11-12 16:29:17,951:INFO:Preloading libraries
2024-11-12 16:29:17,951:INFO:Set up data.
2024-11-12 16:29:17,954:INFO:Set up index.
2024-11-12 16:29:18,141:INFO:Initializing predict_model()
2024-11-12 16:29:18,141:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BD710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:18,141:INFO:Checking exceptions
2024-11-12 16:29:18,141:INFO:Preloading libraries
2024-11-12 16:29:18,141:INFO:Set up data.
2024-11-12 16:29:18,144:INFO:Set up index.
2024-11-12 16:29:18,320:INFO:Initializing predict_model()
2024-11-12 16:29:18,320:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37090A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:18,320:INFO:Checking exceptions
2024-11-12 16:29:18,320:INFO:Preloading libraries
2024-11-12 16:29:18,320:INFO:Set up data.
2024-11-12 16:29:18,322:INFO:Set up index.
2024-11-12 16:29:18,497:INFO:Initializing predict_model()
2024-11-12 16:29:18,497:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:18,497:INFO:Checking exceptions
2024-11-12 16:29:18,497:INFO:Preloading libraries
2024-11-12 16:29:18,497:INFO:Set up data.
2024-11-12 16:29:18,500:INFO:Set up index.
2024-11-12 16:29:18,674:INFO:Initializing predict_model()
2024-11-12 16:29:18,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1E7D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:18,674:INFO:Checking exceptions
2024-11-12 16:29:18,674:INFO:Preloading libraries
2024-11-12 16:29:18,674:INFO:Set up data.
2024-11-12 16:29:18,677:INFO:Set up index.
2024-11-12 16:29:18,851:INFO:Initializing predict_model()
2024-11-12 16:29:18,851:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:18,851:INFO:Checking exceptions
2024-11-12 16:29:18,851:INFO:Preloading libraries
2024-11-12 16:29:18,851:INFO:Set up data.
2024-11-12 16:29:18,853:INFO:Set up index.
2024-11-12 16:29:19,037:INFO:Initializing predict_model()
2024-11-12 16:29:19,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:19,037:INFO:Checking exceptions
2024-11-12 16:29:19,037:INFO:Preloading libraries
2024-11-12 16:29:19,037:INFO:Set up data.
2024-11-12 16:29:19,040:INFO:Set up index.
2024-11-12 16:29:19,194:INFO:Initializing predict_model()
2024-11-12 16:29:19,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:19,194:INFO:Checking exceptions
2024-11-12 16:29:19,194:INFO:Preloading libraries
2024-11-12 16:29:19,195:INFO:Set up data.
2024-11-12 16:29:19,197:INFO:Set up index.
2024-11-12 16:29:19,372:INFO:Initializing predict_model()
2024-11-12 16:29:19,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1E7D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:19,372:INFO:Checking exceptions
2024-11-12 16:29:19,372:INFO:Preloading libraries
2024-11-12 16:29:19,373:INFO:Set up data.
2024-11-12 16:29:19,375:INFO:Set up index.
2024-11-12 16:29:19,547:INFO:Initializing predict_model()
2024-11-12 16:29:19,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:19,547:INFO:Checking exceptions
2024-11-12 16:29:19,547:INFO:Preloading libraries
2024-11-12 16:29:19,548:INFO:Set up data.
2024-11-12 16:29:19,551:INFO:Set up index.
2024-11-12 16:29:19,727:INFO:Initializing predict_model()
2024-11-12 16:29:19,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:19,727:INFO:Checking exceptions
2024-11-12 16:29:19,727:INFO:Preloading libraries
2024-11-12 16:29:19,727:INFO:Set up data.
2024-11-12 16:29:19,729:INFO:Set up index.
2024-11-12 16:29:19,927:INFO:Initializing predict_model()
2024-11-12 16:29:19,928:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:19,928:INFO:Checking exceptions
2024-11-12 16:29:19,928:INFO:Preloading libraries
2024-11-12 16:29:19,928:INFO:Set up data.
2024-11-12 16:29:19,932:INFO:Set up index.
2024-11-12 16:29:20,110:INFO:Initializing predict_model()
2024-11-12 16:29:20,110:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37051310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:20,110:INFO:Checking exceptions
2024-11-12 16:29:20,110:INFO:Preloading libraries
2024-11-12 16:29:20,110:INFO:Set up data.
2024-11-12 16:29:20,113:INFO:Set up index.
2024-11-12 16:29:20,285:INFO:Initializing predict_model()
2024-11-12 16:29:20,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:20,285:INFO:Checking exceptions
2024-11-12 16:29:20,285:INFO:Preloading libraries
2024-11-12 16:29:20,285:INFO:Set up data.
2024-11-12 16:29:20,287:INFO:Set up index.
2024-11-12 16:29:20,454:INFO:Initializing predict_model()
2024-11-12 16:29:20,454:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:20,454:INFO:Checking exceptions
2024-11-12 16:29:20,454:INFO:Preloading libraries
2024-11-12 16:29:20,454:INFO:Set up data.
2024-11-12 16:29:20,456:INFO:Set up index.
2024-11-12 16:29:20,611:INFO:Initializing predict_model()
2024-11-12 16:29:20,611:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:20,611:INFO:Checking exceptions
2024-11-12 16:29:20,611:INFO:Preloading libraries
2024-11-12 16:29:20,611:INFO:Set up data.
2024-11-12 16:29:20,613:INFO:Set up index.
2024-11-12 16:29:20,764:INFO:Initializing predict_model()
2024-11-12 16:29:20,764:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F3277D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:20,764:INFO:Checking exceptions
2024-11-12 16:29:20,764:INFO:Preloading libraries
2024-11-12 16:29:20,764:INFO:Set up data.
2024-11-12 16:29:20,768:INFO:Set up index.
2024-11-12 16:29:20,922:INFO:Initializing predict_model()
2024-11-12 16:29:20,922:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:20,922:INFO:Checking exceptions
2024-11-12 16:29:20,922:INFO:Preloading libraries
2024-11-12 16:29:20,922:INFO:Set up data.
2024-11-12 16:29:20,925:INFO:Set up index.
2024-11-12 16:29:21,083:INFO:Initializing predict_model()
2024-11-12 16:29:21,083:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:21,083:INFO:Checking exceptions
2024-11-12 16:29:21,083:INFO:Preloading libraries
2024-11-12 16:29:21,083:INFO:Set up data.
2024-11-12 16:29:21,086:INFO:Set up index.
2024-11-12 16:29:21,285:INFO:Initializing predict_model()
2024-11-12 16:29:21,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:21,285:INFO:Checking exceptions
2024-11-12 16:29:21,286:INFO:Preloading libraries
2024-11-12 16:29:21,286:INFO:Set up data.
2024-11-12 16:29:21,290:INFO:Set up index.
2024-11-12 16:29:21,484:INFO:Initializing predict_model()
2024-11-12 16:29:21,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:21,484:INFO:Checking exceptions
2024-11-12 16:29:21,484:INFO:Preloading libraries
2024-11-12 16:29:21,484:INFO:Set up data.
2024-11-12 16:29:21,489:INFO:Set up index.
2024-11-12 16:29:21,698:INFO:Initializing predict_model()
2024-11-12 16:29:21,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:21,698:INFO:Checking exceptions
2024-11-12 16:29:21,698:INFO:Preloading libraries
2024-11-12 16:29:21,698:INFO:Set up data.
2024-11-12 16:29:21,703:INFO:Set up index.
2024-11-12 16:29:21,912:INFO:Initializing predict_model()
2024-11-12 16:29:21,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:21,912:INFO:Checking exceptions
2024-11-12 16:29:21,912:INFO:Preloading libraries
2024-11-12 16:29:21,912:INFO:Set up data.
2024-11-12 16:29:21,916:INFO:Set up index.
2024-11-12 16:29:22,134:INFO:Initializing predict_model()
2024-11-12 16:29:22,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:22,136:INFO:Checking exceptions
2024-11-12 16:29:22,136:INFO:Preloading libraries
2024-11-12 16:29:22,136:INFO:Set up data.
2024-11-12 16:29:22,140:INFO:Set up index.
2024-11-12 16:29:22,331:INFO:Initializing predict_model()
2024-11-12 16:29:22,332:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:22,332:INFO:Checking exceptions
2024-11-12 16:29:22,332:INFO:Preloading libraries
2024-11-12 16:29:22,332:INFO:Set up data.
2024-11-12 16:29:22,337:INFO:Set up index.
2024-11-12 16:29:22,538:INFO:Initializing predict_model()
2024-11-12 16:29:22,538:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:22,538:INFO:Checking exceptions
2024-11-12 16:29:22,538:INFO:Preloading libraries
2024-11-12 16:29:22,538:INFO:Set up data.
2024-11-12 16:29:22,541:INFO:Set up index.
2024-11-12 16:29:22,760:INFO:Initializing predict_model()
2024-11-12 16:29:22,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA05FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:22,760:INFO:Checking exceptions
2024-11-12 16:29:22,760:INFO:Preloading libraries
2024-11-12 16:29:22,761:INFO:Set up data.
2024-11-12 16:29:22,765:INFO:Set up index.
2024-11-12 16:29:22,963:INFO:Initializing predict_model()
2024-11-12 16:29:22,963:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AB290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A32F4E340>)
2024-11-12 16:29:22,963:INFO:Checking exceptions
2024-11-12 16:29:22,963:INFO:Preloading libraries
2024-11-12 16:29:22,964:INFO:Set up data.
2024-11-12 16:29:22,969:INFO:Set up index.
2024-11-12 16:29:23,201:INFO:Initializing predict_model()
2024-11-12 16:29:23,201:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:23,201:INFO:Checking exceptions
2024-11-12 16:29:23,201:INFO:Preloading libraries
2024-11-12 16:29:23,202:INFO:Set up data.
2024-11-12 16:29:23,208:INFO:Set up index.
2024-11-12 16:29:23,421:INFO:Initializing predict_model()
2024-11-12 16:29:23,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32CAB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:23,422:INFO:Checking exceptions
2024-11-12 16:29:23,422:INFO:Preloading libraries
2024-11-12 16:29:23,422:INFO:Set up data.
2024-11-12 16:29:23,426:INFO:Set up index.
2024-11-12 16:29:23,625:INFO:Initializing predict_model()
2024-11-12 16:29:23,625:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:23,625:INFO:Checking exceptions
2024-11-12 16:29:23,625:INFO:Preloading libraries
2024-11-12 16:29:23,626:INFO:Set up data.
2024-11-12 16:29:23,630:INFO:Set up index.
2024-11-12 16:29:23,817:INFO:Initializing predict_model()
2024-11-12 16:29:23,817:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:23,817:INFO:Checking exceptions
2024-11-12 16:29:23,818:INFO:Preloading libraries
2024-11-12 16:29:23,818:INFO:Set up data.
2024-11-12 16:29:23,822:INFO:Set up index.
2024-11-12 16:29:24,019:INFO:Initializing predict_model()
2024-11-12 16:29:24,019:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:24,019:INFO:Checking exceptions
2024-11-12 16:29:24,019:INFO:Preloading libraries
2024-11-12 16:29:24,020:INFO:Set up data.
2024-11-12 16:29:24,022:INFO:Set up index.
2024-11-12 16:29:24,172:INFO:Initializing predict_model()
2024-11-12 16:29:24,172:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:24,172:INFO:Checking exceptions
2024-11-12 16:29:24,172:INFO:Preloading libraries
2024-11-12 16:29:24,172:INFO:Set up data.
2024-11-12 16:29:24,175:INFO:Set up index.
2024-11-12 16:29:24,331:INFO:Initializing predict_model()
2024-11-12 16:29:24,332:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:24,332:INFO:Checking exceptions
2024-11-12 16:29:24,332:INFO:Preloading libraries
2024-11-12 16:29:24,332:INFO:Set up data.
2024-11-12 16:29:24,334:INFO:Set up index.
2024-11-12 16:29:24,501:INFO:Initializing predict_model()
2024-11-12 16:29:24,501:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:24,501:INFO:Checking exceptions
2024-11-12 16:29:24,501:INFO:Preloading libraries
2024-11-12 16:29:24,501:INFO:Set up data.
2024-11-12 16:29:24,504:INFO:Set up index.
2024-11-12 16:29:24,663:INFO:Initializing predict_model()
2024-11-12 16:29:24,663:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:24,663:INFO:Checking exceptions
2024-11-12 16:29:24,663:INFO:Preloading libraries
2024-11-12 16:29:24,663:INFO:Set up data.
2024-11-12 16:29:24,666:INFO:Set up index.
2024-11-12 16:29:24,825:INFO:Initializing predict_model()
2024-11-12 16:29:24,825:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F321AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:24,825:INFO:Checking exceptions
2024-11-12 16:29:24,825:INFO:Preloading libraries
2024-11-12 16:29:24,825:INFO:Set up data.
2024-11-12 16:29:24,827:INFO:Set up index.
2024-11-12 16:29:24,982:INFO:Initializing predict_model()
2024-11-12 16:29:24,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6041E0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:24,982:INFO:Checking exceptions
2024-11-12 16:29:24,982:INFO:Preloading libraries
2024-11-12 16:29:24,982:INFO:Set up data.
2024-11-12 16:29:24,984:INFO:Set up index.
2024-11-12 16:29:25,156:INFO:Initializing predict_model()
2024-11-12 16:29:25,156:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:25,156:INFO:Checking exceptions
2024-11-12 16:29:25,156:INFO:Preloading libraries
2024-11-12 16:29:25,156:INFO:Set up data.
2024-11-12 16:29:25,159:INFO:Set up index.
2024-11-12 16:29:25,321:INFO:Initializing predict_model()
2024-11-12 16:29:25,321:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4BAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:25,321:INFO:Checking exceptions
2024-11-12 16:29:25,321:INFO:Preloading libraries
2024-11-12 16:29:25,321:INFO:Set up data.
2024-11-12 16:29:25,324:INFO:Set up index.
2024-11-12 16:29:25,474:INFO:Initializing predict_model()
2024-11-12 16:29:25,474:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E87C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:25,474:INFO:Checking exceptions
2024-11-12 16:29:25,474:INFO:Preloading libraries
2024-11-12 16:29:25,474:INFO:Set up data.
2024-11-12 16:29:25,478:INFO:Set up index.
2024-11-12 16:29:25,627:INFO:Initializing predict_model()
2024-11-12 16:29:25,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:25,627:INFO:Checking exceptions
2024-11-12 16:29:25,627:INFO:Preloading libraries
2024-11-12 16:29:25,627:INFO:Set up data.
2024-11-12 16:29:25,630:INFO:Set up index.
2024-11-12 16:29:25,795:INFO:Initializing predict_model()
2024-11-12 16:29:25,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:25,795:INFO:Checking exceptions
2024-11-12 16:29:25,795:INFO:Preloading libraries
2024-11-12 16:29:25,795:INFO:Set up data.
2024-11-12 16:29:25,798:INFO:Set up index.
2024-11-12 16:29:25,961:INFO:Initializing predict_model()
2024-11-12 16:29:25,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:25,961:INFO:Checking exceptions
2024-11-12 16:29:25,961:INFO:Preloading libraries
2024-11-12 16:29:25,961:INFO:Set up data.
2024-11-12 16:29:25,964:INFO:Set up index.
2024-11-12 16:29:26,204:INFO:Initializing predict_model()
2024-11-12 16:29:26,205:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:26,205:INFO:Checking exceptions
2024-11-12 16:29:26,205:INFO:Preloading libraries
2024-11-12 16:29:26,205:INFO:Set up data.
2024-11-12 16:29:26,207:INFO:Set up index.
2024-11-12 16:29:26,356:INFO:Initializing predict_model()
2024-11-12 16:29:26,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A331D5750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:26,356:INFO:Checking exceptions
2024-11-12 16:29:26,356:INFO:Preloading libraries
2024-11-12 16:29:26,356:INFO:Set up data.
2024-11-12 16:29:26,358:INFO:Set up index.
2024-11-12 16:29:26,526:INFO:Initializing predict_model()
2024-11-12 16:29:26,526:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:26,526:INFO:Checking exceptions
2024-11-12 16:29:26,526:INFO:Preloading libraries
2024-11-12 16:29:26,526:INFO:Set up data.
2024-11-12 16:29:26,529:INFO:Set up index.
2024-11-12 16:29:26,698:INFO:Initializing predict_model()
2024-11-12 16:29:26,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:26,698:INFO:Checking exceptions
2024-11-12 16:29:26,698:INFO:Preloading libraries
2024-11-12 16:29:26,698:INFO:Set up data.
2024-11-12 16:29:26,700:INFO:Set up index.
2024-11-12 16:29:26,874:INFO:Initializing predict_model()
2024-11-12 16:29:26,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:26,874:INFO:Checking exceptions
2024-11-12 16:29:26,874:INFO:Preloading libraries
2024-11-12 16:29:26,874:INFO:Set up data.
2024-11-12 16:29:26,876:INFO:Set up index.
2024-11-12 16:29:27,042:INFO:Initializing predict_model()
2024-11-12 16:29:27,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:27,042:INFO:Checking exceptions
2024-11-12 16:29:27,042:INFO:Preloading libraries
2024-11-12 16:29:27,042:INFO:Set up data.
2024-11-12 16:29:27,045:INFO:Set up index.
2024-11-12 16:29:27,214:INFO:Initializing predict_model()
2024-11-12 16:29:27,214:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:27,214:INFO:Checking exceptions
2024-11-12 16:29:27,214:INFO:Preloading libraries
2024-11-12 16:29:27,214:INFO:Set up data.
2024-11-12 16:29:27,216:INFO:Set up index.
2024-11-12 16:29:27,377:INFO:Initializing predict_model()
2024-11-12 16:29:27,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F112210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:27,377:INFO:Checking exceptions
2024-11-12 16:29:27,377:INFO:Preloading libraries
2024-11-12 16:29:27,377:INFO:Set up data.
2024-11-12 16:29:27,380:INFO:Set up index.
2024-11-12 16:29:27,546:INFO:Initializing predict_model()
2024-11-12 16:29:27,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:27,547:INFO:Checking exceptions
2024-11-12 16:29:27,547:INFO:Preloading libraries
2024-11-12 16:29:27,547:INFO:Set up data.
2024-11-12 16:29:27,550:INFO:Set up index.
2024-11-12 16:29:27,724:INFO:Initializing predict_model()
2024-11-12 16:29:27,724:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:27,724:INFO:Checking exceptions
2024-11-12 16:29:27,724:INFO:Preloading libraries
2024-11-12 16:29:27,724:INFO:Set up data.
2024-11-12 16:29:27,726:INFO:Set up index.
2024-11-12 16:29:27,895:INFO:Initializing predict_model()
2024-11-12 16:29:27,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:27,896:INFO:Checking exceptions
2024-11-12 16:29:27,896:INFO:Preloading libraries
2024-11-12 16:29:27,896:INFO:Set up data.
2024-11-12 16:29:27,898:INFO:Set up index.
2024-11-12 16:29:28,051:INFO:Initializing predict_model()
2024-11-12 16:29:28,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056C850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:28,051:INFO:Checking exceptions
2024-11-12 16:29:28,051:INFO:Preloading libraries
2024-11-12 16:29:28,051:INFO:Set up data.
2024-11-12 16:29:28,053:INFO:Set up index.
2024-11-12 16:29:28,224:INFO:Initializing predict_model()
2024-11-12 16:29:28,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:28,224:INFO:Checking exceptions
2024-11-12 16:29:28,224:INFO:Preloading libraries
2024-11-12 16:29:28,224:INFO:Set up data.
2024-11-12 16:29:28,227:INFO:Set up index.
2024-11-12 16:29:28,401:INFO:Initializing predict_model()
2024-11-12 16:29:28,401:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:28,401:INFO:Checking exceptions
2024-11-12 16:29:28,401:INFO:Preloading libraries
2024-11-12 16:29:28,401:INFO:Set up data.
2024-11-12 16:29:28,404:INFO:Set up index.
2024-11-12 16:29:28,558:INFO:Initializing predict_model()
2024-11-12 16:29:28,558:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:28,558:INFO:Checking exceptions
2024-11-12 16:29:28,558:INFO:Preloading libraries
2024-11-12 16:29:28,559:INFO:Set up data.
2024-11-12 16:29:28,561:INFO:Set up index.
2024-11-12 16:29:28,765:INFO:Initializing predict_model()
2024-11-12 16:29:28,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:28,765:INFO:Checking exceptions
2024-11-12 16:29:28,765:INFO:Preloading libraries
2024-11-12 16:29:28,765:INFO:Set up data.
2024-11-12 16:29:28,768:INFO:Set up index.
2024-11-12 16:29:28,919:INFO:Initializing predict_model()
2024-11-12 16:29:28,919:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A38EB6FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:28,919:INFO:Checking exceptions
2024-11-12 16:29:28,919:INFO:Preloading libraries
2024-11-12 16:29:28,919:INFO:Set up data.
2024-11-12 16:29:28,922:INFO:Set up index.
2024-11-12 16:29:29,083:INFO:Initializing predict_model()
2024-11-12 16:29:29,083:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5B06D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:29,083:INFO:Checking exceptions
2024-11-12 16:29:29,083:INFO:Preloading libraries
2024-11-12 16:29:29,085:INFO:Set up data.
2024-11-12 16:29:29,087:INFO:Set up index.
2024-11-12 16:29:29,248:INFO:Initializing predict_model()
2024-11-12 16:29:29,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:29,249:INFO:Checking exceptions
2024-11-12 16:29:29,249:INFO:Preloading libraries
2024-11-12 16:29:29,249:INFO:Set up data.
2024-11-12 16:29:29,251:INFO:Set up index.
2024-11-12 16:29:29,418:INFO:Initializing predict_model()
2024-11-12 16:29:29,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:29,418:INFO:Checking exceptions
2024-11-12 16:29:29,418:INFO:Preloading libraries
2024-11-12 16:29:29,419:INFO:Set up data.
2024-11-12 16:29:29,421:INFO:Set up index.
2024-11-12 16:29:29,580:INFO:Initializing predict_model()
2024-11-12 16:29:29,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:29,580:INFO:Checking exceptions
2024-11-12 16:29:29,580:INFO:Preloading libraries
2024-11-12 16:29:29,581:INFO:Set up data.
2024-11-12 16:29:29,583:INFO:Set up index.
2024-11-12 16:29:29,747:INFO:Initializing predict_model()
2024-11-12 16:29:29,747:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:29,747:INFO:Checking exceptions
2024-11-12 16:29:29,747:INFO:Preloading libraries
2024-11-12 16:29:29,748:INFO:Set up data.
2024-11-12 16:29:29,750:INFO:Set up index.
2024-11-12 16:29:29,924:INFO:Initializing predict_model()
2024-11-12 16:29:29,924:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E87C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:29,924:INFO:Checking exceptions
2024-11-12 16:29:29,924:INFO:Preloading libraries
2024-11-12 16:29:29,924:INFO:Set up data.
2024-11-12 16:29:29,927:INFO:Set up index.
2024-11-12 16:29:30,093:INFO:Initializing predict_model()
2024-11-12 16:29:30,093:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:30,093:INFO:Checking exceptions
2024-11-12 16:29:30,093:INFO:Preloading libraries
2024-11-12 16:29:30,093:INFO:Set up data.
2024-11-12 16:29:30,096:INFO:Set up index.
2024-11-12 16:29:30,251:INFO:Initializing predict_model()
2024-11-12 16:29:30,251:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4BF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:30,251:INFO:Checking exceptions
2024-11-12 16:29:30,251:INFO:Preloading libraries
2024-11-12 16:29:30,252:INFO:Set up data.
2024-11-12 16:29:30,255:INFO:Set up index.
2024-11-12 16:29:30,412:INFO:Initializing predict_model()
2024-11-12 16:29:30,412:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:30,412:INFO:Checking exceptions
2024-11-12 16:29:30,412:INFO:Preloading libraries
2024-11-12 16:29:30,412:INFO:Set up data.
2024-11-12 16:29:30,415:INFO:Set up index.
2024-11-12 16:29:30,577:INFO:Initializing predict_model()
2024-11-12 16:29:30,577:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:30,577:INFO:Checking exceptions
2024-11-12 16:29:30,577:INFO:Preloading libraries
2024-11-12 16:29:30,577:INFO:Set up data.
2024-11-12 16:29:30,581:INFO:Set up index.
2024-11-12 16:29:30,745:INFO:Initializing predict_model()
2024-11-12 16:29:30,745:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:30,746:INFO:Checking exceptions
2024-11-12 16:29:30,746:INFO:Preloading libraries
2024-11-12 16:29:30,746:INFO:Set up data.
2024-11-12 16:29:30,749:INFO:Set up index.
2024-11-12 16:29:30,907:INFO:Initializing predict_model()
2024-11-12 16:29:30,907:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:30,907:INFO:Checking exceptions
2024-11-12 16:29:30,907:INFO:Preloading libraries
2024-11-12 16:29:30,907:INFO:Set up data.
2024-11-12 16:29:30,910:INFO:Set up index.
2024-11-12 16:29:31,060:INFO:Initializing predict_model()
2024-11-12 16:29:31,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:31,061:INFO:Checking exceptions
2024-11-12 16:29:31,061:INFO:Preloading libraries
2024-11-12 16:29:31,061:INFO:Set up data.
2024-11-12 16:29:31,063:INFO:Set up index.
2024-11-12 16:29:31,220:INFO:Initializing predict_model()
2024-11-12 16:29:31,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:31,221:INFO:Checking exceptions
2024-11-12 16:29:31,221:INFO:Preloading libraries
2024-11-12 16:29:31,221:INFO:Set up data.
2024-11-12 16:29:31,223:INFO:Set up index.
2024-11-12 16:29:31,390:INFO:Initializing predict_model()
2024-11-12 16:29:31,391:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:31,391:INFO:Checking exceptions
2024-11-12 16:29:31,391:INFO:Preloading libraries
2024-11-12 16:29:31,391:INFO:Set up data.
2024-11-12 16:29:31,393:INFO:Set up index.
2024-11-12 16:29:31,539:INFO:Initializing predict_model()
2024-11-12 16:29:31,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2C8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:31,539:INFO:Checking exceptions
2024-11-12 16:29:31,539:INFO:Preloading libraries
2024-11-12 16:29:31,539:INFO:Set up data.
2024-11-12 16:29:31,541:INFO:Set up index.
2024-11-12 16:29:31,689:INFO:Initializing predict_model()
2024-11-12 16:29:31,689:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32CAB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:31,689:INFO:Checking exceptions
2024-11-12 16:29:31,689:INFO:Preloading libraries
2024-11-12 16:29:31,689:INFO:Set up data.
2024-11-12 16:29:31,692:INFO:Set up index.
2024-11-12 16:29:31,847:INFO:Initializing predict_model()
2024-11-12 16:29:31,847:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:31,847:INFO:Checking exceptions
2024-11-12 16:29:31,847:INFO:Preloading libraries
2024-11-12 16:29:31,847:INFO:Set up data.
2024-11-12 16:29:31,850:INFO:Set up index.
2024-11-12 16:29:32,012:INFO:Initializing predict_model()
2024-11-12 16:29:32,012:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:32,012:INFO:Checking exceptions
2024-11-12 16:29:32,012:INFO:Preloading libraries
2024-11-12 16:29:32,012:INFO:Set up data.
2024-11-12 16:29:32,015:INFO:Set up index.
2024-11-12 16:29:32,180:INFO:Initializing predict_model()
2024-11-12 16:29:32,181:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E87C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:32,181:INFO:Checking exceptions
2024-11-12 16:29:32,181:INFO:Preloading libraries
2024-11-12 16:29:32,181:INFO:Set up data.
2024-11-12 16:29:32,184:INFO:Set up index.
2024-11-12 16:29:32,340:INFO:Initializing predict_model()
2024-11-12 16:29:32,340:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:32,340:INFO:Checking exceptions
2024-11-12 16:29:32,340:INFO:Preloading libraries
2024-11-12 16:29:32,340:INFO:Set up data.
2024-11-12 16:29:32,342:INFO:Set up index.
2024-11-12 16:29:32,504:INFO:Initializing predict_model()
2024-11-12 16:29:32,504:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:32,504:INFO:Checking exceptions
2024-11-12 16:29:32,504:INFO:Preloading libraries
2024-11-12 16:29:32,504:INFO:Set up data.
2024-11-12 16:29:32,507:INFO:Set up index.
2024-11-12 16:29:32,681:INFO:Initializing predict_model()
2024-11-12 16:29:32,681:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:32,681:INFO:Checking exceptions
2024-11-12 16:29:32,681:INFO:Preloading libraries
2024-11-12 16:29:32,681:INFO:Set up data.
2024-11-12 16:29:32,684:INFO:Set up index.
2024-11-12 16:29:32,884:INFO:Initializing predict_model()
2024-11-12 16:29:32,884:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:32,884:INFO:Checking exceptions
2024-11-12 16:29:32,884:INFO:Preloading libraries
2024-11-12 16:29:32,884:INFO:Set up data.
2024-11-12 16:29:32,887:INFO:Set up index.
2024-11-12 16:29:33,037:INFO:Initializing predict_model()
2024-11-12 16:29:33,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:33,037:INFO:Checking exceptions
2024-11-12 16:29:33,037:INFO:Preloading libraries
2024-11-12 16:29:33,038:INFO:Set up data.
2024-11-12 16:29:33,040:INFO:Set up index.
2024-11-12 16:29:33,192:INFO:Initializing predict_model()
2024-11-12 16:29:33,192:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F325850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:33,192:INFO:Checking exceptions
2024-11-12 16:29:33,192:INFO:Preloading libraries
2024-11-12 16:29:33,192:INFO:Set up data.
2024-11-12 16:29:33,195:INFO:Set up index.
2024-11-12 16:29:33,353:INFO:Initializing predict_model()
2024-11-12 16:29:33,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:33,353:INFO:Checking exceptions
2024-11-12 16:29:33,353:INFO:Preloading libraries
2024-11-12 16:29:33,354:INFO:Set up data.
2024-11-12 16:29:33,356:INFO:Set up index.
2024-11-12 16:29:33,523:INFO:Initializing predict_model()
2024-11-12 16:29:33,523:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:33,523:INFO:Checking exceptions
2024-11-12 16:29:33,523:INFO:Preloading libraries
2024-11-12 16:29:33,523:INFO:Set up data.
2024-11-12 16:29:33,526:INFO:Set up index.
2024-11-12 16:29:33,682:INFO:Initializing predict_model()
2024-11-12 16:29:33,682:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:33,682:INFO:Checking exceptions
2024-11-12 16:29:33,682:INFO:Preloading libraries
2024-11-12 16:29:33,683:INFO:Set up data.
2024-11-12 16:29:33,685:INFO:Set up index.
2024-11-12 16:29:33,833:INFO:Initializing predict_model()
2024-11-12 16:29:33,833:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A32910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:33,833:INFO:Checking exceptions
2024-11-12 16:29:33,833:INFO:Preloading libraries
2024-11-12 16:29:33,834:INFO:Set up data.
2024-11-12 16:29:33,836:INFO:Set up index.
2024-11-12 16:29:33,990:INFO:Initializing predict_model()
2024-11-12 16:29:33,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:33,990:INFO:Checking exceptions
2024-11-12 16:29:33,990:INFO:Preloading libraries
2024-11-12 16:29:33,990:INFO:Set up data.
2024-11-12 16:29:33,993:INFO:Set up index.
2024-11-12 16:29:34,155:INFO:Initializing predict_model()
2024-11-12 16:29:34,155:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:34,155:INFO:Checking exceptions
2024-11-12 16:29:34,155:INFO:Preloading libraries
2024-11-12 16:29:34,155:INFO:Set up data.
2024-11-12 16:29:34,158:INFO:Set up index.
2024-11-12 16:29:34,302:INFO:Initializing predict_model()
2024-11-12 16:29:34,302:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:34,302:INFO:Checking exceptions
2024-11-12 16:29:34,302:INFO:Preloading libraries
2024-11-12 16:29:34,302:INFO:Set up data.
2024-11-12 16:29:34,305:INFO:Set up index.
2024-11-12 16:29:34,451:INFO:Initializing predict_model()
2024-11-12 16:29:34,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:34,451:INFO:Checking exceptions
2024-11-12 16:29:34,451:INFO:Preloading libraries
2024-11-12 16:29:34,452:INFO:Set up data.
2024-11-12 16:29:34,454:INFO:Set up index.
2024-11-12 16:29:34,612:INFO:Initializing predict_model()
2024-11-12 16:29:34,612:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:34,612:INFO:Checking exceptions
2024-11-12 16:29:34,613:INFO:Preloading libraries
2024-11-12 16:29:34,613:INFO:Set up data.
2024-11-12 16:29:34,615:INFO:Set up index.
2024-11-12 16:29:34,779:INFO:Initializing predict_model()
2024-11-12 16:29:34,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:34,779:INFO:Checking exceptions
2024-11-12 16:29:34,779:INFO:Preloading libraries
2024-11-12 16:29:34,779:INFO:Set up data.
2024-11-12 16:29:34,782:INFO:Set up index.
2024-11-12 16:29:34,951:INFO:Initializing predict_model()
2024-11-12 16:29:34,951:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:34,951:INFO:Checking exceptions
2024-11-12 16:29:34,951:INFO:Preloading libraries
2024-11-12 16:29:34,951:INFO:Set up data.
2024-11-12 16:29:34,953:INFO:Set up index.
2024-11-12 16:29:35,107:INFO:Initializing predict_model()
2024-11-12 16:29:35,107:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:35,107:INFO:Checking exceptions
2024-11-12 16:29:35,107:INFO:Preloading libraries
2024-11-12 16:29:35,107:INFO:Set up data.
2024-11-12 16:29:35,110:INFO:Set up index.
2024-11-12 16:29:35,258:INFO:Initializing predict_model()
2024-11-12 16:29:35,258:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:35,258:INFO:Checking exceptions
2024-11-12 16:29:35,258:INFO:Preloading libraries
2024-11-12 16:29:35,258:INFO:Set up data.
2024-11-12 16:29:35,259:INFO:Set up index.
2024-11-12 16:29:35,413:INFO:Initializing predict_model()
2024-11-12 16:29:35,413:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:35,413:INFO:Checking exceptions
2024-11-12 16:29:35,413:INFO:Preloading libraries
2024-11-12 16:29:35,414:INFO:Set up data.
2024-11-12 16:29:35,417:INFO:Set up index.
2024-11-12 16:29:35,577:INFO:Initializing predict_model()
2024-11-12 16:29:35,577:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37051310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:35,577:INFO:Checking exceptions
2024-11-12 16:29:35,577:INFO:Preloading libraries
2024-11-12 16:29:35,578:INFO:Set up data.
2024-11-12 16:29:35,580:INFO:Set up index.
2024-11-12 16:29:35,745:INFO:Initializing predict_model()
2024-11-12 16:29:35,745:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:35,745:INFO:Checking exceptions
2024-11-12 16:29:35,745:INFO:Preloading libraries
2024-11-12 16:29:35,745:INFO:Set up data.
2024-11-12 16:29:35,748:INFO:Set up index.
2024-11-12 16:29:35,896:INFO:Initializing predict_model()
2024-11-12 16:29:35,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:35,898:INFO:Checking exceptions
2024-11-12 16:29:35,898:INFO:Preloading libraries
2024-11-12 16:29:35,898:INFO:Set up data.
2024-11-12 16:29:35,900:INFO:Set up index.
2024-11-12 16:29:36,057:INFO:Initializing predict_model()
2024-11-12 16:29:36,058:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:36,058:INFO:Checking exceptions
2024-11-12 16:29:36,058:INFO:Preloading libraries
2024-11-12 16:29:36,058:INFO:Set up data.
2024-11-12 16:29:36,061:INFO:Set up index.
2024-11-12 16:29:36,233:INFO:Initializing predict_model()
2024-11-12 16:29:36,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F65050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:36,233:INFO:Checking exceptions
2024-11-12 16:29:36,233:INFO:Preloading libraries
2024-11-12 16:29:36,233:INFO:Set up data.
2024-11-12 16:29:36,236:INFO:Set up index.
2024-11-12 16:29:36,404:INFO:Initializing predict_model()
2024-11-12 16:29:36,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AB290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:36,405:INFO:Checking exceptions
2024-11-12 16:29:36,405:INFO:Preloading libraries
2024-11-12 16:29:36,405:INFO:Set up data.
2024-11-12 16:29:36,407:INFO:Set up index.
2024-11-12 16:29:36,567:INFO:Initializing predict_model()
2024-11-12 16:29:36,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:36,567:INFO:Checking exceptions
2024-11-12 16:29:36,567:INFO:Preloading libraries
2024-11-12 16:29:36,568:INFO:Set up data.
2024-11-12 16:29:36,571:INFO:Set up index.
2024-11-12 16:29:36,742:INFO:Initializing predict_model()
2024-11-12 16:29:36,743:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:36,743:INFO:Checking exceptions
2024-11-12 16:29:36,743:INFO:Preloading libraries
2024-11-12 16:29:36,743:INFO:Set up data.
2024-11-12 16:29:36,745:INFO:Set up index.
2024-11-12 16:29:36,932:INFO:Initializing predict_model()
2024-11-12 16:29:36,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2D6590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:36,932:INFO:Checking exceptions
2024-11-12 16:29:36,932:INFO:Preloading libraries
2024-11-12 16:29:36,932:INFO:Set up data.
2024-11-12 16:29:36,936:INFO:Set up index.
2024-11-12 16:29:37,099:INFO:Initializing predict_model()
2024-11-12 16:29:37,099:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:37,099:INFO:Checking exceptions
2024-11-12 16:29:37,099:INFO:Preloading libraries
2024-11-12 16:29:37,100:INFO:Set up data.
2024-11-12 16:29:37,103:INFO:Set up index.
2024-11-12 16:29:37,267:INFO:Initializing predict_model()
2024-11-12 16:29:37,267:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E1B750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:37,267:INFO:Checking exceptions
2024-11-12 16:29:37,268:INFO:Preloading libraries
2024-11-12 16:29:37,268:INFO:Set up data.
2024-11-12 16:29:37,270:INFO:Set up index.
2024-11-12 16:29:37,436:INFO:Initializing predict_model()
2024-11-12 16:29:37,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:37,436:INFO:Checking exceptions
2024-11-12 16:29:37,436:INFO:Preloading libraries
2024-11-12 16:29:37,436:INFO:Set up data.
2024-11-12 16:29:37,439:INFO:Set up index.
2024-11-12 16:29:37,597:INFO:Initializing predict_model()
2024-11-12 16:29:37,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E1AB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:37,597:INFO:Checking exceptions
2024-11-12 16:29:37,597:INFO:Preloading libraries
2024-11-12 16:29:37,597:INFO:Set up data.
2024-11-12 16:29:37,599:INFO:Set up index.
2024-11-12 16:29:37,761:INFO:Initializing predict_model()
2024-11-12 16:29:37,761:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F65050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:37,761:INFO:Checking exceptions
2024-11-12 16:29:37,761:INFO:Preloading libraries
2024-11-12 16:29:37,761:INFO:Set up data.
2024-11-12 16:29:37,764:INFO:Set up index.
2024-11-12 16:29:37,926:INFO:Initializing predict_model()
2024-11-12 16:29:37,926:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E73710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:37,926:INFO:Checking exceptions
2024-11-12 16:29:37,926:INFO:Preloading libraries
2024-11-12 16:29:37,926:INFO:Set up data.
2024-11-12 16:29:37,929:INFO:Set up index.
2024-11-12 16:29:38,114:INFO:Initializing predict_model()
2024-11-12 16:29:38,114:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5B06D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:38,114:INFO:Checking exceptions
2024-11-12 16:29:38,114:INFO:Preloading libraries
2024-11-12 16:29:38,114:INFO:Set up data.
2024-11-12 16:29:38,117:INFO:Set up index.
2024-11-12 16:29:38,266:INFO:Initializing predict_model()
2024-11-12 16:29:38,267:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E73090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:38,267:INFO:Checking exceptions
2024-11-12 16:29:38,267:INFO:Preloading libraries
2024-11-12 16:29:38,267:INFO:Set up data.
2024-11-12 16:29:38,270:INFO:Set up index.
2024-11-12 16:29:38,456:INFO:Initializing predict_model()
2024-11-12 16:29:38,457:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36923610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:38,457:INFO:Checking exceptions
2024-11-12 16:29:38,457:INFO:Preloading libraries
2024-11-12 16:29:38,457:INFO:Set up data.
2024-11-12 16:29:38,459:INFO:Set up index.
2024-11-12 16:29:38,629:INFO:Initializing predict_model()
2024-11-12 16:29:38,629:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:38,629:INFO:Checking exceptions
2024-11-12 16:29:38,629:INFO:Preloading libraries
2024-11-12 16:29:38,630:INFO:Set up data.
2024-11-12 16:29:38,633:INFO:Set up index.
2024-11-12 16:29:38,794:INFO:Initializing predict_model()
2024-11-12 16:29:38,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:38,794:INFO:Checking exceptions
2024-11-12 16:29:38,794:INFO:Preloading libraries
2024-11-12 16:29:38,794:INFO:Set up data.
2024-11-12 16:29:38,798:INFO:Set up index.
2024-11-12 16:29:38,947:INFO:Initializing predict_model()
2024-11-12 16:29:38,947:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37079550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:38,947:INFO:Checking exceptions
2024-11-12 16:29:38,947:INFO:Preloading libraries
2024-11-12 16:29:38,947:INFO:Set up data.
2024-11-12 16:29:38,950:INFO:Set up index.
2024-11-12 16:29:39,101:INFO:Initializing predict_model()
2024-11-12 16:29:39,101:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:39,102:INFO:Checking exceptions
2024-11-12 16:29:39,102:INFO:Preloading libraries
2024-11-12 16:29:39,102:INFO:Set up data.
2024-11-12 16:29:39,104:INFO:Set up index.
2024-11-12 16:29:39,263:INFO:Initializing predict_model()
2024-11-12 16:29:39,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:39,263:INFO:Checking exceptions
2024-11-12 16:29:39,263:INFO:Preloading libraries
2024-11-12 16:29:39,263:INFO:Set up data.
2024-11-12 16:29:39,266:INFO:Set up index.
2024-11-12 16:29:39,442:INFO:Initializing predict_model()
2024-11-12 16:29:39,442:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370D4C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:39,442:INFO:Checking exceptions
2024-11-12 16:29:39,442:INFO:Preloading libraries
2024-11-12 16:29:39,443:INFO:Set up data.
2024-11-12 16:29:39,445:INFO:Set up index.
2024-11-12 16:29:39,610:INFO:Initializing predict_model()
2024-11-12 16:29:39,610:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:39,610:INFO:Checking exceptions
2024-11-12 16:29:39,610:INFO:Preloading libraries
2024-11-12 16:29:39,610:INFO:Set up data.
2024-11-12 16:29:39,614:INFO:Set up index.
2024-11-12 16:29:39,770:INFO:Initializing predict_model()
2024-11-12 16:29:39,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5B06D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:39,770:INFO:Checking exceptions
2024-11-12 16:29:39,770:INFO:Preloading libraries
2024-11-12 16:29:39,770:INFO:Set up data.
2024-11-12 16:29:39,773:INFO:Set up index.
2024-11-12 16:29:39,943:INFO:Initializing predict_model()
2024-11-12 16:29:39,943:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:39,943:INFO:Checking exceptions
2024-11-12 16:29:39,943:INFO:Preloading libraries
2024-11-12 16:29:39,943:INFO:Set up data.
2024-11-12 16:29:39,945:INFO:Set up index.
2024-11-12 16:29:40,115:INFO:Initializing predict_model()
2024-11-12 16:29:40,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37078CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:40,115:INFO:Checking exceptions
2024-11-12 16:29:40,115:INFO:Preloading libraries
2024-11-12 16:29:40,115:INFO:Set up data.
2024-11-12 16:29:40,119:INFO:Set up index.
2024-11-12 16:29:40,278:INFO:Initializing predict_model()
2024-11-12 16:29:40,279:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:40,279:INFO:Checking exceptions
2024-11-12 16:29:40,279:INFO:Preloading libraries
2024-11-12 16:29:40,279:INFO:Set up data.
2024-11-12 16:29:40,281:INFO:Set up index.
2024-11-12 16:29:40,427:INFO:Initializing predict_model()
2024-11-12 16:29:40,427:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:40,428:INFO:Checking exceptions
2024-11-12 16:29:40,428:INFO:Preloading libraries
2024-11-12 16:29:40,428:INFO:Set up data.
2024-11-12 16:29:40,430:INFO:Set up index.
2024-11-12 16:29:40,580:INFO:Initializing predict_model()
2024-11-12 16:29:40,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:40,580:INFO:Checking exceptions
2024-11-12 16:29:40,580:INFO:Preloading libraries
2024-11-12 16:29:40,580:INFO:Set up data.
2024-11-12 16:29:40,583:INFO:Set up index.
2024-11-12 16:29:40,740:INFO:Initializing predict_model()
2024-11-12 16:29:40,740:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:40,740:INFO:Checking exceptions
2024-11-12 16:29:40,740:INFO:Preloading libraries
2024-11-12 16:29:40,740:INFO:Set up data.
2024-11-12 16:29:40,743:INFO:Set up index.
2024-11-12 16:29:40,906:INFO:Initializing predict_model()
2024-11-12 16:29:40,906:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:40,906:INFO:Checking exceptions
2024-11-12 16:29:40,906:INFO:Preloading libraries
2024-11-12 16:29:40,906:INFO:Set up data.
2024-11-12 16:29:40,909:INFO:Set up index.
2024-11-12 16:29:41,061:INFO:Initializing predict_model()
2024-11-12 16:29:41,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37050F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:41,061:INFO:Checking exceptions
2024-11-12 16:29:41,061:INFO:Preloading libraries
2024-11-12 16:29:41,061:INFO:Set up data.
2024-11-12 16:29:41,064:INFO:Set up index.
2024-11-12 16:29:41,222:INFO:Initializing predict_model()
2024-11-12 16:29:41,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F110190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:41,222:INFO:Checking exceptions
2024-11-12 16:29:41,222:INFO:Preloading libraries
2024-11-12 16:29:41,222:INFO:Set up data.
2024-11-12 16:29:41,225:INFO:Set up index.
2024-11-12 16:29:41,381:INFO:Initializing predict_model()
2024-11-12 16:29:41,381:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370B6E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:41,381:INFO:Checking exceptions
2024-11-12 16:29:41,381:INFO:Preloading libraries
2024-11-12 16:29:41,381:INFO:Set up data.
2024-11-12 16:29:41,385:INFO:Set up index.
2024-11-12 16:29:41,545:INFO:Initializing predict_model()
2024-11-12 16:29:41,545:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A365C7910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:41,545:INFO:Checking exceptions
2024-11-12 16:29:41,545:INFO:Preloading libraries
2024-11-12 16:29:41,545:INFO:Set up data.
2024-11-12 16:29:41,548:INFO:Set up index.
2024-11-12 16:29:41,698:INFO:Initializing predict_model()
2024-11-12 16:29:41,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:41,698:INFO:Checking exceptions
2024-11-12 16:29:41,698:INFO:Preloading libraries
2024-11-12 16:29:41,698:INFO:Set up data.
2024-11-12 16:29:41,701:INFO:Set up index.
2024-11-12 16:29:41,848:INFO:Initializing predict_model()
2024-11-12 16:29:41,848:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:41,848:INFO:Checking exceptions
2024-11-12 16:29:41,848:INFO:Preloading libraries
2024-11-12 16:29:41,849:INFO:Set up data.
2024-11-12 16:29:41,851:INFO:Set up index.
2024-11-12 16:29:42,001:INFO:Initializing predict_model()
2024-11-12 16:29:42,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:42,001:INFO:Checking exceptions
2024-11-12 16:29:42,001:INFO:Preloading libraries
2024-11-12 16:29:42,002:INFO:Set up data.
2024-11-12 16:29:42,004:INFO:Set up index.
2024-11-12 16:29:42,165:INFO:Initializing predict_model()
2024-11-12 16:29:42,165:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:42,165:INFO:Checking exceptions
2024-11-12 16:29:42,165:INFO:Preloading libraries
2024-11-12 16:29:42,165:INFO:Set up data.
2024-11-12 16:29:42,168:INFO:Set up index.
2024-11-12 16:29:42,334:INFO:Initializing predict_model()
2024-11-12 16:29:42,334:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:42,334:INFO:Checking exceptions
2024-11-12 16:29:42,334:INFO:Preloading libraries
2024-11-12 16:29:42,334:INFO:Set up data.
2024-11-12 16:29:42,337:INFO:Set up index.
2024-11-12 16:29:42,491:INFO:Initializing predict_model()
2024-11-12 16:29:42,491:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A365C7910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:42,491:INFO:Checking exceptions
2024-11-12 16:29:42,491:INFO:Preloading libraries
2024-11-12 16:29:42,491:INFO:Set up data.
2024-11-12 16:29:42,493:INFO:Set up index.
2024-11-12 16:29:42,638:INFO:Initializing predict_model()
2024-11-12 16:29:42,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:42,638:INFO:Checking exceptions
2024-11-12 16:29:42,638:INFO:Preloading libraries
2024-11-12 16:29:42,638:INFO:Set up data.
2024-11-12 16:29:42,640:INFO:Set up index.
2024-11-12 16:29:42,791:INFO:Initializing predict_model()
2024-11-12 16:29:42,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E6A50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:42,792:INFO:Checking exceptions
2024-11-12 16:29:42,792:INFO:Preloading libraries
2024-11-12 16:29:42,792:INFO:Set up data.
2024-11-12 16:29:42,794:INFO:Set up index.
2024-11-12 16:29:42,960:INFO:Initializing predict_model()
2024-11-12 16:29:42,960:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:42,960:INFO:Checking exceptions
2024-11-12 16:29:42,960:INFO:Preloading libraries
2024-11-12 16:29:42,960:INFO:Set up data.
2024-11-12 16:29:42,962:INFO:Set up index.
2024-11-12 16:29:43,124:INFO:Initializing predict_model()
2024-11-12 16:29:43,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:43,124:INFO:Checking exceptions
2024-11-12 16:29:43,124:INFO:Preloading libraries
2024-11-12 16:29:43,124:INFO:Set up data.
2024-11-12 16:29:43,127:INFO:Set up index.
2024-11-12 16:29:43,283:INFO:Initializing predict_model()
2024-11-12 16:29:43,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:43,283:INFO:Checking exceptions
2024-11-12 16:29:43,283:INFO:Preloading libraries
2024-11-12 16:29:43,283:INFO:Set up data.
2024-11-12 16:29:43,286:INFO:Set up index.
2024-11-12 16:29:43,441:INFO:Initializing predict_model()
2024-11-12 16:29:43,441:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:43,441:INFO:Checking exceptions
2024-11-12 16:29:43,441:INFO:Preloading libraries
2024-11-12 16:29:43,441:INFO:Set up data.
2024-11-12 16:29:43,444:INFO:Set up index.
2024-11-12 16:29:43,609:INFO:Initializing predict_model()
2024-11-12 16:29:43,609:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:43,609:INFO:Checking exceptions
2024-11-12 16:29:43,609:INFO:Preloading libraries
2024-11-12 16:29:43,609:INFO:Set up data.
2024-11-12 16:29:43,612:INFO:Set up index.
2024-11-12 16:29:43,776:INFO:Initializing predict_model()
2024-11-12 16:29:43,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:43,776:INFO:Checking exceptions
2024-11-12 16:29:43,777:INFO:Preloading libraries
2024-11-12 16:29:43,777:INFO:Set up data.
2024-11-12 16:29:43,780:INFO:Set up index.
2024-11-12 16:29:43,943:INFO:Initializing predict_model()
2024-11-12 16:29:43,943:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AC690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:43,943:INFO:Checking exceptions
2024-11-12 16:29:43,943:INFO:Preloading libraries
2024-11-12 16:29:43,943:INFO:Set up data.
2024-11-12 16:29:43,946:INFO:Set up index.
2024-11-12 16:29:44,152:INFO:Initializing predict_model()
2024-11-12 16:29:44,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:44,152:INFO:Checking exceptions
2024-11-12 16:29:44,153:INFO:Preloading libraries
2024-11-12 16:29:44,153:INFO:Set up data.
2024-11-12 16:29:44,155:INFO:Set up index.
2024-11-12 16:29:44,301:INFO:Initializing predict_model()
2024-11-12 16:29:44,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:44,301:INFO:Checking exceptions
2024-11-12 16:29:44,301:INFO:Preloading libraries
2024-11-12 16:29:44,301:INFO:Set up data.
2024-11-12 16:29:44,304:INFO:Set up index.
2024-11-12 16:29:44,450:INFO:Initializing predict_model()
2024-11-12 16:29:44,450:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36923610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:44,450:INFO:Checking exceptions
2024-11-12 16:29:44,450:INFO:Preloading libraries
2024-11-12 16:29:44,450:INFO:Set up data.
2024-11-12 16:29:44,453:INFO:Set up index.
2024-11-12 16:29:44,617:INFO:Initializing predict_model()
2024-11-12 16:29:44,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:44,617:INFO:Checking exceptions
2024-11-12 16:29:44,617:INFO:Preloading libraries
2024-11-12 16:29:44,617:INFO:Set up data.
2024-11-12 16:29:44,620:INFO:Set up index.
2024-11-12 16:29:44,787:INFO:Initializing predict_model()
2024-11-12 16:29:44,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37090E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:44,787:INFO:Checking exceptions
2024-11-12 16:29:44,787:INFO:Preloading libraries
2024-11-12 16:29:44,788:INFO:Set up data.
2024-11-12 16:29:44,790:INFO:Set up index.
2024-11-12 16:29:44,953:INFO:Initializing predict_model()
2024-11-12 16:29:44,953:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F65050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:44,953:INFO:Checking exceptions
2024-11-12 16:29:44,953:INFO:Preloading libraries
2024-11-12 16:29:44,954:INFO:Set up data.
2024-11-12 16:29:44,956:INFO:Set up index.
2024-11-12 16:29:45,131:INFO:Initializing predict_model()
2024-11-12 16:29:45,131:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370913D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:45,131:INFO:Checking exceptions
2024-11-12 16:29:45,131:INFO:Preloading libraries
2024-11-12 16:29:45,132:INFO:Set up data.
2024-11-12 16:29:45,134:INFO:Set up index.
2024-11-12 16:29:45,285:INFO:Initializing predict_model()
2024-11-12 16:29:45,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:45,285:INFO:Checking exceptions
2024-11-12 16:29:45,285:INFO:Preloading libraries
2024-11-12 16:29:45,285:INFO:Set up data.
2024-11-12 16:29:45,288:INFO:Set up index.
2024-11-12 16:29:45,447:INFO:Initializing predict_model()
2024-11-12 16:29:45,448:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F32D2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:45,448:INFO:Checking exceptions
2024-11-12 16:29:45,448:INFO:Preloading libraries
2024-11-12 16:29:45,448:INFO:Set up data.
2024-11-12 16:29:45,451:INFO:Set up index.
2024-11-12 16:29:45,618:INFO:Initializing predict_model()
2024-11-12 16:29:45,618:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A365C7910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:45,619:INFO:Checking exceptions
2024-11-12 16:29:45,619:INFO:Preloading libraries
2024-11-12 16:29:45,619:INFO:Set up data.
2024-11-12 16:29:45,622:INFO:Set up index.
2024-11-12 16:29:45,796:INFO:Initializing predict_model()
2024-11-12 16:29:45,796:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A386EB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:45,796:INFO:Checking exceptions
2024-11-12 16:29:45,796:INFO:Preloading libraries
2024-11-12 16:29:45,796:INFO:Set up data.
2024-11-12 16:29:45,800:INFO:Set up index.
2024-11-12 16:29:45,959:INFO:Initializing predict_model()
2024-11-12 16:29:45,959:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A365C7910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:45,959:INFO:Checking exceptions
2024-11-12 16:29:45,959:INFO:Preloading libraries
2024-11-12 16:29:45,959:INFO:Set up data.
2024-11-12 16:29:45,962:INFO:Set up index.
2024-11-12 16:29:46,116:INFO:Initializing predict_model()
2024-11-12 16:29:46,116:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:46,116:INFO:Checking exceptions
2024-11-12 16:29:46,116:INFO:Preloading libraries
2024-11-12 16:29:46,117:INFO:Set up data.
2024-11-12 16:29:46,119:INFO:Set up index.
2024-11-12 16:29:46,281:INFO:Initializing predict_model()
2024-11-12 16:29:46,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A9D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:46,281:INFO:Checking exceptions
2024-11-12 16:29:46,281:INFO:Preloading libraries
2024-11-12 16:29:46,281:INFO:Set up data.
2024-11-12 16:29:46,284:INFO:Set up index.
2024-11-12 16:29:46,453:INFO:Initializing predict_model()
2024-11-12 16:29:46,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:46,454:INFO:Checking exceptions
2024-11-12 16:29:46,454:INFO:Preloading libraries
2024-11-12 16:29:46,454:INFO:Set up data.
2024-11-12 16:29:46,457:INFO:Set up index.
2024-11-12 16:29:46,614:INFO:Initializing predict_model()
2024-11-12 16:29:46,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F325ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:46,614:INFO:Checking exceptions
2024-11-12 16:29:46,614:INFO:Preloading libraries
2024-11-12 16:29:46,614:INFO:Set up data.
2024-11-12 16:29:46,617:INFO:Set up index.
2024-11-12 16:29:46,772:INFO:Initializing predict_model()
2024-11-12 16:29:46,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:46,772:INFO:Checking exceptions
2024-11-12 16:29:46,772:INFO:Preloading libraries
2024-11-12 16:29:46,772:INFO:Set up data.
2024-11-12 16:29:46,775:INFO:Set up index.
2024-11-12 16:29:46,945:INFO:Initializing predict_model()
2024-11-12 16:29:46,945:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:46,945:INFO:Checking exceptions
2024-11-12 16:29:46,945:INFO:Preloading libraries
2024-11-12 16:29:46,945:INFO:Set up data.
2024-11-12 16:29:46,948:INFO:Set up index.
2024-11-12 16:29:47,114:INFO:Initializing predict_model()
2024-11-12 16:29:47,114:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:47,114:INFO:Checking exceptions
2024-11-12 16:29:47,114:INFO:Preloading libraries
2024-11-12 16:29:47,114:INFO:Set up data.
2024-11-12 16:29:47,117:INFO:Set up index.
2024-11-12 16:29:47,268:INFO:Initializing predict_model()
2024-11-12 16:29:47,268:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056C850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:47,268:INFO:Checking exceptions
2024-11-12 16:29:47,268:INFO:Preloading libraries
2024-11-12 16:29:47,268:INFO:Set up data.
2024-11-12 16:29:47,271:INFO:Set up index.
2024-11-12 16:29:47,418:INFO:Initializing predict_model()
2024-11-12 16:29:47,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:47,418:INFO:Checking exceptions
2024-11-12 16:29:47,418:INFO:Preloading libraries
2024-11-12 16:29:47,418:INFO:Set up data.
2024-11-12 16:29:47,421:INFO:Set up index.
2024-11-12 16:29:47,576:INFO:Initializing predict_model()
2024-11-12 16:29:47,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5B06D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:47,576:INFO:Checking exceptions
2024-11-12 16:29:47,576:INFO:Preloading libraries
2024-11-12 16:29:47,576:INFO:Set up data.
2024-11-12 16:29:47,578:INFO:Set up index.
2024-11-12 16:29:47,748:INFO:Initializing predict_model()
2024-11-12 16:29:47,748:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:47,748:INFO:Checking exceptions
2024-11-12 16:29:47,748:INFO:Preloading libraries
2024-11-12 16:29:47,748:INFO:Set up data.
2024-11-12 16:29:47,751:INFO:Set up index.
2024-11-12 16:29:47,904:INFO:Initializing predict_model()
2024-11-12 16:29:47,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:47,905:INFO:Checking exceptions
2024-11-12 16:29:47,905:INFO:Preloading libraries
2024-11-12 16:29:47,905:INFO:Set up data.
2024-11-12 16:29:47,907:INFO:Set up index.
2024-11-12 16:29:48,064:INFO:Initializing predict_model()
2024-11-12 16:29:48,064:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:48,064:INFO:Checking exceptions
2024-11-12 16:29:48,064:INFO:Preloading libraries
2024-11-12 16:29:48,064:INFO:Set up data.
2024-11-12 16:29:48,067:INFO:Set up index.
2024-11-12 16:29:48,236:INFO:Initializing predict_model()
2024-11-12 16:29:48,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:48,236:INFO:Checking exceptions
2024-11-12 16:29:48,236:INFO:Preloading libraries
2024-11-12 16:29:48,236:INFO:Set up data.
2024-11-12 16:29:48,239:INFO:Set up index.
2024-11-12 16:29:48,403:INFO:Initializing predict_model()
2024-11-12 16:29:48,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:48,404:INFO:Checking exceptions
2024-11-12 16:29:48,404:INFO:Preloading libraries
2024-11-12 16:29:48,404:INFO:Set up data.
2024-11-12 16:29:48,406:INFO:Set up index.
2024-11-12 16:29:48,554:INFO:Initializing predict_model()
2024-11-12 16:29:48,554:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:48,554:INFO:Checking exceptions
2024-11-12 16:29:48,554:INFO:Preloading libraries
2024-11-12 16:29:48,554:INFO:Set up data.
2024-11-12 16:29:48,556:INFO:Set up index.
2024-11-12 16:29:48,714:INFO:Initializing predict_model()
2024-11-12 16:29:48,714:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:48,714:INFO:Checking exceptions
2024-11-12 16:29:48,714:INFO:Preloading libraries
2024-11-12 16:29:48,714:INFO:Set up data.
2024-11-12 16:29:48,717:INFO:Set up index.
2024-11-12 16:29:48,886:INFO:Initializing predict_model()
2024-11-12 16:29:48,886:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F65050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:48,886:INFO:Checking exceptions
2024-11-12 16:29:48,887:INFO:Preloading libraries
2024-11-12 16:29:48,887:INFO:Set up data.
2024-11-12 16:29:48,890:INFO:Set up index.
2024-11-12 16:29:49,092:INFO:Initializing predict_model()
2024-11-12 16:29:49,092:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A358F7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:49,092:INFO:Checking exceptions
2024-11-12 16:29:49,092:INFO:Preloading libraries
2024-11-12 16:29:49,092:INFO:Set up data.
2024-11-12 16:29:49,095:INFO:Set up index.
2024-11-12 16:29:49,256:INFO:Initializing predict_model()
2024-11-12 16:29:49,256:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:49,256:INFO:Checking exceptions
2024-11-12 16:29:49,256:INFO:Preloading libraries
2024-11-12 16:29:49,256:INFO:Set up data.
2024-11-12 16:29:49,259:INFO:Set up index.
2024-11-12 16:29:49,422:INFO:Initializing predict_model()
2024-11-12 16:29:49,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:49,423:INFO:Checking exceptions
2024-11-12 16:29:49,423:INFO:Preloading libraries
2024-11-12 16:29:49,423:INFO:Set up data.
2024-11-12 16:29:49,425:INFO:Set up index.
2024-11-12 16:29:49,597:INFO:Initializing predict_model()
2024-11-12 16:29:49,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:49,597:INFO:Checking exceptions
2024-11-12 16:29:49,597:INFO:Preloading libraries
2024-11-12 16:29:49,597:INFO:Set up data.
2024-11-12 16:29:49,600:INFO:Set up index.
2024-11-12 16:29:49,751:INFO:Initializing predict_model()
2024-11-12 16:29:49,752:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:49,752:INFO:Checking exceptions
2024-11-12 16:29:49,752:INFO:Preloading libraries
2024-11-12 16:29:49,752:INFO:Set up data.
2024-11-12 16:29:49,755:INFO:Set up index.
2024-11-12 16:29:49,922:INFO:Initializing predict_model()
2024-11-12 16:29:49,922:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:49,922:INFO:Checking exceptions
2024-11-12 16:29:49,922:INFO:Preloading libraries
2024-11-12 16:29:49,922:INFO:Set up data.
2024-11-12 16:29:49,925:INFO:Set up index.
2024-11-12 16:29:50,095:INFO:Initializing predict_model()
2024-11-12 16:29:50,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:50,096:INFO:Checking exceptions
2024-11-12 16:29:50,096:INFO:Preloading libraries
2024-11-12 16:29:50,096:INFO:Set up data.
2024-11-12 16:29:50,099:INFO:Set up index.
2024-11-12 16:29:50,255:INFO:Initializing predict_model()
2024-11-12 16:29:50,255:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:50,255:INFO:Checking exceptions
2024-11-12 16:29:50,255:INFO:Preloading libraries
2024-11-12 16:29:50,256:INFO:Set up data.
2024-11-12 16:29:50,258:INFO:Set up index.
2024-11-12 16:29:50,421:INFO:Initializing predict_model()
2024-11-12 16:29:50,421:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:50,421:INFO:Checking exceptions
2024-11-12 16:29:50,421:INFO:Preloading libraries
2024-11-12 16:29:50,421:INFO:Set up data.
2024-11-12 16:29:50,425:INFO:Set up index.
2024-11-12 16:29:50,595:INFO:Initializing predict_model()
2024-11-12 16:29:50,595:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:50,595:INFO:Checking exceptions
2024-11-12 16:29:50,595:INFO:Preloading libraries
2024-11-12 16:29:50,595:INFO:Set up data.
2024-11-12 16:29:50,597:INFO:Set up index.
2024-11-12 16:29:50,767:INFO:Initializing predict_model()
2024-11-12 16:29:50,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:50,767:INFO:Checking exceptions
2024-11-12 16:29:50,767:INFO:Preloading libraries
2024-11-12 16:29:50,767:INFO:Set up data.
2024-11-12 16:29:50,771:INFO:Set up index.
2024-11-12 16:29:50,924:INFO:Initializing predict_model()
2024-11-12 16:29:50,924:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:50,924:INFO:Checking exceptions
2024-11-12 16:29:50,924:INFO:Preloading libraries
2024-11-12 16:29:50,924:INFO:Set up data.
2024-11-12 16:29:50,927:INFO:Set up index.
2024-11-12 16:29:51,076:INFO:Initializing predict_model()
2024-11-12 16:29:51,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:51,076:INFO:Checking exceptions
2024-11-12 16:29:51,076:INFO:Preloading libraries
2024-11-12 16:29:51,076:INFO:Set up data.
2024-11-12 16:29:51,078:INFO:Set up index.
2024-11-12 16:29:51,235:INFO:Initializing predict_model()
2024-11-12 16:29:51,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:51,235:INFO:Checking exceptions
2024-11-12 16:29:51,236:INFO:Preloading libraries
2024-11-12 16:29:51,236:INFO:Set up data.
2024-11-12 16:29:51,238:INFO:Set up index.
2024-11-12 16:29:51,405:INFO:Initializing predict_model()
2024-11-12 16:29:51,406:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:51,406:INFO:Checking exceptions
2024-11-12 16:29:51,406:INFO:Preloading libraries
2024-11-12 16:29:51,406:INFO:Set up data.
2024-11-12 16:29:51,408:INFO:Set up index.
2024-11-12 16:29:51,560:INFO:Initializing predict_model()
2024-11-12 16:29:51,560:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:51,560:INFO:Checking exceptions
2024-11-12 16:29:51,560:INFO:Preloading libraries
2024-11-12 16:29:51,562:INFO:Set up data.
2024-11-12 16:29:51,564:INFO:Set up index.
2024-11-12 16:29:51,720:INFO:Initializing predict_model()
2024-11-12 16:29:51,720:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AC690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:51,720:INFO:Checking exceptions
2024-11-12 16:29:51,720:INFO:Preloading libraries
2024-11-12 16:29:51,720:INFO:Set up data.
2024-11-12 16:29:51,724:INFO:Set up index.
2024-11-12 16:29:51,891:INFO:Initializing predict_model()
2024-11-12 16:29:51,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4EA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:51,891:INFO:Checking exceptions
2024-11-12 16:29:51,891:INFO:Preloading libraries
2024-11-12 16:29:51,892:INFO:Set up data.
2024-11-12 16:29:51,895:INFO:Set up index.
2024-11-12 16:29:52,064:INFO:Initializing predict_model()
2024-11-12 16:29:52,064:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:52,064:INFO:Checking exceptions
2024-11-12 16:29:52,064:INFO:Preloading libraries
2024-11-12 16:29:52,064:INFO:Set up data.
2024-11-12 16:29:52,067:INFO:Set up index.
2024-11-12 16:29:52,222:INFO:Initializing predict_model()
2024-11-12 16:29:52,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D6190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:52,222:INFO:Checking exceptions
2024-11-12 16:29:52,222:INFO:Preloading libraries
2024-11-12 16:29:52,222:INFO:Set up data.
2024-11-12 16:29:52,225:INFO:Set up index.
2024-11-12 16:29:52,381:INFO:Initializing predict_model()
2024-11-12 16:29:52,381:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E3E050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:52,381:INFO:Checking exceptions
2024-11-12 16:29:52,381:INFO:Preloading libraries
2024-11-12 16:29:52,381:INFO:Set up data.
2024-11-12 16:29:52,384:INFO:Set up index.
2024-11-12 16:29:52,558:INFO:Initializing predict_model()
2024-11-12 16:29:52,558:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370B6E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:52,558:INFO:Checking exceptions
2024-11-12 16:29:52,558:INFO:Preloading libraries
2024-11-12 16:29:52,558:INFO:Set up data.
2024-11-12 16:29:52,561:INFO:Set up index.
2024-11-12 16:29:52,725:INFO:Initializing predict_model()
2024-11-12 16:29:52,725:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E3DB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:52,725:INFO:Checking exceptions
2024-11-12 16:29:52,725:INFO:Preloading libraries
2024-11-12 16:29:52,725:INFO:Set up data.
2024-11-12 16:29:52,728:INFO:Set up index.
2024-11-12 16:29:52,883:INFO:Initializing predict_model()
2024-11-12 16:29:52,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E3DD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:52,883:INFO:Checking exceptions
2024-11-12 16:29:52,883:INFO:Preloading libraries
2024-11-12 16:29:52,883:INFO:Set up data.
2024-11-12 16:29:52,885:INFO:Set up index.
2024-11-12 16:29:53,076:INFO:Initializing predict_model()
2024-11-12 16:29:53,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:53,076:INFO:Checking exceptions
2024-11-12 16:29:53,076:INFO:Preloading libraries
2024-11-12 16:29:53,076:INFO:Set up data.
2024-11-12 16:29:53,079:INFO:Set up index.
2024-11-12 16:29:53,240:INFO:Initializing predict_model()
2024-11-12 16:29:53,240:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E6A50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:53,240:INFO:Checking exceptions
2024-11-12 16:29:53,240:INFO:Preloading libraries
2024-11-12 16:29:53,240:INFO:Set up data.
2024-11-12 16:29:53,243:INFO:Set up index.
2024-11-12 16:29:53,406:INFO:Initializing predict_model()
2024-11-12 16:29:53,406:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:53,407:INFO:Checking exceptions
2024-11-12 16:29:53,407:INFO:Preloading libraries
2024-11-12 16:29:53,407:INFO:Set up data.
2024-11-12 16:29:53,409:INFO:Set up index.
2024-11-12 16:29:53,558:INFO:Initializing predict_model()
2024-11-12 16:29:53,559:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:53,559:INFO:Checking exceptions
2024-11-12 16:29:53,559:INFO:Preloading libraries
2024-11-12 16:29:53,559:INFO:Set up data.
2024-11-12 16:29:53,561:INFO:Set up index.
2024-11-12 16:29:53,714:INFO:Initializing predict_model()
2024-11-12 16:29:53,714:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A358F7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:53,714:INFO:Checking exceptions
2024-11-12 16:29:53,714:INFO:Preloading libraries
2024-11-12 16:29:53,715:INFO:Set up data.
2024-11-12 16:29:53,717:INFO:Set up index.
2024-11-12 16:29:53,890:INFO:Initializing predict_model()
2024-11-12 16:29:53,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:53,890:INFO:Checking exceptions
2024-11-12 16:29:53,891:INFO:Preloading libraries
2024-11-12 16:29:53,891:INFO:Set up data.
2024-11-12 16:29:53,893:INFO:Set up index.
2024-11-12 16:29:54,064:INFO:Initializing predict_model()
2024-11-12 16:29:54,064:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370501D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:54,064:INFO:Checking exceptions
2024-11-12 16:29:54,064:INFO:Preloading libraries
2024-11-12 16:29:54,065:INFO:Set up data.
2024-11-12 16:29:54,068:INFO:Set up index.
2024-11-12 16:29:54,223:INFO:Initializing predict_model()
2024-11-12 16:29:54,223:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:54,223:INFO:Checking exceptions
2024-11-12 16:29:54,223:INFO:Preloading libraries
2024-11-12 16:29:54,223:INFO:Set up data.
2024-11-12 16:29:54,226:INFO:Set up index.
2024-11-12 16:29:54,381:INFO:Initializing predict_model()
2024-11-12 16:29:54,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:54,382:INFO:Checking exceptions
2024-11-12 16:29:54,382:INFO:Preloading libraries
2024-11-12 16:29:54,382:INFO:Set up data.
2024-11-12 16:29:54,384:INFO:Set up index.
2024-11-12 16:29:54,555:INFO:Initializing predict_model()
2024-11-12 16:29:54,555:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:54,556:INFO:Checking exceptions
2024-11-12 16:29:54,556:INFO:Preloading libraries
2024-11-12 16:29:54,556:INFO:Set up data.
2024-11-12 16:29:54,558:INFO:Set up index.
2024-11-12 16:29:54,729:INFO:Initializing predict_model()
2024-11-12 16:29:54,729:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:54,729:INFO:Checking exceptions
2024-11-12 16:29:54,729:INFO:Preloading libraries
2024-11-12 16:29:54,729:INFO:Set up data.
2024-11-12 16:29:54,732:INFO:Set up index.
2024-11-12 16:29:54,881:INFO:Initializing predict_model()
2024-11-12 16:29:54,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E460D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:54,881:INFO:Checking exceptions
2024-11-12 16:29:54,881:INFO:Preloading libraries
2024-11-12 16:29:54,882:INFO:Set up data.
2024-11-12 16:29:54,884:INFO:Set up index.
2024-11-12 16:29:55,039:INFO:Initializing predict_model()
2024-11-12 16:29:55,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4EA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:55,039:INFO:Checking exceptions
2024-11-12 16:29:55,039:INFO:Preloading libraries
2024-11-12 16:29:55,039:INFO:Set up data.
2024-11-12 16:29:55,042:INFO:Set up index.
2024-11-12 16:29:55,210:INFO:Initializing predict_model()
2024-11-12 16:29:55,210:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A32910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:55,210:INFO:Checking exceptions
2024-11-12 16:29:55,210:INFO:Preloading libraries
2024-11-12 16:29:55,210:INFO:Set up data.
2024-11-12 16:29:55,212:INFO:Set up index.
2024-11-12 16:29:55,363:INFO:Initializing predict_model()
2024-11-12 16:29:55,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:55,363:INFO:Checking exceptions
2024-11-12 16:29:55,363:INFO:Preloading libraries
2024-11-12 16:29:55,363:INFO:Set up data.
2024-11-12 16:29:55,366:INFO:Set up index.
2024-11-12 16:29:55,516:INFO:Initializing predict_model()
2024-11-12 16:29:55,516:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:55,516:INFO:Checking exceptions
2024-11-12 16:29:55,516:INFO:Preloading libraries
2024-11-12 16:29:55,516:INFO:Set up data.
2024-11-12 16:29:55,518:INFO:Set up index.
2024-11-12 16:29:55,672:INFO:Initializing predict_model()
2024-11-12 16:29:55,672:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E87C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:55,672:INFO:Checking exceptions
2024-11-12 16:29:55,672:INFO:Preloading libraries
2024-11-12 16:29:55,672:INFO:Set up data.
2024-11-12 16:29:55,675:INFO:Set up index.
2024-11-12 16:29:55,837:INFO:Initializing predict_model()
2024-11-12 16:29:55,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:55,838:INFO:Checking exceptions
2024-11-12 16:29:55,838:INFO:Preloading libraries
2024-11-12 16:29:55,838:INFO:Set up data.
2024-11-12 16:29:55,840:INFO:Set up index.
2024-11-12 16:29:55,987:INFO:Initializing predict_model()
2024-11-12 16:29:55,987:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:55,987:INFO:Checking exceptions
2024-11-12 16:29:55,987:INFO:Preloading libraries
2024-11-12 16:29:55,987:INFO:Set up data.
2024-11-12 16:29:55,990:INFO:Set up index.
2024-11-12 16:29:56,155:INFO:Initializing predict_model()
2024-11-12 16:29:56,155:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:56,155:INFO:Checking exceptions
2024-11-12 16:29:56,155:INFO:Preloading libraries
2024-11-12 16:29:56,155:INFO:Set up data.
2024-11-12 16:29:56,158:INFO:Set up index.
2024-11-12 16:29:56,324:INFO:Initializing predict_model()
2024-11-12 16:29:56,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:56,324:INFO:Checking exceptions
2024-11-12 16:29:56,324:INFO:Preloading libraries
2024-11-12 16:29:56,324:INFO:Set up data.
2024-11-12 16:29:56,327:INFO:Set up index.
2024-11-12 16:29:56,494:INFO:Initializing predict_model()
2024-11-12 16:29:56,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:56,494:INFO:Checking exceptions
2024-11-12 16:29:56,494:INFO:Preloading libraries
2024-11-12 16:29:56,494:INFO:Set up data.
2024-11-12 16:29:56,496:INFO:Set up index.
2024-11-12 16:29:56,646:INFO:Initializing predict_model()
2024-11-12 16:29:56,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6041FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:56,646:INFO:Checking exceptions
2024-11-12 16:29:56,646:INFO:Preloading libraries
2024-11-12 16:29:56,646:INFO:Set up data.
2024-11-12 16:29:56,649:INFO:Set up index.
2024-11-12 16:29:56,797:INFO:Initializing predict_model()
2024-11-12 16:29:56,797:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:56,797:INFO:Checking exceptions
2024-11-12 16:29:56,797:INFO:Preloading libraries
2024-11-12 16:29:56,798:INFO:Set up data.
2024-11-12 16:29:56,800:INFO:Set up index.
2024-11-12 16:29:56,954:INFO:Initializing predict_model()
2024-11-12 16:29:56,954:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA05F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:56,954:INFO:Checking exceptions
2024-11-12 16:29:56,954:INFO:Preloading libraries
2024-11-12 16:29:56,954:INFO:Set up data.
2024-11-12 16:29:56,956:INFO:Set up index.
2024-11-12 16:29:57,122:INFO:Initializing predict_model()
2024-11-12 16:29:57,122:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:57,122:INFO:Checking exceptions
2024-11-12 16:29:57,122:INFO:Preloading libraries
2024-11-12 16:29:57,122:INFO:Set up data.
2024-11-12 16:29:57,124:INFO:Set up index.
2024-11-12 16:29:57,289:INFO:Initializing predict_model()
2024-11-12 16:29:57,289:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:57,289:INFO:Checking exceptions
2024-11-12 16:29:57,289:INFO:Preloading libraries
2024-11-12 16:29:57,289:INFO:Set up data.
2024-11-12 16:29:57,292:INFO:Set up index.
2024-11-12 16:29:57,441:INFO:Initializing predict_model()
2024-11-12 16:29:57,441:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:57,441:INFO:Checking exceptions
2024-11-12 16:29:57,441:INFO:Preloading libraries
2024-11-12 16:29:57,441:INFO:Set up data.
2024-11-12 16:29:57,442:INFO:Set up index.
2024-11-12 16:29:57,589:INFO:Initializing predict_model()
2024-11-12 16:29:57,590:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:57,590:INFO:Checking exceptions
2024-11-12 16:29:57,590:INFO:Preloading libraries
2024-11-12 16:29:57,590:INFO:Set up data.
2024-11-12 16:29:57,592:INFO:Set up index.
2024-11-12 16:29:57,750:INFO:Initializing predict_model()
2024-11-12 16:29:57,750:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:57,752:INFO:Checking exceptions
2024-11-12 16:29:57,752:INFO:Preloading libraries
2024-11-12 16:29:57,752:INFO:Set up data.
2024-11-12 16:29:57,754:INFO:Set up index.
2024-11-12 16:29:57,917:INFO:Initializing predict_model()
2024-11-12 16:29:57,917:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:57,917:INFO:Checking exceptions
2024-11-12 16:29:57,917:INFO:Preloading libraries
2024-11-12 16:29:57,917:INFO:Set up data.
2024-11-12 16:29:57,920:INFO:Set up index.
2024-11-12 16:29:58,068:INFO:Initializing predict_model()
2024-11-12 16:29:58,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:58,068:INFO:Checking exceptions
2024-11-12 16:29:58,068:INFO:Preloading libraries
2024-11-12 16:29:58,068:INFO:Set up data.
2024-11-12 16:29:58,072:INFO:Set up index.
2024-11-12 16:29:58,216:INFO:Initializing predict_model()
2024-11-12 16:29:58,216:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:58,216:INFO:Checking exceptions
2024-11-12 16:29:58,216:INFO:Preloading libraries
2024-11-12 16:29:58,216:INFO:Set up data.
2024-11-12 16:29:58,219:INFO:Set up index.
2024-11-12 16:29:58,373:INFO:Initializing predict_model()
2024-11-12 16:29:58,373:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F111410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:58,373:INFO:Checking exceptions
2024-11-12 16:29:58,373:INFO:Preloading libraries
2024-11-12 16:29:58,373:INFO:Set up data.
2024-11-12 16:29:58,376:INFO:Set up index.
2024-11-12 16:29:58,567:INFO:Initializing predict_model()
2024-11-12 16:29:58,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:58,567:INFO:Checking exceptions
2024-11-12 16:29:58,567:INFO:Preloading libraries
2024-11-12 16:29:58,568:INFO:Set up data.
2024-11-12 16:29:58,570:INFO:Set up index.
2024-11-12 16:29:58,720:INFO:Initializing predict_model()
2024-11-12 16:29:58,720:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:58,720:INFO:Checking exceptions
2024-11-12 16:29:58,720:INFO:Preloading libraries
2024-11-12 16:29:58,720:INFO:Set up data.
2024-11-12 16:29:58,723:INFO:Set up index.
2024-11-12 16:29:58,890:INFO:Initializing predict_model()
2024-11-12 16:29:58,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA05FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:58,890:INFO:Checking exceptions
2024-11-12 16:29:58,890:INFO:Preloading libraries
2024-11-12 16:29:58,890:INFO:Set up data.
2024-11-12 16:29:58,893:INFO:Set up index.
2024-11-12 16:29:59,054:INFO:Initializing predict_model()
2024-11-12 16:29:59,054:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6041FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:59,054:INFO:Checking exceptions
2024-11-12 16:29:59,054:INFO:Preloading libraries
2024-11-12 16:29:59,055:INFO:Set up data.
2024-11-12 16:29:59,057:INFO:Set up index.
2024-11-12 16:29:59,213:INFO:Initializing predict_model()
2024-11-12 16:29:59,213:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F327B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:59,213:INFO:Checking exceptions
2024-11-12 16:29:59,213:INFO:Preloading libraries
2024-11-12 16:29:59,214:INFO:Set up data.
2024-11-12 16:29:59,216:INFO:Set up index.
2024-11-12 16:29:59,397:INFO:Initializing predict_model()
2024-11-12 16:29:59,397:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:59,397:INFO:Checking exceptions
2024-11-12 16:29:59,397:INFO:Preloading libraries
2024-11-12 16:29:59,397:INFO:Set up data.
2024-11-12 16:29:59,400:INFO:Set up index.
2024-11-12 16:29:59,566:INFO:Initializing predict_model()
2024-11-12 16:29:59,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:59,566:INFO:Checking exceptions
2024-11-12 16:29:59,566:INFO:Preloading libraries
2024-11-12 16:29:59,566:INFO:Set up data.
2024-11-12 16:29:59,569:INFO:Set up index.
2024-11-12 16:29:59,753:INFO:Initializing predict_model()
2024-11-12 16:29:59,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:59,754:INFO:Checking exceptions
2024-11-12 16:29:59,754:INFO:Preloading libraries
2024-11-12 16:29:59,754:INFO:Set up data.
2024-11-12 16:29:59,757:INFO:Set up index.
2024-11-12 16:29:59,937:INFO:Initializing predict_model()
2024-11-12 16:29:59,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:29:59,937:INFO:Checking exceptions
2024-11-12 16:29:59,937:INFO:Preloading libraries
2024-11-12 16:29:59,937:INFO:Set up data.
2024-11-12 16:29:59,941:INFO:Set up index.
2024-11-12 16:30:00,123:INFO:Initializing predict_model()
2024-11-12 16:30:00,123:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:00,123:INFO:Checking exceptions
2024-11-12 16:30:00,123:INFO:Preloading libraries
2024-11-12 16:30:00,124:INFO:Set up data.
2024-11-12 16:30:00,127:INFO:Set up index.
2024-11-12 16:30:00,280:INFO:Initializing predict_model()
2024-11-12 16:30:00,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F327B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:00,281:INFO:Checking exceptions
2024-11-12 16:30:00,281:INFO:Preloading libraries
2024-11-12 16:30:00,281:INFO:Set up data.
2024-11-12 16:30:00,284:INFO:Set up index.
2024-11-12 16:30:00,438:INFO:Initializing predict_model()
2024-11-12 16:30:00,438:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:00,438:INFO:Checking exceptions
2024-11-12 16:30:00,438:INFO:Preloading libraries
2024-11-12 16:30:00,438:INFO:Set up data.
2024-11-12 16:30:00,441:INFO:Set up index.
2024-11-12 16:30:00,621:INFO:Initializing predict_model()
2024-11-12 16:30:00,621:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:00,621:INFO:Checking exceptions
2024-11-12 16:30:00,621:INFO:Preloading libraries
2024-11-12 16:30:00,621:INFO:Set up data.
2024-11-12 16:30:00,623:INFO:Set up index.
2024-11-12 16:30:00,785:INFO:Initializing predict_model()
2024-11-12 16:30:00,786:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:00,786:INFO:Checking exceptions
2024-11-12 16:30:00,786:INFO:Preloading libraries
2024-11-12 16:30:00,786:INFO:Set up data.
2024-11-12 16:30:00,789:INFO:Set up index.
2024-11-12 16:30:00,971:INFO:Initializing predict_model()
2024-11-12 16:30:00,971:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:00,971:INFO:Checking exceptions
2024-11-12 16:30:00,971:INFO:Preloading libraries
2024-11-12 16:30:00,971:INFO:Set up data.
2024-11-12 16:30:00,974:INFO:Set up index.
2024-11-12 16:30:01,138:INFO:Initializing predict_model()
2024-11-12 16:30:01,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E738D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:01,139:INFO:Checking exceptions
2024-11-12 16:30:01,139:INFO:Preloading libraries
2024-11-12 16:30:01,139:INFO:Set up data.
2024-11-12 16:30:01,142:INFO:Set up index.
2024-11-12 16:30:01,307:INFO:Initializing predict_model()
2024-11-12 16:30:01,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370512D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:01,307:INFO:Checking exceptions
2024-11-12 16:30:01,307:INFO:Preloading libraries
2024-11-12 16:30:01,308:INFO:Set up data.
2024-11-12 16:30:01,311:INFO:Set up index.
2024-11-12 16:30:01,483:INFO:Initializing predict_model()
2024-11-12 16:30:01,483:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:01,483:INFO:Checking exceptions
2024-11-12 16:30:01,483:INFO:Preloading libraries
2024-11-12 16:30:01,483:INFO:Set up data.
2024-11-12 16:30:01,486:INFO:Set up index.
2024-11-12 16:30:01,656:INFO:Initializing predict_model()
2024-11-12 16:30:01,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:01,656:INFO:Checking exceptions
2024-11-12 16:30:01,656:INFO:Preloading libraries
2024-11-12 16:30:01,656:INFO:Set up data.
2024-11-12 16:30:01,659:INFO:Set up index.
2024-11-12 16:30:01,814:INFO:Initializing predict_model()
2024-11-12 16:30:01,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:01,814:INFO:Checking exceptions
2024-11-12 16:30:01,814:INFO:Preloading libraries
2024-11-12 16:30:01,814:INFO:Set up data.
2024-11-12 16:30:01,817:INFO:Set up index.
2024-11-12 16:30:01,972:INFO:Initializing predict_model()
2024-11-12 16:30:01,972:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:01,972:INFO:Checking exceptions
2024-11-12 16:30:01,972:INFO:Preloading libraries
2024-11-12 16:30:01,973:INFO:Set up data.
2024-11-12 16:30:01,975:INFO:Set up index.
2024-11-12 16:30:02,137:INFO:Initializing predict_model()
2024-11-12 16:30:02,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:02,137:INFO:Checking exceptions
2024-11-12 16:30:02,137:INFO:Preloading libraries
2024-11-12 16:30:02,137:INFO:Set up data.
2024-11-12 16:30:02,139:INFO:Set up index.
2024-11-12 16:30:02,303:INFO:Initializing predict_model()
2024-11-12 16:30:02,303:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4EA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:02,303:INFO:Checking exceptions
2024-11-12 16:30:02,303:INFO:Preloading libraries
2024-11-12 16:30:02,304:INFO:Set up data.
2024-11-12 16:30:02,307:INFO:Set up index.
2024-11-12 16:30:02,455:INFO:Initializing predict_model()
2024-11-12 16:30:02,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A38EB6FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:02,455:INFO:Checking exceptions
2024-11-12 16:30:02,455:INFO:Preloading libraries
2024-11-12 16:30:02,455:INFO:Set up data.
2024-11-12 16:30:02,458:INFO:Set up index.
2024-11-12 16:30:02,606:INFO:Initializing predict_model()
2024-11-12 16:30:02,607:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:02,607:INFO:Checking exceptions
2024-11-12 16:30:02,607:INFO:Preloading libraries
2024-11-12 16:30:02,607:INFO:Set up data.
2024-11-12 16:30:02,609:INFO:Set up index.
2024-11-12 16:30:02,765:INFO:Initializing predict_model()
2024-11-12 16:30:02,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:02,765:INFO:Checking exceptions
2024-11-12 16:30:02,765:INFO:Preloading libraries
2024-11-12 16:30:02,765:INFO:Set up data.
2024-11-12 16:30:02,769:INFO:Set up index.
2024-11-12 16:30:02,934:INFO:Initializing predict_model()
2024-11-12 16:30:02,934:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:02,934:INFO:Checking exceptions
2024-11-12 16:30:02,934:INFO:Preloading libraries
2024-11-12 16:30:02,934:INFO:Set up data.
2024-11-12 16:30:02,937:INFO:Set up index.
2024-11-12 16:30:03,110:INFO:Initializing predict_model()
2024-11-12 16:30:03,110:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:03,110:INFO:Checking exceptions
2024-11-12 16:30:03,110:INFO:Preloading libraries
2024-11-12 16:30:03,110:INFO:Set up data.
2024-11-12 16:30:03,112:INFO:Set up index.
2024-11-12 16:30:03,269:INFO:Initializing predict_model()
2024-11-12 16:30:03,269:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E72ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:03,269:INFO:Checking exceptions
2024-11-12 16:30:03,269:INFO:Preloading libraries
2024-11-12 16:30:03,269:INFO:Set up data.
2024-11-12 16:30:03,272:INFO:Set up index.
2024-11-12 16:30:03,433:INFO:Initializing predict_model()
2024-11-12 16:30:03,434:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:03,434:INFO:Checking exceptions
2024-11-12 16:30:03,434:INFO:Preloading libraries
2024-11-12 16:30:03,434:INFO:Set up data.
2024-11-12 16:30:03,437:INFO:Set up index.
2024-11-12 16:30:03,602:INFO:Initializing predict_model()
2024-11-12 16:30:03,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:03,603:INFO:Checking exceptions
2024-11-12 16:30:03,603:INFO:Preloading libraries
2024-11-12 16:30:03,603:INFO:Set up data.
2024-11-12 16:30:03,605:INFO:Set up index.
2024-11-12 16:30:03,772:INFO:Initializing predict_model()
2024-11-12 16:30:03,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:03,772:INFO:Checking exceptions
2024-11-12 16:30:03,772:INFO:Preloading libraries
2024-11-12 16:30:03,772:INFO:Set up data.
2024-11-12 16:30:03,775:INFO:Set up index.
2024-11-12 16:30:03,931:INFO:Initializing predict_model()
2024-11-12 16:30:03,931:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:03,931:INFO:Checking exceptions
2024-11-12 16:30:03,931:INFO:Preloading libraries
2024-11-12 16:30:03,932:INFO:Set up data.
2024-11-12 16:30:03,934:INFO:Set up index.
2024-11-12 16:30:04,100:INFO:Initializing predict_model()
2024-11-12 16:30:04,100:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:04,100:INFO:Checking exceptions
2024-11-12 16:30:04,100:INFO:Preloading libraries
2024-11-12 16:30:04,100:INFO:Set up data.
2024-11-12 16:30:04,102:INFO:Set up index.
2024-11-12 16:30:04,267:INFO:Initializing predict_model()
2024-11-12 16:30:04,267:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:04,267:INFO:Checking exceptions
2024-11-12 16:30:04,267:INFO:Preloading libraries
2024-11-12 16:30:04,267:INFO:Set up data.
2024-11-12 16:30:04,269:INFO:Set up index.
2024-11-12 16:30:04,444:INFO:Initializing predict_model()
2024-11-12 16:30:04,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A32910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:04,445:INFO:Checking exceptions
2024-11-12 16:30:04,445:INFO:Preloading libraries
2024-11-12 16:30:04,445:INFO:Set up data.
2024-11-12 16:30:04,447:INFO:Set up index.
2024-11-12 16:30:04,604:INFO:Initializing predict_model()
2024-11-12 16:30:04,604:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D6190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:04,604:INFO:Checking exceptions
2024-11-12 16:30:04,604:INFO:Preloading libraries
2024-11-12 16:30:04,605:INFO:Set up data.
2024-11-12 16:30:04,607:INFO:Set up index.
2024-11-12 16:30:04,798:INFO:Initializing predict_model()
2024-11-12 16:30:04,798:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:04,798:INFO:Checking exceptions
2024-11-12 16:30:04,798:INFO:Preloading libraries
2024-11-12 16:30:04,798:INFO:Set up data.
2024-11-12 16:30:04,802:INFO:Set up index.
2024-11-12 16:30:04,957:INFO:Initializing predict_model()
2024-11-12 16:30:04,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:04,957:INFO:Checking exceptions
2024-11-12 16:30:04,958:INFO:Preloading libraries
2024-11-12 16:30:04,958:INFO:Set up data.
2024-11-12 16:30:04,960:INFO:Set up index.
2024-11-12 16:30:05,130:INFO:Initializing predict_model()
2024-11-12 16:30:05,131:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:05,131:INFO:Checking exceptions
2024-11-12 16:30:05,131:INFO:Preloading libraries
2024-11-12 16:30:05,131:INFO:Set up data.
2024-11-12 16:30:05,133:INFO:Set up index.
2024-11-12 16:30:05,295:INFO:Initializing predict_model()
2024-11-12 16:30:05,295:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:05,295:INFO:Checking exceptions
2024-11-12 16:30:05,295:INFO:Preloading libraries
2024-11-12 16:30:05,296:INFO:Set up data.
2024-11-12 16:30:05,298:INFO:Set up index.
2024-11-12 16:30:05,458:INFO:Initializing predict_model()
2024-11-12 16:30:05,458:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A331D5750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:05,458:INFO:Checking exceptions
2024-11-12 16:30:05,458:INFO:Preloading libraries
2024-11-12 16:30:05,458:INFO:Set up data.
2024-11-12 16:30:05,461:INFO:Set up index.
2024-11-12 16:30:05,661:INFO:Initializing predict_model()
2024-11-12 16:30:05,661:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:05,662:INFO:Checking exceptions
2024-11-12 16:30:05,662:INFO:Preloading libraries
2024-11-12 16:30:05,662:INFO:Set up data.
2024-11-12 16:30:05,666:INFO:Set up index.
2024-11-12 16:30:05,854:INFO:Initializing predict_model()
2024-11-12 16:30:05,854:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F65050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:05,854:INFO:Checking exceptions
2024-11-12 16:30:05,854:INFO:Preloading libraries
2024-11-12 16:30:05,855:INFO:Set up data.
2024-11-12 16:30:05,858:INFO:Set up index.
2024-11-12 16:30:06,057:INFO:Initializing predict_model()
2024-11-12 16:30:06,057:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4EA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:06,057:INFO:Checking exceptions
2024-11-12 16:30:06,058:INFO:Preloading libraries
2024-11-12 16:30:06,058:INFO:Set up data.
2024-11-12 16:30:06,063:INFO:Set up index.
2024-11-12 16:30:06,276:INFO:Initializing predict_model()
2024-11-12 16:30:06,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:06,276:INFO:Checking exceptions
2024-11-12 16:30:06,276:INFO:Preloading libraries
2024-11-12 16:30:06,276:INFO:Set up data.
2024-11-12 16:30:06,281:INFO:Set up index.
2024-11-12 16:30:06,488:INFO:Initializing predict_model()
2024-11-12 16:30:06,488:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E73090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:06,488:INFO:Checking exceptions
2024-11-12 16:30:06,488:INFO:Preloading libraries
2024-11-12 16:30:06,489:INFO:Set up data.
2024-11-12 16:30:06,493:INFO:Set up index.
2024-11-12 16:30:06,706:INFO:Initializing predict_model()
2024-11-12 16:30:06,706:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:06,706:INFO:Checking exceptions
2024-11-12 16:30:06,706:INFO:Preloading libraries
2024-11-12 16:30:06,706:INFO:Set up data.
2024-11-12 16:30:06,710:INFO:Set up index.
2024-11-12 16:30:06,925:INFO:Initializing predict_model()
2024-11-12 16:30:06,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:06,925:INFO:Checking exceptions
2024-11-12 16:30:06,925:INFO:Preloading libraries
2024-11-12 16:30:06,925:INFO:Set up data.
2024-11-12 16:30:06,929:INFO:Set up index.
2024-11-12 16:30:07,187:INFO:Initializing predict_model()
2024-11-12 16:30:07,187:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E4E4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:07,187:INFO:Checking exceptions
2024-11-12 16:30:07,187:INFO:Preloading libraries
2024-11-12 16:30:07,187:INFO:Set up data.
2024-11-12 16:30:07,191:INFO:Set up index.
2024-11-12 16:30:07,393:INFO:Initializing predict_model()
2024-11-12 16:30:07,393:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:07,393:INFO:Checking exceptions
2024-11-12 16:30:07,393:INFO:Preloading libraries
2024-11-12 16:30:07,393:INFO:Set up data.
2024-11-12 16:30:07,398:INFO:Set up index.
2024-11-12 16:30:07,598:INFO:Initializing predict_model()
2024-11-12 16:30:07,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:07,599:INFO:Checking exceptions
2024-11-12 16:30:07,599:INFO:Preloading libraries
2024-11-12 16:30:07,599:INFO:Set up data.
2024-11-12 16:30:07,603:INFO:Set up index.
2024-11-12 16:30:07,818:INFO:Initializing predict_model()
2024-11-12 16:30:07,818:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:07,818:INFO:Checking exceptions
2024-11-12 16:30:07,818:INFO:Preloading libraries
2024-11-12 16:30:07,819:INFO:Set up data.
2024-11-12 16:30:07,823:INFO:Set up index.
2024-11-12 16:30:08,051:INFO:Initializing predict_model()
2024-11-12 16:30:08,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:08,051:INFO:Checking exceptions
2024-11-12 16:30:08,051:INFO:Preloading libraries
2024-11-12 16:30:08,051:INFO:Set up data.
2024-11-12 16:30:08,053:INFO:Set up index.
2024-11-12 16:30:08,246:INFO:Initializing predict_model()
2024-11-12 16:30:08,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C7D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:08,246:INFO:Checking exceptions
2024-11-12 16:30:08,246:INFO:Preloading libraries
2024-11-12 16:30:08,247:INFO:Set up data.
2024-11-12 16:30:08,253:INFO:Set up index.
2024-11-12 16:30:08,458:INFO:Initializing predict_model()
2024-11-12 16:30:08,459:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:08,459:INFO:Checking exceptions
2024-11-12 16:30:08,459:INFO:Preloading libraries
2024-11-12 16:30:08,459:INFO:Set up data.
2024-11-12 16:30:08,463:INFO:Set up index.
2024-11-12 16:30:08,678:INFO:Initializing predict_model()
2024-11-12 16:30:08,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:08,678:INFO:Checking exceptions
2024-11-12 16:30:08,678:INFO:Preloading libraries
2024-11-12 16:30:08,679:INFO:Set up data.
2024-11-12 16:30:08,681:INFO:Set up index.
2024-11-12 16:30:08,867:INFO:Initializing predict_model()
2024-11-12 16:30:08,867:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:08,867:INFO:Checking exceptions
2024-11-12 16:30:08,867:INFO:Preloading libraries
2024-11-12 16:30:08,867:INFO:Set up data.
2024-11-12 16:30:08,871:INFO:Set up index.
2024-11-12 16:30:09,068:INFO:Initializing predict_model()
2024-11-12 16:30:09,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:09,068:INFO:Checking exceptions
2024-11-12 16:30:09,068:INFO:Preloading libraries
2024-11-12 16:30:09,068:INFO:Set up data.
2024-11-12 16:30:09,075:INFO:Set up index.
2024-11-12 16:30:09,254:INFO:Initializing predict_model()
2024-11-12 16:30:09,254:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:09,254:INFO:Checking exceptions
2024-11-12 16:30:09,254:INFO:Preloading libraries
2024-11-12 16:30:09,256:INFO:Set up data.
2024-11-12 16:30:09,258:INFO:Set up index.
2024-11-12 16:30:09,455:INFO:Initializing predict_model()
2024-11-12 16:30:09,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370512D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:09,455:INFO:Checking exceptions
2024-11-12 16:30:09,455:INFO:Preloading libraries
2024-11-12 16:30:09,455:INFO:Set up data.
2024-11-12 16:30:09,460:INFO:Set up index.
2024-11-12 16:30:09,634:INFO:Initializing predict_model()
2024-11-12 16:30:09,634:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BC9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:09,634:INFO:Checking exceptions
2024-11-12 16:30:09,634:INFO:Preloading libraries
2024-11-12 16:30:09,634:INFO:Set up data.
2024-11-12 16:30:09,637:INFO:Set up index.
2024-11-12 16:30:09,850:INFO:Initializing predict_model()
2024-11-12 16:30:09,851:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E6A50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:09,851:INFO:Checking exceptions
2024-11-12 16:30:09,851:INFO:Preloading libraries
2024-11-12 16:30:09,851:INFO:Set up data.
2024-11-12 16:30:09,856:INFO:Set up index.
2024-11-12 16:30:10,053:INFO:Initializing predict_model()
2024-11-12 16:30:10,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:10,053:INFO:Checking exceptions
2024-11-12 16:30:10,053:INFO:Preloading libraries
2024-11-12 16:30:10,053:INFO:Set up data.
2024-11-12 16:30:10,058:INFO:Set up index.
2024-11-12 16:30:10,241:INFO:Initializing predict_model()
2024-11-12 16:30:10,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:10,241:INFO:Checking exceptions
2024-11-12 16:30:10,241:INFO:Preloading libraries
2024-11-12 16:30:10,241:INFO:Set up data.
2024-11-12 16:30:10,246:INFO:Set up index.
2024-11-12 16:30:10,450:INFO:Initializing predict_model()
2024-11-12 16:30:10,450:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:10,450:INFO:Checking exceptions
2024-11-12 16:30:10,450:INFO:Preloading libraries
2024-11-12 16:30:10,451:INFO:Set up data.
2024-11-12 16:30:10,453:INFO:Set up index.
2024-11-12 16:30:10,618:INFO:Initializing predict_model()
2024-11-12 16:30:10,618:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B2CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:10,618:INFO:Checking exceptions
2024-11-12 16:30:10,618:INFO:Preloading libraries
2024-11-12 16:30:10,618:INFO:Set up data.
2024-11-12 16:30:10,621:INFO:Set up index.
2024-11-12 16:30:10,852:INFO:Initializing predict_model()
2024-11-12 16:30:10,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:10,852:INFO:Checking exceptions
2024-11-12 16:30:10,852:INFO:Preloading libraries
2024-11-12 16:30:10,853:INFO:Set up data.
2024-11-12 16:30:10,857:INFO:Set up index.
2024-11-12 16:30:11,096:INFO:Initializing predict_model()
2024-11-12 16:30:11,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:11,096:INFO:Checking exceptions
2024-11-12 16:30:11,096:INFO:Preloading libraries
2024-11-12 16:30:11,097:INFO:Set up data.
2024-11-12 16:30:11,101:INFO:Set up index.
2024-11-12 16:30:11,282:INFO:Initializing predict_model()
2024-11-12 16:30:11,282:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:11,282:INFO:Checking exceptions
2024-11-12 16:30:11,282:INFO:Preloading libraries
2024-11-12 16:30:11,282:INFO:Set up data.
2024-11-12 16:30:11,284:INFO:Set up index.
2024-11-12 16:30:11,483:INFO:Initializing predict_model()
2024-11-12 16:30:11,483:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:11,484:INFO:Checking exceptions
2024-11-12 16:30:11,484:INFO:Preloading libraries
2024-11-12 16:30:11,484:INFO:Set up data.
2024-11-12 16:30:11,488:INFO:Set up index.
2024-11-12 16:30:11,695:INFO:Initializing predict_model()
2024-11-12 16:30:11,695:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:11,695:INFO:Checking exceptions
2024-11-12 16:30:11,695:INFO:Preloading libraries
2024-11-12 16:30:11,695:INFO:Set up data.
2024-11-12 16:30:11,700:INFO:Set up index.
2024-11-12 16:30:11,876:INFO:Initializing predict_model()
2024-11-12 16:30:11,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A386EB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:11,876:INFO:Checking exceptions
2024-11-12 16:30:11,876:INFO:Preloading libraries
2024-11-12 16:30:11,876:INFO:Set up data.
2024-11-12 16:30:11,880:INFO:Set up index.
2024-11-12 16:30:12,046:INFO:Initializing predict_model()
2024-11-12 16:30:12,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F5F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:12,046:INFO:Checking exceptions
2024-11-12 16:30:12,046:INFO:Preloading libraries
2024-11-12 16:30:12,046:INFO:Set up data.
2024-11-12 16:30:12,048:INFO:Set up index.
2024-11-12 16:30:12,211:INFO:Initializing predict_model()
2024-11-12 16:30:12,211:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:12,211:INFO:Checking exceptions
2024-11-12 16:30:12,211:INFO:Preloading libraries
2024-11-12 16:30:12,212:INFO:Set up data.
2024-11-12 16:30:12,214:INFO:Set up index.
2024-11-12 16:30:12,388:INFO:Initializing predict_model()
2024-11-12 16:30:12,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F3251D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:12,388:INFO:Checking exceptions
2024-11-12 16:30:12,388:INFO:Preloading libraries
2024-11-12 16:30:12,388:INFO:Set up data.
2024-11-12 16:30:12,391:INFO:Set up index.
2024-11-12 16:30:12,551:INFO:Initializing predict_model()
2024-11-12 16:30:12,551:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:12,552:INFO:Checking exceptions
2024-11-12 16:30:12,552:INFO:Preloading libraries
2024-11-12 16:30:12,552:INFO:Set up data.
2024-11-12 16:30:12,554:INFO:Set up index.
2024-11-12 16:30:12,708:INFO:Initializing predict_model()
2024-11-12 16:30:12,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA05FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:12,708:INFO:Checking exceptions
2024-11-12 16:30:12,708:INFO:Preloading libraries
2024-11-12 16:30:12,709:INFO:Set up data.
2024-11-12 16:30:12,711:INFO:Set up index.
2024-11-12 16:30:12,887:INFO:Initializing predict_model()
2024-11-12 16:30:12,887:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BEC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:12,887:INFO:Checking exceptions
2024-11-12 16:30:12,887:INFO:Preloading libraries
2024-11-12 16:30:12,887:INFO:Set up data.
2024-11-12 16:30:12,890:INFO:Set up index.
2024-11-12 16:30:13,043:INFO:Initializing predict_model()
2024-11-12 16:30:13,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:13,043:INFO:Checking exceptions
2024-11-12 16:30:13,043:INFO:Preloading libraries
2024-11-12 16:30:13,044:INFO:Set up data.
2024-11-12 16:30:13,046:INFO:Set up index.
2024-11-12 16:30:13,199:INFO:Initializing predict_model()
2024-11-12 16:30:13,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:13,199:INFO:Checking exceptions
2024-11-12 16:30:13,199:INFO:Preloading libraries
2024-11-12 16:30:13,199:INFO:Set up data.
2024-11-12 16:30:13,202:INFO:Set up index.
2024-11-12 16:30:13,367:INFO:Initializing predict_model()
2024-11-12 16:30:13,367:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:13,367:INFO:Checking exceptions
2024-11-12 16:30:13,367:INFO:Preloading libraries
2024-11-12 16:30:13,367:INFO:Set up data.
2024-11-12 16:30:13,370:INFO:Set up index.
2024-11-12 16:30:13,544:INFO:Initializing predict_model()
2024-11-12 16:30:13,544:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:13,544:INFO:Checking exceptions
2024-11-12 16:30:13,544:INFO:Preloading libraries
2024-11-12 16:30:13,544:INFO:Set up data.
2024-11-12 16:30:13,547:INFO:Set up index.
2024-11-12 16:30:13,698:INFO:Initializing predict_model()
2024-11-12 16:30:13,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E87C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:13,698:INFO:Checking exceptions
2024-11-12 16:30:13,698:INFO:Preloading libraries
2024-11-12 16:30:13,698:INFO:Set up data.
2024-11-12 16:30:13,701:INFO:Set up index.
2024-11-12 16:30:13,868:INFO:Initializing predict_model()
2024-11-12 16:30:13,868:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:13,868:INFO:Checking exceptions
2024-11-12 16:30:13,868:INFO:Preloading libraries
2024-11-12 16:30:13,868:INFO:Set up data.
2024-11-12 16:30:13,871:INFO:Set up index.
2024-11-12 16:30:14,044:INFO:Initializing predict_model()
2024-11-12 16:30:14,044:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E6A50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:14,044:INFO:Checking exceptions
2024-11-12 16:30:14,044:INFO:Preloading libraries
2024-11-12 16:30:14,045:INFO:Set up data.
2024-11-12 16:30:14,048:INFO:Set up index.
2024-11-12 16:30:14,213:INFO:Initializing predict_model()
2024-11-12 16:30:14,213:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A38EB6FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:14,213:INFO:Checking exceptions
2024-11-12 16:30:14,213:INFO:Preloading libraries
2024-11-12 16:30:14,213:INFO:Set up data.
2024-11-12 16:30:14,216:INFO:Set up index.
2024-11-12 16:30:14,372:INFO:Initializing predict_model()
2024-11-12 16:30:14,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:14,372:INFO:Checking exceptions
2024-11-12 16:30:14,372:INFO:Preloading libraries
2024-11-12 16:30:14,372:INFO:Set up data.
2024-11-12 16:30:14,374:INFO:Set up index.
2024-11-12 16:30:14,532:INFO:Initializing predict_model()
2024-11-12 16:30:14,532:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A32910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:14,532:INFO:Checking exceptions
2024-11-12 16:30:14,532:INFO:Preloading libraries
2024-11-12 16:30:14,533:INFO:Set up data.
2024-11-12 16:30:14,535:INFO:Set up index.
2024-11-12 16:30:14,689:INFO:Initializing predict_model()
2024-11-12 16:30:14,689:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:14,689:INFO:Checking exceptions
2024-11-12 16:30:14,689:INFO:Preloading libraries
2024-11-12 16:30:14,689:INFO:Set up data.
2024-11-12 16:30:14,692:INFO:Set up index.
2024-11-12 16:30:14,860:INFO:Initializing predict_model()
2024-11-12 16:30:14,861:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4BE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:14,861:INFO:Checking exceptions
2024-11-12 16:30:14,861:INFO:Preloading libraries
2024-11-12 16:30:14,861:INFO:Set up data.
2024-11-12 16:30:14,863:INFO:Set up index.
2024-11-12 16:30:15,033:INFO:Initializing predict_model()
2024-11-12 16:30:15,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:15,033:INFO:Checking exceptions
2024-11-12 16:30:15,033:INFO:Preloading libraries
2024-11-12 16:30:15,033:INFO:Set up data.
2024-11-12 16:30:15,036:INFO:Set up index.
2024-11-12 16:30:15,195:INFO:Initializing predict_model()
2024-11-12 16:30:15,195:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E6A50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:15,195:INFO:Checking exceptions
2024-11-12 16:30:15,195:INFO:Preloading libraries
2024-11-12 16:30:15,195:INFO:Set up data.
2024-11-12 16:30:15,197:INFO:Set up index.
2024-11-12 16:30:15,346:INFO:Initializing predict_model()
2024-11-12 16:30:15,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:15,346:INFO:Checking exceptions
2024-11-12 16:30:15,346:INFO:Preloading libraries
2024-11-12 16:30:15,346:INFO:Set up data.
2024-11-12 16:30:15,348:INFO:Set up index.
2024-11-12 16:30:15,500:INFO:Initializing predict_model()
2024-11-12 16:30:15,500:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BFED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:15,500:INFO:Checking exceptions
2024-11-12 16:30:15,500:INFO:Preloading libraries
2024-11-12 16:30:15,500:INFO:Set up data.
2024-11-12 16:30:15,502:INFO:Set up index.
2024-11-12 16:30:15,670:INFO:Initializing predict_model()
2024-11-12 16:30:15,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E1B750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:15,670:INFO:Checking exceptions
2024-11-12 16:30:15,670:INFO:Preloading libraries
2024-11-12 16:30:15,670:INFO:Set up data.
2024-11-12 16:30:15,673:INFO:Set up index.
2024-11-12 16:30:15,837:INFO:Initializing predict_model()
2024-11-12 16:30:15,837:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37079550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:15,837:INFO:Checking exceptions
2024-11-12 16:30:15,837:INFO:Preloading libraries
2024-11-12 16:30:15,837:INFO:Set up data.
2024-11-12 16:30:15,840:INFO:Set up index.
2024-11-12 16:30:15,995:INFO:Initializing predict_model()
2024-11-12 16:30:15,995:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:15,995:INFO:Checking exceptions
2024-11-12 16:30:15,995:INFO:Preloading libraries
2024-11-12 16:30:15,996:INFO:Set up data.
2024-11-12 16:30:15,998:INFO:Set up index.
2024-11-12 16:30:16,168:INFO:Initializing predict_model()
2024-11-12 16:30:16,168:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:16,168:INFO:Checking exceptions
2024-11-12 16:30:16,168:INFO:Preloading libraries
2024-11-12 16:30:16,168:INFO:Set up data.
2024-11-12 16:30:16,170:INFO:Set up index.
2024-11-12 16:30:16,335:INFO:Initializing predict_model()
2024-11-12 16:30:16,336:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:16,336:INFO:Checking exceptions
2024-11-12 16:30:16,336:INFO:Preloading libraries
2024-11-12 16:30:16,336:INFO:Set up data.
2024-11-12 16:30:16,339:INFO:Set up index.
2024-11-12 16:30:16,496:INFO:Initializing predict_model()
2024-11-12 16:30:16,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E950890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:16,496:INFO:Checking exceptions
2024-11-12 16:30:16,496:INFO:Preloading libraries
2024-11-12 16:30:16,496:INFO:Set up data.
2024-11-12 16:30:16,499:INFO:Set up index.
2024-11-12 16:30:16,649:INFO:Initializing predict_model()
2024-11-12 16:30:16,649:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:16,649:INFO:Checking exceptions
2024-11-12 16:30:16,649:INFO:Preloading libraries
2024-11-12 16:30:16,649:INFO:Set up data.
2024-11-12 16:30:16,651:INFO:Set up index.
2024-11-12 16:30:16,836:INFO:Initializing predict_model()
2024-11-12 16:30:16,836:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:16,836:INFO:Checking exceptions
2024-11-12 16:30:16,836:INFO:Preloading libraries
2024-11-12 16:30:16,836:INFO:Set up data.
2024-11-12 16:30:16,839:INFO:Set up index.
2024-11-12 16:30:17,000:INFO:Initializing predict_model()
2024-11-12 16:30:17,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:17,001:INFO:Checking exceptions
2024-11-12 16:30:17,001:INFO:Preloading libraries
2024-11-12 16:30:17,001:INFO:Set up data.
2024-11-12 16:30:17,003:INFO:Set up index.
2024-11-12 16:30:17,166:INFO:Initializing predict_model()
2024-11-12 16:30:17,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:17,166:INFO:Checking exceptions
2024-11-12 16:30:17,166:INFO:Preloading libraries
2024-11-12 16:30:17,166:INFO:Set up data.
2024-11-12 16:30:17,169:INFO:Set up index.
2024-11-12 16:30:17,319:INFO:Initializing predict_model()
2024-11-12 16:30:17,319:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D6190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:17,319:INFO:Checking exceptions
2024-11-12 16:30:17,319:INFO:Preloading libraries
2024-11-12 16:30:17,320:INFO:Set up data.
2024-11-12 16:30:17,322:INFO:Set up index.
2024-11-12 16:30:17,479:INFO:Initializing predict_model()
2024-11-12 16:30:17,479:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4BE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:17,479:INFO:Checking exceptions
2024-11-12 16:30:17,479:INFO:Preloading libraries
2024-11-12 16:30:17,479:INFO:Set up data.
2024-11-12 16:30:17,482:INFO:Set up index.
2024-11-12 16:30:17,638:INFO:Initializing predict_model()
2024-11-12 16:30:17,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:17,638:INFO:Checking exceptions
2024-11-12 16:30:17,639:INFO:Preloading libraries
2024-11-12 16:30:17,639:INFO:Set up data.
2024-11-12 16:30:17,641:INFO:Set up index.
2024-11-12 16:30:17,807:INFO:Initializing predict_model()
2024-11-12 16:30:17,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:17,807:INFO:Checking exceptions
2024-11-12 16:30:17,807:INFO:Preloading libraries
2024-11-12 16:30:17,807:INFO:Set up data.
2024-11-12 16:30:17,810:INFO:Set up index.
2024-11-12 16:30:17,963:INFO:Initializing predict_model()
2024-11-12 16:30:17,963:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:17,963:INFO:Checking exceptions
2024-11-12 16:30:17,963:INFO:Preloading libraries
2024-11-12 16:30:17,963:INFO:Set up data.
2024-11-12 16:30:17,966:INFO:Set up index.
2024-11-12 16:30:18,113:INFO:Initializing predict_model()
2024-11-12 16:30:18,113:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:18,113:INFO:Checking exceptions
2024-11-12 16:30:18,113:INFO:Preloading libraries
2024-11-12 16:30:18,113:INFO:Set up data.
2024-11-12 16:30:18,116:INFO:Set up index.
2024-11-12 16:30:18,270:INFO:Initializing predict_model()
2024-11-12 16:30:18,271:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:18,271:INFO:Checking exceptions
2024-11-12 16:30:18,271:INFO:Preloading libraries
2024-11-12 16:30:18,271:INFO:Set up data.
2024-11-12 16:30:18,273:INFO:Set up index.
2024-11-12 16:30:18,436:INFO:Initializing predict_model()
2024-11-12 16:30:18,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:18,436:INFO:Checking exceptions
2024-11-12 16:30:18,436:INFO:Preloading libraries
2024-11-12 16:30:18,436:INFO:Set up data.
2024-11-12 16:30:18,439:INFO:Set up index.
2024-11-12 16:30:18,591:INFO:Initializing predict_model()
2024-11-12 16:30:18,591:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:18,591:INFO:Checking exceptions
2024-11-12 16:30:18,591:INFO:Preloading libraries
2024-11-12 16:30:18,591:INFO:Set up data.
2024-11-12 16:30:18,593:INFO:Set up index.
2024-11-12 16:30:18,755:INFO:Initializing predict_model()
2024-11-12 16:30:18,755:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:18,755:INFO:Checking exceptions
2024-11-12 16:30:18,755:INFO:Preloading libraries
2024-11-12 16:30:18,755:INFO:Set up data.
2024-11-12 16:30:18,758:INFO:Set up index.
2024-11-12 16:30:18,911:INFO:Initializing predict_model()
2024-11-12 16:30:18,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:18,911:INFO:Checking exceptions
2024-11-12 16:30:18,911:INFO:Preloading libraries
2024-11-12 16:30:18,911:INFO:Set up data.
2024-11-12 16:30:18,914:INFO:Set up index.
2024-11-12 16:30:19,073:INFO:Initializing predict_model()
2024-11-12 16:30:19,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:19,073:INFO:Checking exceptions
2024-11-12 16:30:19,073:INFO:Preloading libraries
2024-11-12 16:30:19,073:INFO:Set up data.
2024-11-12 16:30:19,076:INFO:Set up index.
2024-11-12 16:30:19,225:INFO:Initializing predict_model()
2024-11-12 16:30:19,225:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:19,225:INFO:Checking exceptions
2024-11-12 16:30:19,225:INFO:Preloading libraries
2024-11-12 16:30:19,226:INFO:Set up data.
2024-11-12 16:30:19,228:INFO:Set up index.
2024-11-12 16:30:19,374:INFO:Initializing predict_model()
2024-11-12 16:30:19,374:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604F8DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:19,375:INFO:Checking exceptions
2024-11-12 16:30:19,375:INFO:Preloading libraries
2024-11-12 16:30:19,375:INFO:Set up data.
2024-11-12 16:30:19,377:INFO:Set up index.
2024-11-12 16:30:19,530:INFO:Initializing predict_model()
2024-11-12 16:30:19,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:19,530:INFO:Checking exceptions
2024-11-12 16:30:19,530:INFO:Preloading libraries
2024-11-12 16:30:19,530:INFO:Set up data.
2024-11-12 16:30:19,533:INFO:Set up index.
2024-11-12 16:30:19,701:INFO:Initializing predict_model()
2024-11-12 16:30:19,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:19,701:INFO:Checking exceptions
2024-11-12 16:30:19,701:INFO:Preloading libraries
2024-11-12 16:30:19,701:INFO:Set up data.
2024-11-12 16:30:19,704:INFO:Set up index.
2024-11-12 16:30:19,874:INFO:Initializing predict_model()
2024-11-12 16:30:19,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:19,875:INFO:Checking exceptions
2024-11-12 16:30:19,875:INFO:Preloading libraries
2024-11-12 16:30:19,875:INFO:Set up data.
2024-11-12 16:30:19,877:INFO:Set up index.
2024-11-12 16:30:20,033:INFO:Initializing predict_model()
2024-11-12 16:30:20,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:20,033:INFO:Checking exceptions
2024-11-12 16:30:20,033:INFO:Preloading libraries
2024-11-12 16:30:20,033:INFO:Set up data.
2024-11-12 16:30:20,036:INFO:Set up index.
2024-11-12 16:30:20,201:INFO:Initializing predict_model()
2024-11-12 16:30:20,201:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A37051310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:20,201:INFO:Checking exceptions
2024-11-12 16:30:20,201:INFO:Preloading libraries
2024-11-12 16:30:20,201:INFO:Set up data.
2024-11-12 16:30:20,204:INFO:Set up index.
2024-11-12 16:30:20,375:INFO:Initializing predict_model()
2024-11-12 16:30:20,375:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:20,375:INFO:Checking exceptions
2024-11-12 16:30:20,375:INFO:Preloading libraries
2024-11-12 16:30:20,376:INFO:Set up data.
2024-11-12 16:30:20,378:INFO:Set up index.
2024-11-12 16:30:20,534:INFO:Initializing predict_model()
2024-11-12 16:30:20,534:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:20,534:INFO:Checking exceptions
2024-11-12 16:30:20,534:INFO:Preloading libraries
2024-11-12 16:30:20,536:INFO:Set up data.
2024-11-12 16:30:20,538:INFO:Set up index.
2024-11-12 16:30:20,693:INFO:Initializing predict_model()
2024-11-12 16:30:20,693:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:20,693:INFO:Checking exceptions
2024-11-12 16:30:20,693:INFO:Preloading libraries
2024-11-12 16:30:20,693:INFO:Set up data.
2024-11-12 16:30:20,696:INFO:Set up index.
2024-11-12 16:30:20,857:INFO:Initializing predict_model()
2024-11-12 16:30:20,857:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A358F7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:20,857:INFO:Checking exceptions
2024-11-12 16:30:20,857:INFO:Preloading libraries
2024-11-12 16:30:20,857:INFO:Set up data.
2024-11-12 16:30:20,860:INFO:Set up index.
2024-11-12 16:30:21,027:INFO:Initializing predict_model()
2024-11-12 16:30:21,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:21,027:INFO:Checking exceptions
2024-11-12 16:30:21,027:INFO:Preloading libraries
2024-11-12 16:30:21,027:INFO:Set up data.
2024-11-12 16:30:21,030:INFO:Set up index.
2024-11-12 16:30:21,198:INFO:Initializing predict_model()
2024-11-12 16:30:21,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:21,198:INFO:Checking exceptions
2024-11-12 16:30:21,198:INFO:Preloading libraries
2024-11-12 16:30:21,199:INFO:Set up data.
2024-11-12 16:30:21,201:INFO:Set up index.
2024-11-12 16:30:21,360:INFO:Initializing predict_model()
2024-11-12 16:30:21,360:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:21,360:INFO:Checking exceptions
2024-11-12 16:30:21,360:INFO:Preloading libraries
2024-11-12 16:30:21,360:INFO:Set up data.
2024-11-12 16:30:21,363:INFO:Set up index.
2024-11-12 16:30:21,521:INFO:Initializing predict_model()
2024-11-12 16:30:21,521:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:21,521:INFO:Checking exceptions
2024-11-12 16:30:21,521:INFO:Preloading libraries
2024-11-12 16:30:21,521:INFO:Set up data.
2024-11-12 16:30:21,523:INFO:Set up index.
2024-11-12 16:30:21,683:INFO:Initializing predict_model()
2024-11-12 16:30:21,683:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:21,683:INFO:Checking exceptions
2024-11-12 16:30:21,683:INFO:Preloading libraries
2024-11-12 16:30:21,683:INFO:Set up data.
2024-11-12 16:30:21,687:INFO:Set up index.
2024-11-12 16:30:21,856:INFO:Initializing predict_model()
2024-11-12 16:30:21,856:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:21,856:INFO:Checking exceptions
2024-11-12 16:30:21,856:INFO:Preloading libraries
2024-11-12 16:30:21,856:INFO:Set up data.
2024-11-12 16:30:21,858:INFO:Set up index.
2024-11-12 16:30:22,025:INFO:Initializing predict_model()
2024-11-12 16:30:22,025:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:22,025:INFO:Checking exceptions
2024-11-12 16:30:22,025:INFO:Preloading libraries
2024-11-12 16:30:22,025:INFO:Set up data.
2024-11-12 16:30:22,028:INFO:Set up index.
2024-11-12 16:30:22,199:INFO:Initializing predict_model()
2024-11-12 16:30:22,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:22,199:INFO:Checking exceptions
2024-11-12 16:30:22,199:INFO:Preloading libraries
2024-11-12 16:30:22,199:INFO:Set up data.
2024-11-12 16:30:22,202:INFO:Set up index.
2024-11-12 16:30:22,354:INFO:Initializing predict_model()
2024-11-12 16:30:22,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:22,354:INFO:Checking exceptions
2024-11-12 16:30:22,354:INFO:Preloading libraries
2024-11-12 16:30:22,354:INFO:Set up data.
2024-11-12 16:30:22,356:INFO:Set up index.
2024-11-12 16:30:22,586:INFO:Initializing predict_model()
2024-11-12 16:30:22,586:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:22,586:INFO:Checking exceptions
2024-11-12 16:30:22,586:INFO:Preloading libraries
2024-11-12 16:30:22,586:INFO:Set up data.
2024-11-12 16:30:22,591:INFO:Set up index.
2024-11-12 16:30:22,828:INFO:Initializing predict_model()
2024-11-12 16:30:22,828:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A38EB6FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:22,828:INFO:Checking exceptions
2024-11-12 16:30:22,828:INFO:Preloading libraries
2024-11-12 16:30:22,828:INFO:Set up data.
2024-11-12 16:30:22,831:INFO:Set up index.
2024-11-12 16:30:23,023:INFO:Initializing predict_model()
2024-11-12 16:30:23,023:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F1001D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:23,023:INFO:Checking exceptions
2024-11-12 16:30:23,023:INFO:Preloading libraries
2024-11-12 16:30:23,024:INFO:Set up data.
2024-11-12 16:30:23,026:INFO:Set up index.
2024-11-12 16:30:23,241:INFO:Initializing predict_model()
2024-11-12 16:30:23,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:23,241:INFO:Checking exceptions
2024-11-12 16:30:23,241:INFO:Preloading libraries
2024-11-12 16:30:23,241:INFO:Set up data.
2024-11-12 16:30:23,246:INFO:Set up index.
2024-11-12 16:30:23,417:INFO:Initializing predict_model()
2024-11-12 16:30:23,417:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:23,417:INFO:Checking exceptions
2024-11-12 16:30:23,417:INFO:Preloading libraries
2024-11-12 16:30:23,418:INFO:Set up data.
2024-11-12 16:30:23,421:INFO:Set up index.
2024-11-12 16:30:23,582:INFO:Initializing predict_model()
2024-11-12 16:30:23,582:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E1AB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:23,582:INFO:Checking exceptions
2024-11-12 16:30:23,582:INFO:Preloading libraries
2024-11-12 16:30:23,582:INFO:Set up data.
2024-11-12 16:30:23,585:INFO:Set up index.
2024-11-12 16:30:23,743:INFO:Initializing predict_model()
2024-11-12 16:30:23,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4B610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:23,744:INFO:Checking exceptions
2024-11-12 16:30:23,744:INFO:Preloading libraries
2024-11-12 16:30:23,744:INFO:Set up data.
2024-11-12 16:30:23,747:INFO:Set up index.
2024-11-12 16:30:23,908:INFO:Initializing predict_model()
2024-11-12 16:30:23,908:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:23,908:INFO:Checking exceptions
2024-11-12 16:30:23,908:INFO:Preloading libraries
2024-11-12 16:30:23,909:INFO:Set up data.
2024-11-12 16:30:23,911:INFO:Set up index.
2024-11-12 16:30:24,083:INFO:Initializing predict_model()
2024-11-12 16:30:24,083:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:24,083:INFO:Checking exceptions
2024-11-12 16:30:24,083:INFO:Preloading libraries
2024-11-12 16:30:24,083:INFO:Set up data.
2024-11-12 16:30:24,086:INFO:Set up index.
2024-11-12 16:30:24,276:INFO:Initializing predict_model()
2024-11-12 16:30:24,277:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:24,277:INFO:Checking exceptions
2024-11-12 16:30:24,277:INFO:Preloading libraries
2024-11-12 16:30:24,277:INFO:Set up data.
2024-11-12 16:30:24,280:INFO:Set up index.
2024-11-12 16:30:24,443:INFO:Initializing predict_model()
2024-11-12 16:30:24,443:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:24,443:INFO:Checking exceptions
2024-11-12 16:30:24,443:INFO:Preloading libraries
2024-11-12 16:30:24,443:INFO:Set up data.
2024-11-12 16:30:24,446:INFO:Set up index.
2024-11-12 16:30:24,606:INFO:Initializing predict_model()
2024-11-12 16:30:24,606:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:24,606:INFO:Checking exceptions
2024-11-12 16:30:24,606:INFO:Preloading libraries
2024-11-12 16:30:24,606:INFO:Set up data.
2024-11-12 16:30:24,608:INFO:Set up index.
2024-11-12 16:30:24,775:INFO:Initializing predict_model()
2024-11-12 16:30:24,775:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E87C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:24,775:INFO:Checking exceptions
2024-11-12 16:30:24,777:INFO:Preloading libraries
2024-11-12 16:30:24,777:INFO:Set up data.
2024-11-12 16:30:24,779:INFO:Set up index.
2024-11-12 16:30:24,948:INFO:Initializing predict_model()
2024-11-12 16:30:24,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F110190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:24,948:INFO:Checking exceptions
2024-11-12 16:30:24,948:INFO:Preloading libraries
2024-11-12 16:30:24,948:INFO:Set up data.
2024-11-12 16:30:24,951:INFO:Set up index.
2024-11-12 16:30:25,107:INFO:Initializing predict_model()
2024-11-12 16:30:25,107:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:25,107:INFO:Checking exceptions
2024-11-12 16:30:25,107:INFO:Preloading libraries
2024-11-12 16:30:25,108:INFO:Set up data.
2024-11-12 16:30:25,110:INFO:Set up index.
2024-11-12 16:30:25,261:INFO:Initializing predict_model()
2024-11-12 16:30:25,261:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370501D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:25,261:INFO:Checking exceptions
2024-11-12 16:30:25,261:INFO:Preloading libraries
2024-11-12 16:30:25,261:INFO:Set up data.
2024-11-12 16:30:25,263:INFO:Set up index.
2024-11-12 16:30:25,426:INFO:Initializing predict_model()
2024-11-12 16:30:25,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:25,426:INFO:Checking exceptions
2024-11-12 16:30:25,426:INFO:Preloading libraries
2024-11-12 16:30:25,426:INFO:Set up data.
2024-11-12 16:30:25,429:INFO:Set up index.
2024-11-12 16:30:25,592:INFO:Initializing predict_model()
2024-11-12 16:30:25,592:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A386EB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:25,592:INFO:Checking exceptions
2024-11-12 16:30:25,592:INFO:Preloading libraries
2024-11-12 16:30:25,593:INFO:Set up data.
2024-11-12 16:30:25,595:INFO:Set up index.
2024-11-12 16:30:25,762:INFO:Initializing predict_model()
2024-11-12 16:30:25,762:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:25,762:INFO:Checking exceptions
2024-11-12 16:30:25,762:INFO:Preloading libraries
2024-11-12 16:30:25,763:INFO:Set up data.
2024-11-12 16:30:25,765:INFO:Set up index.
2024-11-12 16:30:25,921:INFO:Initializing predict_model()
2024-11-12 16:30:25,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E2E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:25,921:INFO:Checking exceptions
2024-11-12 16:30:25,921:INFO:Preloading libraries
2024-11-12 16:30:25,922:INFO:Set up data.
2024-11-12 16:30:25,924:INFO:Set up index.
2024-11-12 16:30:26,070:INFO:Initializing predict_model()
2024-11-12 16:30:26,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0CB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:26,070:INFO:Checking exceptions
2024-11-12 16:30:26,070:INFO:Preloading libraries
2024-11-12 16:30:26,071:INFO:Set up data.
2024-11-12 16:30:26,073:INFO:Set up index.
2024-11-12 16:30:26,227:INFO:Initializing predict_model()
2024-11-12 16:30:26,227:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AC690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:26,227:INFO:Checking exceptions
2024-11-12 16:30:26,227:INFO:Preloading libraries
2024-11-12 16:30:26,227:INFO:Set up data.
2024-11-12 16:30:26,230:INFO:Set up index.
2024-11-12 16:30:26,398:INFO:Initializing predict_model()
2024-11-12 16:30:26,398:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604DE0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:26,398:INFO:Checking exceptions
2024-11-12 16:30:26,398:INFO:Preloading libraries
2024-11-12 16:30:26,398:INFO:Set up data.
2024-11-12 16:30:26,401:INFO:Set up index.
2024-11-12 16:30:26,572:INFO:Initializing predict_model()
2024-11-12 16:30:26,572:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:26,572:INFO:Checking exceptions
2024-11-12 16:30:26,572:INFO:Preloading libraries
2024-11-12 16:30:26,572:INFO:Set up data.
2024-11-12 16:30:26,575:INFO:Set up index.
2024-11-12 16:30:26,727:INFO:Initializing predict_model()
2024-11-12 16:30:26,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E6A50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:26,727:INFO:Checking exceptions
2024-11-12 16:30:26,727:INFO:Preloading libraries
2024-11-12 16:30:26,727:INFO:Set up data.
2024-11-12 16:30:26,729:INFO:Set up index.
2024-11-12 16:30:26,882:INFO:Initializing predict_model()
2024-11-12 16:30:26,882:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:26,882:INFO:Checking exceptions
2024-11-12 16:30:26,882:INFO:Preloading libraries
2024-11-12 16:30:26,882:INFO:Set up data.
2024-11-12 16:30:26,885:INFO:Set up index.
2024-11-12 16:30:27,054:INFO:Initializing predict_model()
2024-11-12 16:30:27,054:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F110190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:27,054:INFO:Checking exceptions
2024-11-12 16:30:27,054:INFO:Preloading libraries
2024-11-12 16:30:27,054:INFO:Set up data.
2024-11-12 16:30:27,056:INFO:Set up index.
2024-11-12 16:30:27,224:INFO:Initializing predict_model()
2024-11-12 16:30:27,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BC9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:27,224:INFO:Checking exceptions
2024-11-12 16:30:27,224:INFO:Preloading libraries
2024-11-12 16:30:27,224:INFO:Set up data.
2024-11-12 16:30:27,228:INFO:Set up index.
2024-11-12 16:30:27,432:INFO:Initializing predict_model()
2024-11-12 16:30:27,432:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36969C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:27,432:INFO:Checking exceptions
2024-11-12 16:30:27,432:INFO:Preloading libraries
2024-11-12 16:30:27,433:INFO:Set up data.
2024-11-12 16:30:27,435:INFO:Set up index.
2024-11-12 16:30:27,615:INFO:Initializing predict_model()
2024-11-12 16:30:27,615:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2ACF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:27,615:INFO:Checking exceptions
2024-11-12 16:30:27,616:INFO:Preloading libraries
2024-11-12 16:30:27,616:INFO:Set up data.
2024-11-12 16:30:27,618:INFO:Set up index.
2024-11-12 16:30:27,792:INFO:Initializing predict_model()
2024-11-12 16:30:27,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:27,792:INFO:Checking exceptions
2024-11-12 16:30:27,792:INFO:Preloading libraries
2024-11-12 16:30:27,792:INFO:Set up data.
2024-11-12 16:30:27,794:INFO:Set up index.
2024-11-12 16:30:27,963:INFO:Initializing predict_model()
2024-11-12 16:30:27,963:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E6A50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:27,963:INFO:Checking exceptions
2024-11-12 16:30:27,963:INFO:Preloading libraries
2024-11-12 16:30:27,965:INFO:Set up data.
2024-11-12 16:30:27,967:INFO:Set up index.
2024-11-12 16:30:28,132:INFO:Initializing predict_model()
2024-11-12 16:30:28,132:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6041FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:28,132:INFO:Checking exceptions
2024-11-12 16:30:28,132:INFO:Preloading libraries
2024-11-12 16:30:28,132:INFO:Set up data.
2024-11-12 16:30:28,135:INFO:Set up index.
2024-11-12 16:30:28,294:INFO:Initializing predict_model()
2024-11-12 16:30:28,294:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32D04E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:28,294:INFO:Checking exceptions
2024-11-12 16:30:28,294:INFO:Preloading libraries
2024-11-12 16:30:28,294:INFO:Set up data.
2024-11-12 16:30:28,296:INFO:Set up index.
2024-11-12 16:30:28,459:INFO:Initializing predict_model()
2024-11-12 16:30:28,459:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2AD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:28,459:INFO:Checking exceptions
2024-11-12 16:30:28,459:INFO:Preloading libraries
2024-11-12 16:30:28,459:INFO:Set up data.
2024-11-12 16:30:28,462:INFO:Set up index.
2024-11-12 16:30:28,639:INFO:Initializing predict_model()
2024-11-12 16:30:28,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:28,639:INFO:Checking exceptions
2024-11-12 16:30:28,639:INFO:Preloading libraries
2024-11-12 16:30:28,639:INFO:Set up data.
2024-11-12 16:30:28,643:INFO:Set up index.
2024-11-12 16:30:28,806:INFO:Initializing predict_model()
2024-11-12 16:30:28,806:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370D6590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:28,806:INFO:Checking exceptions
2024-11-12 16:30:28,806:INFO:Preloading libraries
2024-11-12 16:30:28,806:INFO:Set up data.
2024-11-12 16:30:28,809:INFO:Set up index.
2024-11-12 16:30:28,970:INFO:Initializing predict_model()
2024-11-12 16:30:28,970:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604AEA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:28,971:INFO:Checking exceptions
2024-11-12 16:30:28,971:INFO:Preloading libraries
2024-11-12 16:30:28,971:INFO:Set up data.
2024-11-12 16:30:28,973:INFO:Set up index.
2024-11-12 16:30:29,138:INFO:Initializing predict_model()
2024-11-12 16:30:29,138:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:29,139:INFO:Checking exceptions
2024-11-12 16:30:29,139:INFO:Preloading libraries
2024-11-12 16:30:29,139:INFO:Set up data.
2024-11-12 16:30:29,142:INFO:Set up index.
2024-11-12 16:30:29,331:INFO:Initializing predict_model()
2024-11-12 16:30:29,331:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:29,331:INFO:Checking exceptions
2024-11-12 16:30:29,331:INFO:Preloading libraries
2024-11-12 16:30:29,331:INFO:Set up data.
2024-11-12 16:30:29,334:INFO:Set up index.
2024-11-12 16:30:29,515:INFO:Initializing predict_model()
2024-11-12 16:30:29,515:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:29,515:INFO:Checking exceptions
2024-11-12 16:30:29,515:INFO:Preloading libraries
2024-11-12 16:30:29,515:INFO:Set up data.
2024-11-12 16:30:29,519:INFO:Set up index.
2024-11-12 16:30:29,691:INFO:Initializing predict_model()
2024-11-12 16:30:29,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:29,691:INFO:Checking exceptions
2024-11-12 16:30:29,691:INFO:Preloading libraries
2024-11-12 16:30:29,691:INFO:Set up data.
2024-11-12 16:30:29,694:INFO:Set up index.
2024-11-12 16:30:29,852:INFO:Initializing predict_model()
2024-11-12 16:30:29,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:29,852:INFO:Checking exceptions
2024-11-12 16:30:29,852:INFO:Preloading libraries
2024-11-12 16:30:29,854:INFO:Set up data.
2024-11-12 16:30:29,855:INFO:Set up index.
2024-11-12 16:30:30,019:INFO:Initializing predict_model()
2024-11-12 16:30:30,019:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604DFDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:30,019:INFO:Checking exceptions
2024-11-12 16:30:30,019:INFO:Preloading libraries
2024-11-12 16:30:30,019:INFO:Set up data.
2024-11-12 16:30:30,022:INFO:Set up index.
2024-11-12 16:30:30,182:INFO:Initializing predict_model()
2024-11-12 16:30:30,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:30,182:INFO:Checking exceptions
2024-11-12 16:30:30,182:INFO:Preloading libraries
2024-11-12 16:30:30,183:INFO:Set up data.
2024-11-12 16:30:30,185:INFO:Set up index.
2024-11-12 16:30:30,356:INFO:Initializing predict_model()
2024-11-12 16:30:30,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A331D5750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:30,356:INFO:Checking exceptions
2024-11-12 16:30:30,356:INFO:Preloading libraries
2024-11-12 16:30:30,356:INFO:Set up data.
2024-11-12 16:30:30,359:INFO:Set up index.
2024-11-12 16:30:30,518:INFO:Initializing predict_model()
2024-11-12 16:30:30,518:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2BFB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:30,518:INFO:Checking exceptions
2024-11-12 16:30:30,518:INFO:Preloading libraries
2024-11-12 16:30:30,518:INFO:Set up data.
2024-11-12 16:30:30,522:INFO:Set up index.
2024-11-12 16:30:30,681:INFO:Initializing predict_model()
2024-11-12 16:30:30,681:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:30,681:INFO:Checking exceptions
2024-11-12 16:30:30,681:INFO:Preloading libraries
2024-11-12 16:30:30,681:INFO:Set up data.
2024-11-12 16:30:30,683:INFO:Set up index.
2024-11-12 16:30:30,848:INFO:Initializing predict_model()
2024-11-12 16:30:30,848:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:30,848:INFO:Checking exceptions
2024-11-12 16:30:30,848:INFO:Preloading libraries
2024-11-12 16:30:30,849:INFO:Set up data.
2024-11-12 16:30:30,851:INFO:Set up index.
2024-11-12 16:30:31,022:INFO:Initializing predict_model()
2024-11-12 16:30:31,024:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA05F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:31,024:INFO:Checking exceptions
2024-11-12 16:30:31,024:INFO:Preloading libraries
2024-11-12 16:30:31,024:INFO:Set up data.
2024-11-12 16:30:31,026:INFO:Set up index.
2024-11-12 16:30:31,188:INFO:Initializing predict_model()
2024-11-12 16:30:31,188:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E61A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:31,188:INFO:Checking exceptions
2024-11-12 16:30:31,188:INFO:Preloading libraries
2024-11-12 16:30:31,188:INFO:Set up data.
2024-11-12 16:30:31,191:INFO:Set up index.
2024-11-12 16:30:31,349:INFO:Initializing predict_model()
2024-11-12 16:30:31,349:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:31,349:INFO:Checking exceptions
2024-11-12 16:30:31,349:INFO:Preloading libraries
2024-11-12 16:30:31,349:INFO:Set up data.
2024-11-12 16:30:31,352:INFO:Set up index.
2024-11-12 16:30:31,526:INFO:Initializing predict_model()
2024-11-12 16:30:31,526:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32CAB310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:31,526:INFO:Checking exceptions
2024-11-12 16:30:31,526:INFO:Preloading libraries
2024-11-12 16:30:31,526:INFO:Set up data.
2024-11-12 16:30:31,529:INFO:Set up index.
2024-11-12 16:30:31,702:INFO:Initializing predict_model()
2024-11-12 16:30:31,702:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A604B0C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:31,702:INFO:Checking exceptions
2024-11-12 16:30:31,702:INFO:Preloading libraries
2024-11-12 16:30:31,702:INFO:Set up data.
2024-11-12 16:30:31,705:INFO:Set up index.
2024-11-12 16:30:31,863:INFO:Initializing predict_model()
2024-11-12 16:30:31,863:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:31,863:INFO:Checking exceptions
2024-11-12 16:30:31,863:INFO:Preloading libraries
2024-11-12 16:30:31,863:INFO:Set up data.
2024-11-12 16:30:31,866:INFO:Set up index.
2024-11-12 16:30:32,020:INFO:Initializing predict_model()
2024-11-12 16:30:32,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E3BE350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:32,020:INFO:Checking exceptions
2024-11-12 16:30:32,020:INFO:Preloading libraries
2024-11-12 16:30:32,021:INFO:Set up data.
2024-11-12 16:30:32,023:INFO:Set up index.
2024-11-12 16:30:32,232:INFO:Initializing predict_model()
2024-11-12 16:30:32,232:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:32,232:INFO:Checking exceptions
2024-11-12 16:30:32,232:INFO:Preloading libraries
2024-11-12 16:30:32,233:INFO:Set up data.
2024-11-12 16:30:32,236:INFO:Set up index.
2024-11-12 16:30:32,389:INFO:Initializing predict_model()
2024-11-12 16:30:32,389:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:32,389:INFO:Checking exceptions
2024-11-12 16:30:32,389:INFO:Preloading libraries
2024-11-12 16:30:32,389:INFO:Set up data.
2024-11-12 16:30:32,392:INFO:Set up index.
2024-11-12 16:30:32,553:INFO:Initializing predict_model()
2024-11-12 16:30:32,553:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F359650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:32,553:INFO:Checking exceptions
2024-11-12 16:30:32,553:INFO:Preloading libraries
2024-11-12 16:30:32,553:INFO:Set up data.
2024-11-12 16:30:32,556:INFO:Set up index.
2024-11-12 16:30:32,734:INFO:Initializing predict_model()
2024-11-12 16:30:32,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:32,734:INFO:Checking exceptions
2024-11-12 16:30:32,734:INFO:Preloading libraries
2024-11-12 16:30:32,734:INFO:Set up data.
2024-11-12 16:30:32,738:INFO:Set up index.
2024-11-12 16:30:32,903:INFO:Initializing predict_model()
2024-11-12 16:30:32,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:32,903:INFO:Checking exceptions
2024-11-12 16:30:32,903:INFO:Preloading libraries
2024-11-12 16:30:32,903:INFO:Set up data.
2024-11-12 16:30:32,906:INFO:Set up index.
2024-11-12 16:30:33,077:INFO:Initializing predict_model()
2024-11-12 16:30:33,077:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A5FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:33,077:INFO:Checking exceptions
2024-11-12 16:30:33,077:INFO:Preloading libraries
2024-11-12 16:30:33,077:INFO:Set up data.
2024-11-12 16:30:33,080:INFO:Set up index.
2024-11-12 16:30:33,245:INFO:Initializing predict_model()
2024-11-12 16:30:33,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:33,245:INFO:Checking exceptions
2024-11-12 16:30:33,245:INFO:Preloading libraries
2024-11-12 16:30:33,245:INFO:Set up data.
2024-11-12 16:30:33,248:INFO:Set up index.
2024-11-12 16:30:33,407:INFO:Initializing predict_model()
2024-11-12 16:30:33,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF500D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:33,407:INFO:Checking exceptions
2024-11-12 16:30:33,407:INFO:Preloading libraries
2024-11-12 16:30:33,407:INFO:Set up data.
2024-11-12 16:30:33,410:INFO:Set up index.
2024-11-12 16:30:33,573:INFO:Initializing predict_model()
2024-11-12 16:30:33,573:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:33,573:INFO:Checking exceptions
2024-11-12 16:30:33,573:INFO:Preloading libraries
2024-11-12 16:30:33,574:INFO:Set up data.
2024-11-12 16:30:33,576:INFO:Set up index.
2024-11-12 16:30:33,735:INFO:Initializing predict_model()
2024-11-12 16:30:33,735:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6056D190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:33,735:INFO:Checking exceptions
2024-11-12 16:30:33,735:INFO:Preloading libraries
2024-11-12 16:30:33,735:INFO:Set up data.
2024-11-12 16:30:33,737:INFO:Set up index.
2024-11-12 16:30:33,913:INFO:Initializing predict_model()
2024-11-12 16:30:33,913:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370B6E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:33,913:INFO:Checking exceptions
2024-11-12 16:30:33,913:INFO:Preloading libraries
2024-11-12 16:30:33,914:INFO:Set up data.
2024-11-12 16:30:33,916:INFO:Set up index.
2024-11-12 16:30:34,073:INFO:Initializing predict_model()
2024-11-12 16:30:34,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:34,073:INFO:Checking exceptions
2024-11-12 16:30:34,073:INFO:Preloading libraries
2024-11-12 16:30:34,073:INFO:Set up data.
2024-11-12 16:30:34,077:INFO:Set up index.
2024-11-12 16:30:34,238:INFO:Initializing predict_model()
2024-11-12 16:30:34,238:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5E7DD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:34,238:INFO:Checking exceptions
2024-11-12 16:30:34,238:INFO:Preloading libraries
2024-11-12 16:30:34,238:INFO:Set up data.
2024-11-12 16:30:34,240:INFO:Set up index.
2024-11-12 16:30:34,407:INFO:Initializing predict_model()
2024-11-12 16:30:34,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:34,407:INFO:Checking exceptions
2024-11-12 16:30:34,407:INFO:Preloading libraries
2024-11-12 16:30:34,407:INFO:Set up data.
2024-11-12 16:30:34,409:INFO:Set up index.
2024-11-12 16:30:34,591:INFO:Initializing predict_model()
2024-11-12 16:30:34,591:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A9F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:34,591:INFO:Checking exceptions
2024-11-12 16:30:34,591:INFO:Preloading libraries
2024-11-12 16:30:34,591:INFO:Set up data.
2024-11-12 16:30:34,594:INFO:Set up index.
2024-11-12 16:30:34,774:INFO:Initializing predict_model()
2024-11-12 16:30:34,775:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:34,775:INFO:Checking exceptions
2024-11-12 16:30:34,775:INFO:Preloading libraries
2024-11-12 16:30:34,775:INFO:Set up data.
2024-11-12 16:30:34,778:INFO:Set up index.
2024-11-12 16:30:34,947:INFO:Initializing predict_model()
2024-11-12 16:30:34,947:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2C96D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:34,947:INFO:Checking exceptions
2024-11-12 16:30:34,947:INFO:Preloading libraries
2024-11-12 16:30:34,947:INFO:Set up data.
2024-11-12 16:30:34,950:INFO:Set up index.
2024-11-12 16:30:35,117:INFO:Initializing predict_model()
2024-11-12 16:30:35,117:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F322A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:35,117:INFO:Checking exceptions
2024-11-12 16:30:35,117:INFO:Preloading libraries
2024-11-12 16:30:35,118:INFO:Set up data.
2024-11-12 16:30:35,122:INFO:Set up index.
2024-11-12 16:30:35,298:INFO:Initializing predict_model()
2024-11-12 16:30:35,298:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:35,299:INFO:Checking exceptions
2024-11-12 16:30:35,299:INFO:Preloading libraries
2024-11-12 16:30:35,299:INFO:Set up data.
2024-11-12 16:30:35,302:INFO:Set up index.
2024-11-12 16:30:35,466:INFO:Initializing predict_model()
2024-11-12 16:30:35,466:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F110790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:35,466:INFO:Checking exceptions
2024-11-12 16:30:35,466:INFO:Preloading libraries
2024-11-12 16:30:35,466:INFO:Set up data.
2024-11-12 16:30:35,470:INFO:Set up index.
2024-11-12 16:30:35,619:INFO:Initializing predict_model()
2024-11-12 16:30:35,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39A328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:35,620:INFO:Checking exceptions
2024-11-12 16:30:35,620:INFO:Preloading libraries
2024-11-12 16:30:35,620:INFO:Set up data.
2024-11-12 16:30:35,622:INFO:Set up index.
2024-11-12 16:30:35,771:INFO:Initializing predict_model()
2024-11-12 16:30:35,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F10EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:35,772:INFO:Checking exceptions
2024-11-12 16:30:35,772:INFO:Preloading libraries
2024-11-12 16:30:35,772:INFO:Set up data.
2024-11-12 16:30:35,775:INFO:Set up index.
2024-11-12 16:30:35,931:INFO:Initializing predict_model()
2024-11-12 16:30:35,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:35,932:INFO:Checking exceptions
2024-11-12 16:30:35,932:INFO:Preloading libraries
2024-11-12 16:30:35,932:INFO:Set up data.
2024-11-12 16:30:35,935:INFO:Set up index.
2024-11-12 16:30:36,107:INFO:Initializing predict_model()
2024-11-12 16:30:36,108:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:36,108:INFO:Checking exceptions
2024-11-12 16:30:36,108:INFO:Preloading libraries
2024-11-12 16:30:36,108:INFO:Set up data.
2024-11-12 16:30:36,110:INFO:Set up index.
2024-11-12 16:30:36,273:INFO:Initializing predict_model()
2024-11-12 16:30:36,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:36,273:INFO:Checking exceptions
2024-11-12 16:30:36,273:INFO:Preloading libraries
2024-11-12 16:30:36,273:INFO:Set up data.
2024-11-12 16:30:36,276:INFO:Set up index.
2024-11-12 16:30:36,443:INFO:Initializing predict_model()
2024-11-12 16:30:36,443:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E19B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:36,443:INFO:Checking exceptions
2024-11-12 16:30:36,443:INFO:Preloading libraries
2024-11-12 16:30:36,444:INFO:Set up data.
2024-11-12 16:30:36,446:INFO:Set up index.
2024-11-12 16:30:36,607:INFO:Initializing predict_model()
2024-11-12 16:30:36,607:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A605D6190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:36,607:INFO:Checking exceptions
2024-11-12 16:30:36,607:INFO:Preloading libraries
2024-11-12 16:30:36,607:INFO:Set up data.
2024-11-12 16:30:36,610:INFO:Set up index.
2024-11-12 16:30:36,777:INFO:Initializing predict_model()
2024-11-12 16:30:36,778:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:36,778:INFO:Checking exceptions
2024-11-12 16:30:36,778:INFO:Preloading libraries
2024-11-12 16:30:36,778:INFO:Set up data.
2024-11-12 16:30:36,781:INFO:Set up index.
2024-11-12 16:30:36,943:INFO:Initializing predict_model()
2024-11-12 16:30:36,943:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:36,943:INFO:Checking exceptions
2024-11-12 16:30:36,943:INFO:Preloading libraries
2024-11-12 16:30:36,943:INFO:Set up data.
2024-11-12 16:30:36,945:INFO:Set up index.
2024-11-12 16:30:37,098:INFO:Initializing predict_model()
2024-11-12 16:30:37,098:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A358F7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:37,098:INFO:Checking exceptions
2024-11-12 16:30:37,098:INFO:Preloading libraries
2024-11-12 16:30:37,099:INFO:Set up data.
2024-11-12 16:30:37,101:INFO:Set up index.
2024-11-12 16:30:37,254:INFO:Initializing predict_model()
2024-11-12 16:30:37,254:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED4BF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:37,254:INFO:Checking exceptions
2024-11-12 16:30:37,254:INFO:Preloading libraries
2024-11-12 16:30:37,254:INFO:Set up data.
2024-11-12 16:30:37,258:INFO:Set up index.
2024-11-12 16:30:37,422:INFO:Initializing predict_model()
2024-11-12 16:30:37,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A35A8CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:37,422:INFO:Checking exceptions
2024-11-12 16:30:37,423:INFO:Preloading libraries
2024-11-12 16:30:37,423:INFO:Set up data.
2024-11-12 16:30:37,425:INFO:Set up index.
2024-11-12 16:30:37,584:INFO:Initializing predict_model()
2024-11-12 16:30:37,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39706C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:37,584:INFO:Checking exceptions
2024-11-12 16:30:37,584:INFO:Preloading libraries
2024-11-12 16:30:37,584:INFO:Set up data.
2024-11-12 16:30:37,587:INFO:Set up index.
2024-11-12 16:30:37,748:INFO:Initializing predict_model()
2024-11-12 16:30:37,748:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CBC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:37,748:INFO:Checking exceptions
2024-11-12 16:30:37,748:INFO:Preloading libraries
2024-11-12 16:30:37,748:INFO:Set up data.
2024-11-12 16:30:37,751:INFO:Set up index.
2024-11-12 16:30:37,909:INFO:Initializing predict_model()
2024-11-12 16:30:37,909:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A370D4C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:37,909:INFO:Checking exceptions
2024-11-12 16:30:37,909:INFO:Preloading libraries
2024-11-12 16:30:37,910:INFO:Set up data.
2024-11-12 16:30:37,912:INFO:Set up index.
2024-11-12 16:30:38,074:INFO:Initializing predict_model()
2024-11-12 16:30:38,074:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A6047A650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:38,074:INFO:Checking exceptions
2024-11-12 16:30:38,074:INFO:Preloading libraries
2024-11-12 16:30:38,075:INFO:Set up data.
2024-11-12 16:30:38,078:INFO:Set up index.
2024-11-12 16:30:38,235:INFO:Initializing predict_model()
2024-11-12 16:30:38,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F32BB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:38,236:INFO:Checking exceptions
2024-11-12 16:30:38,236:INFO:Preloading libraries
2024-11-12 16:30:38,236:INFO:Set up data.
2024-11-12 16:30:38,239:INFO:Set up index.
2024-11-12 16:30:38,388:INFO:Initializing predict_model()
2024-11-12 16:30:38,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32F04690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:38,388:INFO:Checking exceptions
2024-11-12 16:30:38,388:INFO:Preloading libraries
2024-11-12 16:30:38,389:INFO:Set up data.
2024-11-12 16:30:38,391:INFO:Set up index.
2024-11-12 16:30:38,548:INFO:Initializing predict_model()
2024-11-12 16:30:38,548:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A32EABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:38,548:INFO:Checking exceptions
2024-11-12 16:30:38,548:INFO:Preloading libraries
2024-11-12 16:30:38,548:INFO:Set up data.
2024-11-12 16:30:38,550:INFO:Set up index.
2024-11-12 16:30:38,713:INFO:Initializing predict_model()
2024-11-12 16:30:38,713:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EE4EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:38,713:INFO:Checking exceptions
2024-11-12 16:30:38,713:INFO:Preloading libraries
2024-11-12 16:30:38,713:INFO:Set up data.
2024-11-12 16:30:38,716:INFO:Set up index.
2024-11-12 16:30:38,869:INFO:Initializing predict_model()
2024-11-12 16:30:38,871:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2A49D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:38,871:INFO:Checking exceptions
2024-11-12 16:30:38,871:INFO:Preloading libraries
2024-11-12 16:30:38,871:INFO:Set up data.
2024-11-12 16:30:38,873:INFO:Set up index.
2024-11-12 16:30:39,027:INFO:Initializing predict_model()
2024-11-12 16:30:39,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A358F7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:39,028:INFO:Checking exceptions
2024-11-12 16:30:39,028:INFO:Preloading libraries
2024-11-12 16:30:39,028:INFO:Set up data.
2024-11-12 16:30:39,030:INFO:Set up index.
2024-11-12 16:30:39,199:INFO:Initializing predict_model()
2024-11-12 16:30:39,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F2CF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:39,199:INFO:Checking exceptions
2024-11-12 16:30:39,199:INFO:Preloading libraries
2024-11-12 16:30:39,200:INFO:Set up data.
2024-11-12 16:30:39,202:INFO:Set up index.
2024-11-12 16:30:39,369:INFO:Initializing predict_model()
2024-11-12 16:30:39,369:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:39,369:INFO:Checking exceptions
2024-11-12 16:30:39,369:INFO:Preloading libraries
2024-11-12 16:30:39,369:INFO:Set up data.
2024-11-12 16:30:39,372:INFO:Set up index.
2024-11-12 16:30:39,524:INFO:Initializing predict_model()
2024-11-12 16:30:39,524:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A608A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:39,525:INFO:Checking exceptions
2024-11-12 16:30:39,525:INFO:Preloading libraries
2024-11-12 16:30:39,525:INFO:Set up data.
2024-11-12 16:30:39,528:INFO:Set up index.
2024-11-12 16:30:39,681:INFO:Initializing predict_model()
2024-11-12 16:30:39,681:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EA060D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:39,681:INFO:Checking exceptions
2024-11-12 16:30:39,681:INFO:Preloading libraries
2024-11-12 16:30:39,681:INFO:Set up data.
2024-11-12 16:30:39,684:INFO:Set up index.
2024-11-12 16:30:39,845:INFO:Initializing predict_model()
2024-11-12 16:30:39,845:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF2FED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:39,845:INFO:Checking exceptions
2024-11-12 16:30:39,845:INFO:Preloading libraries
2024-11-12 16:30:39,845:INFO:Set up data.
2024-11-12 16:30:39,848:INFO:Set up index.
2024-11-12 16:30:40,013:INFO:Initializing predict_model()
2024-11-12 16:30:40,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:40,013:INFO:Checking exceptions
2024-11-12 16:30:40,013:INFO:Preloading libraries
2024-11-12 16:30:40,014:INFO:Set up data.
2024-11-12 16:30:40,016:INFO:Set up index.
2024-11-12 16:30:40,169:INFO:Initializing predict_model()
2024-11-12 16:30:40,169:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:40,169:INFO:Checking exceptions
2024-11-12 16:30:40,169:INFO:Preloading libraries
2024-11-12 16:30:40,169:INFO:Set up data.
2024-11-12 16:30:40,172:INFO:Set up index.
2024-11-12 16:30:40,328:INFO:Initializing predict_model()
2024-11-12 16:30:40,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5ED64410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:40,328:INFO:Checking exceptions
2024-11-12 16:30:40,328:INFO:Preloading libraries
2024-11-12 16:30:40,328:INFO:Set up data.
2024-11-12 16:30:40,331:INFO:Set up index.
2024-11-12 16:30:40,484:INFO:Initializing predict_model()
2024-11-12 16:30:40,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:40,484:INFO:Checking exceptions
2024-11-12 16:30:40,484:INFO:Preloading libraries
2024-11-12 16:30:40,485:INFO:Set up data.
2024-11-12 16:30:40,487:INFO:Set up index.
2024-11-12 16:30:40,648:INFO:Initializing predict_model()
2024-11-12 16:30:40,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36E3C090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:40,649:INFO:Checking exceptions
2024-11-12 16:30:40,649:INFO:Preloading libraries
2024-11-12 16:30:40,649:INFO:Set up data.
2024-11-12 16:30:40,651:INFO:Set up index.
2024-11-12 16:30:40,817:INFO:Initializing predict_model()
2024-11-12 16:30:40,817:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A358F7E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:40,817:INFO:Checking exceptions
2024-11-12 16:30:40,817:INFO:Preloading libraries
2024-11-12 16:30:40,818:INFO:Set up data.
2024-11-12 16:30:40,820:INFO:Set up index.
2024-11-12 16:30:40,983:INFO:Initializing predict_model()
2024-11-12 16:30:40,983:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F0D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:40,983:INFO:Checking exceptions
2024-11-12 16:30:40,983:INFO:Preloading libraries
2024-11-12 16:30:40,983:INFO:Set up data.
2024-11-12 16:30:40,986:INFO:Set up index.
2024-11-12 16:30:41,148:INFO:Initializing predict_model()
2024-11-12 16:30:41,148:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39DD9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:41,148:INFO:Checking exceptions
2024-11-12 16:30:41,148:INFO:Preloading libraries
2024-11-12 16:30:41,148:INFO:Set up data.
2024-11-12 16:30:41,151:INFO:Set up index.
2024-11-12 16:30:41,324:INFO:Initializing predict_model()
2024-11-12 16:30:41,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5F327B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:41,324:INFO:Checking exceptions
2024-11-12 16:30:41,324:INFO:Preloading libraries
2024-11-12 16:30:41,324:INFO:Set up data.
2024-11-12 16:30:41,327:INFO:Set up index.
2024-11-12 16:30:41,484:INFO:Initializing predict_model()
2024-11-12 16:30:41,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A59CBE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:41,484:INFO:Checking exceptions
2024-11-12 16:30:41,484:INFO:Preloading libraries
2024-11-12 16:30:41,484:INFO:Set up data.
2024-11-12 16:30:41,487:INFO:Set up index.
2024-11-12 16:30:41,636:INFO:Initializing predict_model()
2024-11-12 16:30:41,637:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A36FB4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:41,637:INFO:Checking exceptions
2024-11-12 16:30:41,637:INFO:Preloading libraries
2024-11-12 16:30:41,637:INFO:Set up data.
2024-11-12 16:30:41,640:INFO:Set up index.
2024-11-12 16:30:41,802:INFO:Initializing predict_model()
2024-11-12 16:30:41,802:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A39B17750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:41,802:INFO:Checking exceptions
2024-11-12 16:30:41,802:INFO:Preloading libraries
2024-11-12 16:30:41,802:INFO:Set up data.
2024-11-12 16:30:41,805:INFO:Set up index.
2024-11-12 16:30:41,972:INFO:Initializing predict_model()
2024-11-12 16:30:41,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A5EF50450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp', 'atemp',
                                             'hum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingd...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.7))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                               feature_fraction=0.8, learning_rate=0.01,
                               min_child_samples=91, min_split_gain=0.4,
                               n_estimators=160, n_jobs=-1, num_leaves=150,
                               random_state=1603, reg_alpha=0.5,
                               reg_lambda=1e-06))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A3582F100>)
2024-11-12 16:30:41,978:INFO:Checking exceptions
2024-11-12 16:30:41,978:INFO:Preloading libraries
2024-11-12 16:30:41,978:INFO:Set up data.
2024-11-12 16:30:41,982:INFO:Set up index.
2024-11-12 18:51:40,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:51:40,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:51:40,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:51:40,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:51:43,486:INFO:Initializing load_model()
2024-11-12 18:51:43,486:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:53:32,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:53:32,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:53:32,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:53:32,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 18:53:33,674:INFO:Initializing load_model()
2024-11-12 18:53:33,674:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:53:33,863:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:54:12,088:INFO:Initializing load_model()
2024-11-12 18:54:12,088:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:54:12,119:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:54:18,118:INFO:Initializing load_model()
2024-11-12 18:54:18,119:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:54:18,175:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:57:05,235:INFO:Initializing load_model()
2024-11-12 18:57:05,235:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:57:05,281:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:57:08,442:INFO:Initializing load_model()
2024-11-12 18:57:08,442:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:57:08,483:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:58:24,617:INFO:Initializing load_model()
2024-11-12 18:58:24,617:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:58:24,648:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:58:35,750:INFO:Initializing load_model()
2024-11-12 18:58:35,750:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:58:35,786:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:58:37,931:INFO:Initializing load_model()
2024-11-12 18:58:37,931:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:58:37,959:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:58:50,699:INFO:Initializing load_model()
2024-11-12 18:58:50,699:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:58:50,731:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 18:58:52,224:INFO:Initializing load_model()
2024-11-12 18:58:52,224:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 18:58:52,259:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:03:10,585:INFO:Initializing load_model()
2024-11-12 19:03:10,585:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:03:10,625:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:04:53,416:INFO:Initializing load_model()
2024-11-12 19:04:53,416:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:04:53,437:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:04:54,682:INFO:Initializing load_model()
2024-11-12 19:04:54,682:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:04:54,715:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:05:06,372:INFO:Initializing load_model()
2024-11-12 19:05:06,372:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:05:06,404:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:05:07,490:INFO:Initializing load_model()
2024-11-12 19:05:07,490:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:05:07,530:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:05:26,728:INFO:Initializing load_model()
2024-11-12 19:05:26,728:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:05:26,737:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:05:27,839:INFO:Initializing load_model()
2024-11-12 19:05:27,839:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:05:27,863:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:06:10,152:INFO:Initializing load_model()
2024-11-12 19:06:10,152:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:06:10,169:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:06:14,697:INFO:Initializing load_model()
2024-11-12 19:06:14,697:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:06:14,727:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:06:16,339:INFO:Initializing load_model()
2024-11-12 19:06:16,339:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:06:16,379:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:06:16,574:INFO:Initializing predict_model()
2024-11-12 19:06:16,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273DD7FD610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273B99D19E0>)
2024-11-12 19:06:16,575:INFO:Checking exceptions
2024-11-12 19:06:16,575:INFO:Preloading libraries
2024-11-12 19:06:16,583:INFO:Set up data.
2024-11-12 19:06:16,594:INFO:Set up index.
2024-11-12 19:08:20,925:INFO:Initializing load_model()
2024-11-12 19:08:20,925:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:08:20,973:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:08:58,708:INFO:Initializing load_model()
2024-11-12 19:08:58,708:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:08:58,732:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:09:01,778:INFO:Initializing load_model()
2024-11-12 19:09:01,778:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:09:01,795:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:09:03,756:INFO:Initializing load_model()
2024-11-12 19:09:03,756:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:09:03,789:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:09:06,310:INFO:Initializing load_model()
2024-11-12 19:09:06,310:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:09:06,342:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:09:09,440:INFO:Initializing load_model()
2024-11-12 19:09:09,440:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:09:09,470:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:09:10,588:INFO:Initializing load_model()
2024-11-12 19:09:10,588:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:09:10,635:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:09:10,783:INFO:Initializing predict_model()
2024-11-12 19:09:10,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273DD5D8DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273DDB6B740>)
2024-11-12 19:09:10,783:INFO:Checking exceptions
2024-11-12 19:09:10,783:INFO:Preloading libraries
2024-11-12 19:09:10,783:INFO:Set up data.
2024-11-12 19:09:10,801:INFO:Set up index.
2024-11-12 19:14:52,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 19:14:52,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 19:14:52,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 19:14:52,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-12 19:14:53,893:INFO:Initializing load_model()
2024-11-12 19:14:53,893:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:14:53,975:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:14:54,054:INFO:Initializing load_model()
2024-11-12 19:14:54,058:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:14:54,063:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:14:59,507:INFO:Initializing predict_model()
2024-11-12 19:14:59,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C39BD53690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C39D2ABBA0>)
2024-11-12 19:14:59,507:INFO:Checking exceptions
2024-11-12 19:14:59,507:INFO:Preloading libraries
2024-11-12 19:14:59,507:INFO:Set up data.
2024-11-12 19:14:59,513:INFO:Set up index.
2024-11-12 19:15:03,585:INFO:Initializing predict_model()
2024-11-12 19:15:03,585:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C39D24E550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C39D71C220>)
2024-11-12 19:15:03,585:INFO:Checking exceptions
2024-11-12 19:15:03,585:INFO:Preloading libraries
2024-11-12 19:15:03,585:INFO:Set up data.
2024-11-12 19:15:03,587:INFO:Set up index.
2024-11-12 19:15:35,219:INFO:Initializing load_model()
2024-11-12 19:15:35,219:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:15:35,260:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 19:15:36,921:INFO:Initializing predict_model()
2024-11-12 19:15:36,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C39D6F04D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C39D2AB9C0>)
2024-11-12 19:15:36,921:INFO:Checking exceptions
2024-11-12 19:15:36,921:INFO:Preloading libraries
2024-11-12 19:15:36,921:INFO:Set up data.
2024-11-12 19:15:36,921:INFO:Set up index.
2024-11-12 19:31:32,932:INFO:Initializing load_model()
2024-11-12 19:31:32,932:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 19:31:32,958:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 20:19:42,803:INFO:Initializing load_model()
2024-11-12 20:19:42,803:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 20:19:42,823:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 20:20:36,468:INFO:Initializing load_model()
2024-11-12 20:20:36,468:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 20:20:36,516:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 20:30:41,452:INFO:Initializing predict_model()
2024-11-12 20:30:41,452:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C39B730990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C39D2AB2E0>)
2024-11-12 20:30:41,452:INFO:Checking exceptions
2024-11-12 20:30:41,452:INFO:Preloading libraries
2024-11-12 20:30:41,452:INFO:Set up data.
2024-11-12 20:30:41,452:INFO:Set up index.
2024-11-12 20:30:48,415:INFO:Initializing predict_model()
2024-11-12 20:30:48,415:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C39D24C1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C39D2AB740>)
2024-11-12 20:30:48,415:INFO:Checking exceptions
2024-11-12 20:30:48,415:INFO:Preloading libraries
2024-11-12 20:30:48,415:INFO:Set up data.
2024-11-12 20:30:48,433:INFO:Set up index.
2024-11-12 22:39:35,644:INFO:Initializing load_model()
2024-11-12 22:39:35,644:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 22:39:35,675:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 22:41:56,451:INFO:Initializing load_model()
2024-11-12 22:41:56,451:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 22:41:56,472:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 22:42:57,811:INFO:Initializing predict_model()
2024-11-12 22:42:57,811:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C39D65F410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C39D71E2A0>)
2024-11-12 22:42:57,811:INFO:Checking exceptions
2024-11-12 22:42:57,811:INFO:Preloading libraries
2024-11-12 22:42:57,811:INFO:Set up data.
2024-11-12 22:42:57,819:INFO:Set up index.
2024-11-12 23:26:36,588:INFO:Initializing load_model()
2024-11-12 23:26:36,591:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 23:26:36,611:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-12 23:35:44,372:INFO:Initializing load_model()
2024-11-12 23:35:44,372:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-12 23:35:44,388:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-13 11:26:38,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-13 11:26:38,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-13 11:26:38,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-13 11:26:38,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-13 11:26:40,473:INFO:Initializing load_model()
2024-11-13 11:26:40,474:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-13 11:26:40,689:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-13 11:28:13,885:INFO:Initializing load_model()
2024-11-13 11:28:13,885:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-13 11:28:13,903:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-13 11:58:52,677:INFO:Initializing load_model()
2024-11-13 11:58:52,677:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-13 11:58:52,717:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-13 12:20:47,259:INFO:Initializing load_model()
2024-11-13 12:20:47,259:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-13 12:20:47,281:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-13 12:43:16,481:INFO:Initializing predict_model()
2024-11-13 12:43:16,481:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002329D484850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002329E9D6F20>)
2024-11-13 12:43:16,481:INFO:Checking exceptions
2024-11-13 12:43:16,481:INFO:Preloading libraries
2024-11-13 12:43:16,493:INFO:Set up data.
2024-11-13 12:43:16,510:INFO:Set up index.
2024-11-13 14:16:24,371:INFO:Initializing load_model()
2024-11-13 14:16:24,371:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-13 14:16:24,392:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 10:18:24,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 10:18:24,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 10:18:24,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 10:18:24,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 10:18:26,561:INFO:Initializing load_model()
2024-11-14 10:18:26,561:INFO:load_model(model_name=my_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 10:18:26,813:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 10:19:17,391:INFO:Initializing predict_model()
2024-11-14 10:19:17,391:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020BA99E4310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020BD4CE51C0>)
2024-11-14 10:19:17,391:INFO:Checking exceptions
2024-11-14 10:19:17,391:INFO:Preloading libraries
2024-11-14 10:19:17,398:INFO:Set up data.
2024-11-14 10:19:17,406:INFO:Set up index.
2024-11-14 10:20:41,775:INFO:Initializing predict_model()
2024-11-14 10:20:41,775:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020BD4CE8DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['dteday'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'R...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=8, max_leaves=None, min_child_weight=2,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=100, n_jobs=-1,
                              num_parallel_tree=None, random_state=3025, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020BA733E340>)
2024-11-14 10:20:41,776:INFO:Checking exceptions
2024-11-14 10:20:41,776:INFO:Preloading libraries
2024-11-14 10:20:41,777:INFO:Set up data.
2024-11-14 10:20:41,779:INFO:Set up index.
2024-11-14 14:45:46,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 14:45:46,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 14:45:46,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 14:45:46,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-14 14:45:47,586:INFO:Initializing load_model()
2024-11-14 14:45:47,586:INFO:load_model(model_name=my_second_bike_model(1), platform=None, authentication=None, verbose=True)
2024-11-14 14:45:57,364:INFO:Initializing load_model()
2024-11-14 14:45:57,364:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:45:57,567:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:45:59,762:INFO:Initializing load_model()
2024-11-14 14:45:59,763:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:45:59,807:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:45:59,982:INFO:Initializing predict_model()
2024-11-14 14:45:59,983:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB9A265FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'Rush',
                                             'Wind', 'Hum', 'hr', 'mnth'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding'...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=7, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=50, n_jobs=-1,
                              num_parallel_tree=None, random_state=8162, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBF4E3E480>)
2024-11-14 14:45:59,983:INFO:Checking exceptions
2024-11-14 14:45:59,983:INFO:Preloading libraries
2024-11-14 14:45:59,983:INFO:Set up data.
2024-11-14 14:45:59,993:INFO:Set up index.
2024-11-14 14:46:03,016:INFO:Initializing load_model()
2024-11-14 14:46:03,016:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:46:03,046:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:46:03,831:INFO:Initializing load_model()
2024-11-14 14:46:03,831:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:46:03,862:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:46:04,099:INFO:Initializing predict_model()
2024-11-14 14:46:04,099:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBF0BB2D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'Rush',
                                             'Wind', 'Hum', 'hr', 'mnth'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding'...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=7, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=50, n_jobs=-1,
                              num_parallel_tree=None, random_state=8162, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EB9A315300>)
2024-11-14 14:46:04,099:INFO:Checking exceptions
2024-11-14 14:46:04,099:INFO:Preloading libraries
2024-11-14 14:46:04,099:INFO:Set up data.
2024-11-14 14:46:04,106:INFO:Set up index.
2024-11-14 14:46:08,086:INFO:Initializing load_model()
2024-11-14 14:46:08,086:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:46:08,117:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:46:08,877:INFO:Initializing load_model()
2024-11-14 14:46:08,879:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:46:08,912:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:46:09,088:INFO:Initializing predict_model()
2024-11-14 14:46:09,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBF0C0CB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'Rush',
                                             'Wind', 'Hum', 'hr', 'mnth'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding'...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=7, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=50, n_jobs=-1,
                              num_parallel_tree=None, random_state=8162, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EB9A2DF9C0>)
2024-11-14 14:46:09,088:INFO:Checking exceptions
2024-11-14 14:46:09,088:INFO:Preloading libraries
2024-11-14 14:46:09,089:INFO:Set up data.
2024-11-14 14:46:09,095:INFO:Set up index.
2024-11-14 14:46:11,722:INFO:Initializing load_model()
2024-11-14 14:46:11,722:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:46:11,749:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:46:12,598:INFO:Initializing load_model()
2024-11-14 14:46:12,598:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 14:46:12,637:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 14:46:12,807:INFO:Initializing predict_model()
2024-11-14 14:46:12,808:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB98C30AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'Rush',
                                             'Wind', 'Hum', 'hr', 'mnth'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding'...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=7, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=50, n_jobs=-1,
                              num_parallel_tree=None, random_state=8162, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EB98E8FEC0>)
2024-11-14 14:46:12,808:INFO:Checking exceptions
2024-11-14 14:46:12,808:INFO:Preloading libraries
2024-11-14 14:46:12,808:INFO:Set up data.
2024-11-14 14:46:12,815:INFO:Set up index.
2024-11-14 16:20:07,518:INFO:Initializing load_model()
2024-11-14 16:20:07,519:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:20:07,566:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:20:26,590:INFO:Initializing load_model()
2024-11-14 16:20:26,590:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:20:26,607:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:20:43,749:INFO:Initializing load_model()
2024-11-14 16:20:43,749:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:20:43,768:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:20:56,457:INFO:Initializing load_model()
2024-11-14 16:20:56,457:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:20:56,474:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:22:15,123:INFO:Initializing load_model()
2024-11-14 16:22:15,123:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:22:15,142:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:22:56,790:INFO:Initializing load_model()
2024-11-14 16:22:56,790:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:22:56,810:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:23:36,225:INFO:Initializing load_model()
2024-11-14 16:23:36,225:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:23:36,242:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:26:59,656:INFO:Initializing load_model()
2024-11-14 16:26:59,656:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:26:59,670:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-14 16:27:48,520:INFO:Initializing load_model()
2024-11-14 16:27:48,520:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-14 16:27:48,544:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-15 15:14:07,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:14:07,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:14:07,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:14:07,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:14:09,230:INFO:Initializing load_model()
2024-11-15 15:14:09,230:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:14:09,456:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-15 15:14:34,541:INFO:Initializing load_model()
2024-11-15 15:14:34,541:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:14:34,559:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-15 15:15:15,382:INFO:Initializing load_model()
2024-11-15 15:15:15,382:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:15:15,408:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 15:15:55,348:INFO:Initializing load_model()
2024-11-15 15:15:55,348:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:15:55,374:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 15:16:21,806:INFO:Initializing load_model()
2024-11-15 15:16:21,806:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:16:21,824:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 15:16:35,527:INFO:Initializing load_model()
2024-11-15 15:16:35,528:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:16:35,547:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 15:16:53,463:INFO:Initializing load_model()
2024-11-15 15:16:53,463:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:16:53,482:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 15:18:08,554:INFO:Initializing load_model()
2024-11-15 15:18:08,555:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:18:08,580:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 15:18:27,348:INFO:Initializing load_model()
2024-11-15 15:18:27,349:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:18:27,367:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 15:35:07,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:35:07,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:35:07,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:35:07,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-15 15:35:08,506:INFO:Initializing load_model()
2024-11-15 15:35:08,506:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:35:08,590:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-15 15:39:26,279:INFO:Initializing load_model()
2024-11-15 15:39:26,280:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 15:39:26,319:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 17:16:36,412:INFO:Initializing load_model()
2024-11-15 17:16:36,412:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 17:16:36,451:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 17:25:55,342:INFO:Initializing load_model()
2024-11-15 17:25:55,342:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 17:25:55,360:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 17:26:29,794:INFO:Initializing load_model()
2024-11-15 17:26:29,794:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 17:26:29,809:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 17:26:59,791:INFO:Initializing load_model()
2024-11-15 17:26:59,791:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 17:26:59,815:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 17:28:00,823:INFO:Initializing load_model()
2024-11-15 17:28:00,823:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 17:28:00,839:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 17:28:10,533:INFO:Initializing load_model()
2024-11-15 17:28:10,533:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-15 17:28:10,564:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-15 17:28:57,952:INFO:Initializing predict_model()
2024-11-15 17:28:57,952:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000180A6F90F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'Rush',
                                             'Wind', 'Hum', 'hr', 'mnth'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding'...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=7, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=50, n_jobs=-1,
                              num_parallel_tree=None, random_state=8162, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000180D09FC540>)
2024-11-15 17:28:57,952:INFO:Checking exceptions
2024-11-15 17:28:57,952:INFO:Preloading libraries
2024-11-15 17:28:57,952:INFO:Set up data.
2024-11-15 17:28:57,967:INFO:Set up index.
2024-11-16 11:16:16,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 11:16:16,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 11:16:16,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 11:16:16,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 11:16:19,231:INFO:Initializing load_model()
2024-11-16 11:16:19,231:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 11:16:19,515:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-16 11:17:38,540:INFO:Initializing load_model()
2024-11-16 11:17:38,540:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 11:17:38,576:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}
  warnings.warn(

2024-11-16 11:19:30,232:INFO:Initializing load_model()
2024-11-16 11:19:30,232:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 11:19:30,294:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 11:24:50,222:INFO:Initializing predict_model()
2024-11-16 11:24:50,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F598FD0290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'Rush',
                                             'Wind', 'Hum', 'hr', 'mnth'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding'...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=7, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=50, n_jobs=-1,
                              num_parallel_tree=None, random_state=8162, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F59ABD6F20>)
2024-11-16 11:24:50,222:INFO:Checking exceptions
2024-11-16 11:24:50,222:INFO:Preloading libraries
2024-11-16 11:24:50,222:INFO:Set up data.
2024-11-16 11:24:50,238:INFO:Set up index.
2024-11-16 11:25:10,454:INFO:Initializing predict_model()
2024-11-16 11:25:10,454:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5993127D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['weathersit', 'temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['weekday', 'season', 'holiday',
                                             'workingday', 'TOD', 'Rush',
                                             'Wind', 'Hum', 'hr', 'mnth'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding'...
                              feature_types=None, gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.1,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=7, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=50, n_jobs=-1,
                              num_parallel_tree=None, random_state=8162, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F59A8EC860>)
2024-11-16 11:25:10,454:INFO:Checking exceptions
2024-11-16 11:25:10,454:INFO:Preloading libraries
2024-11-16 11:25:10,454:INFO:Set up data.
2024-11-16 11:25:10,473:INFO:Set up index.
2024-11-16 12:14:23,439:INFO:Initializing load_model()
2024-11-16 12:14:23,439:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:14:23,479:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:14:57,209:INFO:Initializing load_model()
2024-11-16 12:14:57,209:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:14:57,229:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:16:56,015:INFO:Initializing load_model()
2024-11-16 12:16:56,015:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:16:56,046:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:17:09,330:INFO:Initializing load_model()
2024-11-16 12:17:09,330:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:17:09,345:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:17:46,126:INFO:Initializing load_model()
2024-11-16 12:17:46,126:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:17:46,146:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:18:58,222:INFO:Initializing load_model()
2024-11-16 12:18:58,222:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:18:58,241:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:23:20,736:INFO:Initializing load_model()
2024-11-16 12:23:20,736:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:23:20,749:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:26:45,565:INFO:Initializing load_model()
2024-11-16 12:26:45,565:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:26:45,583:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:30:11,433:INFO:Initializing load_model()
2024-11-16 12:30:11,433:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:30:11,450:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:33:15,252:INFO:Initializing load_model()
2024-11-16 12:33:15,253:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:33:15,272:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:33:51,379:INFO:Initializing load_model()
2024-11-16 12:33:51,379:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:33:51,393:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:34:07,427:INFO:Initializing load_model()
2024-11-16 12:34:07,427:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:34:07,448:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:43:27,132:INFO:Initializing load_model()
2024-11-16 12:43:27,132:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:43:27,146:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:45:16,269:INFO:Initializing load_model()
2024-11-16 12:45:16,269:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:45:16,283:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:49:16,311:INFO:Initializing load_model()
2024-11-16 12:49:16,311:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:49:16,329:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:49:16,381:INFO:Initializing load_model()
2024-11-16 12:49:16,381:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:49:16,394:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:50:11,193:INFO:Initializing load_model()
2024-11-16 12:50:11,193:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:50:11,219:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:50:11,267:INFO:Initializing load_model()
2024-11-16 12:50:11,267:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:50:11,278:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:53:06,164:INFO:Initializing load_model()
2024-11-16 12:53:06,166:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:53:06,187:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:56:04,273:INFO:Initializing load_model()
2024-11-16 12:56:04,273:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:56:04,289:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:56:04,329:INFO:Initializing load_model()
2024-11-16 12:56:04,329:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:56:04,347:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:56:56,789:INFO:Initializing load_model()
2024-11-16 12:56:56,789:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:56:56,806:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:56:56,867:INFO:Initializing load_model()
2024-11-16 12:56:56,867:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:56:56,883:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:57:43,040:INFO:Initializing load_model()
2024-11-16 12:57:43,040:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:57:43,062:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:57:43,113:INFO:Initializing load_model()
2024-11-16 12:57:43,113:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:57:43,129:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:57:43,252:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:86: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 12:57:43,252:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:88: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 12:57:43,252:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:95: UserWarning:

Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.


2024-11-16 12:59:41,817:INFO:Initializing load_model()
2024-11-16 12:59:41,817:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:59:41,837:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:59:41,890:INFO:Initializing load_model()
2024-11-16 12:59:41,890:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 12:59:41,903:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 12:59:42,016:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:86: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 12:59:42,017:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:88: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:00:17,284:INFO:Initializing load_model()
2024-11-16 13:00:17,284:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:00:17,301:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:00:17,356:INFO:Initializing load_model()
2024-11-16 13:00:17,356:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:00:17,370:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:00:17,482:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:76: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:00:17,483:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:78: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:04:17,931:INFO:Initializing load_model()
2024-11-16 13:04:17,931:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:04:17,952:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:04:18,049:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:76: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:04:18,050:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:78: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:06:45,449:INFO:Initializing load_model()
2024-11-16 13:06:45,449:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:06:45,473:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:06:45,528:INFO:Initializing load_model()
2024-11-16 13:06:45,528:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:06:45,545:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:06:45,657:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:77: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:06:45,657:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:79: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:07:49,196:INFO:Initializing load_model()
2024-11-16 13:07:49,196:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:07:49,214:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:07:49,265:INFO:Initializing load_model()
2024-11-16 13:07:49,265:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:07:49,277:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:07:49,390:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:77: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:07:49,391:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:79: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:08:35,375:INFO:Initializing load_model()
2024-11-16 13:08:35,375:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:08:35,395:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:08:35,444:INFO:Initializing load_model()
2024-11-16 13:08:35,444:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:08:35,456:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:08:35,575:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:80: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:08:35,575:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:82: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:09:21,629:INFO:Initializing load_model()
2024-11-16 13:09:21,629:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:09:21,649:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:09:21,699:INFO:Initializing load_model()
2024-11-16 13:09:21,699:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:09:21,713:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:09:21,828:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:80: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:09:21,829:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:82: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:09:38,090:INFO:Initializing load_model()
2024-11-16 13:09:38,090:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:09:38,109:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:09:38,162:INFO:Initializing load_model()
2024-11-16 13:09:38,162:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:09:38,176:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:09:38,286:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:80: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:09:38,287:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:82: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:09:49,660:INFO:Initializing load_model()
2024-11-16 13:09:49,660:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:09:49,681:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:09:49,728:INFO:Initializing load_model()
2024-11-16 13:09:49,728:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:09:49,742:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:09:49,855:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:80: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:09:49,856:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:82: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:10:05,345:INFO:Initializing load_model()
2024-11-16 13:10:05,345:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:10:05,357:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:10:05,408:INFO:Initializing load_model()
2024-11-16 13:10:05,408:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:10:05,420:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:10:05,535:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:80: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:10:05,536:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:82: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:12:54,155:INFO:Initializing load_model()
2024-11-16 13:12:54,155:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:12:54,180:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:12:54,229:INFO:Initializing load_model()
2024-11-16 13:12:54,229:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:12:54,239:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:12:54,361:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:81: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:12:54,371:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:83: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:13:19,556:INFO:Initializing load_model()
2024-11-16 13:13:19,556:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:13:19,580:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:13:19,627:INFO:Initializing load_model()
2024-11-16 13:13:19,627:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:13:19,643:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:13:19,761:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:81: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:13:19,762:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:83: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:15:32,288:INFO:Initializing load_model()
2024-11-16 13:15:32,288:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:15:32,304:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:15:32,355:INFO:Initializing load_model()
2024-11-16 13:15:32,355:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:15:32,369:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:15:32,488:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:81: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:15:32,489:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:83: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:16:55,036:INFO:Initializing load_model()
2024-11-16 13:16:55,036:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:16:55,051:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:16:55,092:INFO:Initializing load_model()
2024-11-16 13:16:55,092:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:16:55,112:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:16:55,232:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:81: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:16:55,233:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:83: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:17:31,100:INFO:Initializing load_model()
2024-11-16 13:17:31,100:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:17:31,117:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:17:31,166:INFO:Initializing load_model()
2024-11-16 13:17:31,166:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:17:31,181:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:17:31,296:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:81: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:17:31,297:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:83: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


2024-11-16 13:18:10,754:INFO:Initializing load_model()
2024-11-16 13:18:10,754:INFO:load_model(model_name=my_second_bike_model, platform=None, authentication=None, verbose=True)
2024-11-16 13:18:10,772:WARNING:C:\Users\frida\anaconda3\envs\streamlit\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '7.8.1', 'tqdm': '4.67.0', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.4.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2024-11-16 13:18:10,882:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:81: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "ro" (-> color='r'). The keyword argument will take precedence.


2024-11-16 13:18:10,882:WARNING:C:\Users\frida\Desktop\IE\Python for Data Analysis 2\python group assgm\results.py:83: UserWarning:

color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.


